{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to FF's Notebooks","text":""},{"location":"#some-interesting-cs-courses","title":"Some interesting CS Courses","text":""},{"location":"#_1","title":"\u5927\u4e00","text":"<ul> <li>x86 ASM<ul> <li>Taught by BHH, a hacker in my dream.</li> <li>One of the most meaningful classes I've taken, where I learn from hardware implementation in computer (My fundation on ICS) to basic x86 ASM compiling and programming. </li> </ul> </li> </ul>"},{"location":"#_2","title":"\u5927\u4e8c\u4e0a","text":"<ul> <li> <p>Digit Logic Design</p> <ul> <li>Taught by CM, one of the best teacher I've met.</li> <li>Concretely learn the basic digit design, and some basic hardware programming (Verilog)</li> </ul> </li> <li> <p>CS231n</p> <ul> <li>My work in learning CS231n</li> <li>It's truly the best course for me to learn CV<ul> <li>Give me a preliminary understanding of CV</li> <li>Introduce many popular and typical Algorithms, FC, CNN, RNN, Transformer, GAN, Self-Supervised \u2026\u2026</li> <li>Leads me to try to read some famous papers by myself</li> <li>Help me gain a deeper insight into the model with moderately difficult project which can be auto-checked </li> </ul> </li> </ul> </li> </ul>"},{"location":"#_3","title":"\u5927\u4e8c\u4e0b","text":"<ul> <li> <p>ADS</p> <ul> <li>Taught by CH, my senior and a intelligent researcher </li> <li>Learn some advanced data structures, algorithm, and some advanced analysis</li> <li>Despite of my experience in Informatics Olympiad, I still feel it challenging</li> </ul> </li> <li> <p>OOP</p> <ul> <li>Taught by WK, a famous teacher in ZJU</li> <li>Learn some basic OOP concepts and some advanced design patterns using C++</li> </ul> </li> <li> <p>Information Theory</p> <ul> <li>Taught by YGD, a professor in ZJU</li> <li>Learn some basic information theory, which is significant in machine learning theory especially in proof, so I think it's necessary to take this course carefully and take notes</li> </ul> </li> <li> <p>Database</p> <ul> <li>Taught by MXY, a gentle professor and Big Data scholar in ZJU</li> <li>Learn basic and advanced database concepts and SQL programming</li> <li>Too many points, so I choose to fork other people's notes and take some notes by myself</li> <li>link</li> </ul> </li> <li> <p>Computer Organization</p> <ul> <li>Taught by YK, a professor in ZJU</li> <li>Learn some deep computer organization concepts of RISC-V structure(Single Cycle CPU, Pipelined-CPU, Cache...), which is significant in computer architecture especially in hardware design, so I think it's necessary to take this course carefully and take notes</li> <li>Since I'm so busy in this semester, I choose to fork other people's notes and only take some additional notes</li> </ul> </li> </ul>"},{"location":"#some-useful-tools-in-learning","title":"Some useful tools in learning","text":"<ul> <li> <p>Git</p> <ul> <li>Undoubtedly one of the most useful tools as distributed version control system</li> <li>Workspace history recorded</li> <li>Remote workspace storage &amp; cooperation</li> </ul> </li> <li> <p>Makefile &amp; CMake</p> <ul> <li>Makefile is a tool to compile and link multiple source codes</li> <li>CMake is a efficient tool to help generate Makefile (Basically learned to tutorial STEP3)</li> </ul> </li> </ul>"},{"location":"#collections-of-materials","title":"Collections of Materials","text":"<ul> <li> <p>AI Materials</p> <ul> <li>Record some useful and famous papers and resources in my AI learning. </li> </ul> </li> <li> <p>My AI repositoy</p> <ul> <li>Some little notes of my AI trying. </li> </ul> </li> </ul>"},{"location":"ADS/","title":"ADS","text":"<p>\u7b2c\u4e00\u8282\u8bfe\u5c31\u8bb2\u4e86AVL+Splay+\u644a\u8fd8\u5206\u6790\uff0c\u8ba9\u4fe1\u606f\u7ade\u8d5b\u9000\u5f79\u9009\u624b\u7684\u6211\u5df2\u7ecf\u6c57\u6d41\u6d43\u80cc\u2026\u2026</p>"},{"location":"ADS/#data-structrure","title":"Data Structrure","text":""},{"location":"ADS/#avl","title":"AVL","text":"<p>\u5b9a\u4e49\uff1a\u4efb\u610f\u8282\u70b9\u5de6\u53f3\u5b50\u6811\u9ad8\u5ea6\u5dee\u4e0d\u5927\u4e8e1</p> <p>Balance factor = \\(h_L - h_R \\in \\set{-1, 0, 1}\\)</p> <ul> <li> <p>\u590d\u6742\u5ea6\u5206\u6790\uff1a</p> <ul> <li> <p>\u5bf9\u4e8e\u5e38\u89c1\u64cd\u4f5c\uff08\u63d2\u5165\u3001\u5220\u9664\u3001\u67e5\u8be2\uff09\\(O(h)\\)</p> </li> <li> <p>\u7531\u5b9a\u4e49\uff0c\u8ba9\u9ad8\u5ea6\u6700\u5927\uff0c\u6709\\(N_{h} = N_{h-1} + N_{h-2} + 1\\)</p> </li> <li> <p>\u5316\u7b80\uff0c\u5f97\u5230\\((N_{h} + 1)= (N_{h-1} + 1) + (N_{h-2} + 1)\\)</p> </li> <li> <p>\u7531\u6590\u6ce2\u90a3\u5951\u6570\u5217\u76f8\u5173\u77e5\u8bc6\uff0c\u5f97\\(N_h = F_{h+3} - 1\\) (\u7a7a\u6811\u4e3a-1)</p> </li> <li> <p>\u7531\u6b64\u53ef\u5f97\uff0c\\(h = O(\\log N)\\)</p> </li> </ul> </li> <li> <p>\u7ef4\u62a4\uff08Rotation\uff09</p> <ul> <li> <p>\u7531\u5b9a\u4e49\u7684\u4e25\u683c\u6027\uff0c\u53ef\u77e5\u53ea\u8981\u5904\u7406\u6700\u5c0f\u4e0d\u5e73\u8861\u5b50\u6811\u5373\u53ef</p> </li> <li> <p>\u4e2a\u4eba\u611f\u89c9\u65cb\u8f6c\u53cd\u800c\u4e0d\u591f\u76f4\u89c2\uff0c\u66f4\u50cf\u662f\u5c06\u4e0b\u9762\u7684\u8282\u70b9\u5f80\u4e0a\u9762\u201c\u62ce\u201d\u8d77\u6765\uff0c\u4ece\u800c\u8be5\u8282\u70b9\uff08\u5b50\u6811\u6839\u8282\u70b9\uff09\u7684\u5404\u4e2a\u513f\u5b50\u5411\u4e24\u8fb9\u201c\u6389\u4e0b\u53bb\u201d\uff0c\u6574\u68f5\u5b50\u6811\u4e5f\u5c31\u50cf\u662f\u88ab\u5c55\u5e73\u4e86\u4e00\u6837\u66f4\u52a0\u5e73\u8861\u4e86</p> </li> <li> <p>LL / RR Rotation</p> <ul> <li> <p>\u5355\u94fe\u503e\u659c\uff0c\u5c06\u4e2d\u95f4\u8282\u70b9\u62ce\u8d77\u6765\uff08\u5c06\u4e2d\u95f4\u8282\u70b9\u5411\u4e0a\u65cb\u8f6c\uff09\u5c31\u597d</p> </li> <li> <p></p> </li> </ul> </li> <li> <p>LR / RL Rotation</p> <ul> <li> <p>\u5f2f\u66f2\u94fe\uff0c\u5c06\u6743\u503c\u4e3a\u4e2d\u95f4\u503c\uff08\u6700\u4e0b\u7aef\u513f\u5b50\uff09\u7684\u8282\u70b9\u62ce\u8d77\u6765\uff0c\u8be5\u8282\u70b9\u7684\u4e24\u4e2a\u513f\u5b50\u5206\u522b\u5411\u4e24\u8fb9\u6389\u4e0b\u53bb</p> </li> <li> <p>\u8fd8\u6709\u4e00\u79cd\u7406\u89e3\uff0c\u5c06\u8fd9\u79cd\u60c5\u51b5\u7406\u89e3\u4e3a\u6700\u4e0b\u7aef\u513f\u5b50\u5411\u4e0arotation\u4e24\u6b21 </p> </li> <li> <p></p> </li> </ul> </li> </ul> </li> </ul> Code AVL Tree<pre><code>struct Node{\n    int data, H;\n    Node *Ls, *Rs;\n    Node(int data): data(data), H(0), Ls(NULL), Rs(NULL){}\n    int Update(){\n        int HL = -1, HR = -1;\n        if(Ls != NULL) HL = Ls-&gt;H;\n        if(Rs != NULL) HR = Rs-&gt;H;\n        H = max(HL, HR) + 1;\n        return abs(HL - HR);\n    }\n};\nstruct AVL{\n    Node *Rot;\n\n    //Structure\n    void Clear(Node *x){\n        if(x-&gt;Ls) Clear(x-&gt;Ls);\n        if(x-&gt;Rs) Clear(x-&gt;Rs);\n        delete x;\n    }\n    Node *Insert(Node *p, int x){\n        if(p == NULL) return new Node(x);\n        if(x &lt; p-&gt;data) p-&gt;Ls = Insert(p-&gt;Ls, x);else p-&gt;Rs = Insert(p-&gt;Rs, x);\n\n        if(p-&gt;Update() &gt; 1) return Balance(p,x);\n        return p;\n    }\n    void Rotate(Node **X, Node **Y, bool p){\n        // p = 0 -&gt; Left, p = 1 -&gt; Right\n        // rotate X to Y\n        if(!p){\n            (*Y)-&gt;Ls = (*X)-&gt;Rs;\n            (*X)-&gt;Rs = *Y;\n        }else{\n            (*Y)-&gt;Rs = (*X)-&gt;Ls;\n            (*X)-&gt;Ls = *Y;\n        }\n        (*Y)-&gt;Update(), (*X)-&gt;Update();\n    }\n    Node *Balance(Node *Trouble, int x){\n        Node *G = Trouble, *F, *X;\n        bool p, q;\n        if(x &lt; G-&gt;data) F = G-&gt;Ls, p = 0;else F = G-&gt;Rs, p = 1;\n        if(x &lt; F-&gt;data) X = F-&gt;Ls, q = 0;else X = F-&gt;Rs, q = 1;\n        if(p ^ q) Rotate(&amp;X, &amp;F, q), Rotate(&amp;X, &amp;G, p);\n            else Rotate(&amp;F, &amp;G, p), X = F;\n        return X;\n    }\n\n    void Print(Node *x){\n        printf(\"%d \",x-&gt;data);\n        if(x-&gt;Ls) Print(x-&gt;Ls);\n        if(x-&gt;Rs) Print(x-&gt;Rs);\n    }\n\n    // User\n    void Clear(){if(Rot) Clear(Rot);Rot = NULL;}\n    void PrintRoot(){printf(\"%d\\n\",Rot-&gt;data);}\n    void Insert(int x){Rot = Insert(Rot, x);}\n\n}Tree;\n</code></pre>"},{"location":"ADS/#splay","title":"Splay","text":"<ul> <li> <p>\u6bcf\u6b21\u67e5\u8be2\u65f6\uff0c\u5c06\u67e5\u8be2\u7684\u8282\u70b9\u65cb\u8f6c\u5230\u6839\u8282\u70b9\uff0c\u4ece\u800c\u5728\u8fc7\u7a0b\u4e2d\u5c06\u6811\u5c55\u5e73</p> </li> <li> <p>\u7531\u4e8e\u52a8\u6001\u81ea\u9002\u5e94\u7b49\u7279\u6027\uff0c\u5b9e\u9645\u4e0asplay\u6811\u975e\u5e38\u5f3a\u5927</p> </li> <li> <p>\u5747\u644a\u590d\u6742\u5ea6\uff1a\\(O(\\log N)\\)</p> </li> <li> <p>\u7ef4\u62a4\uff08ZigZag\uff09</p> <ul> <li> <p>\u76ee\u7684\u4e0eAVL\u7565\u6709\u4e0d\u540c\uff0cAVL\u5b8c\u5168\u662f\u4e3a\u4e86\u4fdd\u6301\u6811\u7684\u5e73\u8861\uff0c\u800cSplay\u662f\u4e3a\u4e86\u5c06\u67e5\u8be2\u7684\u8282\u70b9\u5411\u4e0a\u79fb\u52a8\u7684\u540c\u65f6\u5c3d\u91cf\u5c55\u5e73\u6811\uff08\u4e00\u822c\u4e3a\u6bcf\u6b21\u8003\u8651\u5f53\u524d\u8282\u70b9\u3001\u7236\u8282\u70b9\u548c\u7956\u5148\u8282\u70b9\uff0c\u9009\u62e9\u6700\u5408\u9002\u7684\u65cb\u8f6c\u65b9\u6cd5\uff09</p> </li> <li> <p>Zig</p> <ul> <li> <p>\u5df2\u7ecf\u662f\u6839\u8282\u70b9\u7684\u513f\u5b50\uff0c\u76f4\u63a5\u5411\u4e0a\u65cb\u8f6c\u4e00\u6b21\u5373\u53ef</p> </li> <li> <p> </p> </li> </ul> </li> <li> <p>ZigZig</p> <ul> <li> <p>\u503e\u659c\u94fe\uff0c\u5c06\u5f53\u524d\u8282\u70b9\u7684\u7236\u8282\u70b9\u5411\u4e0a\u65cb\u8f6c\u4e00\u6b21\uff0c\u518d\u5c06\u5f53\u524d\u8282\u70b9\u5411\u4e0a\u65cb\u8f6c\u4e00\u6b21</p> </li> <li> <p>\u4e0d\u80fd\u76f4\u63a5\u5c06\u5f53\u524d\u8282\u70b9\u5411\u4e0a\u65cb\u8f6c\u4e24\u6b21\uff0c\u56e0\u4e3a\u8fd9\u6837\u4f1a\u5bfc\u81f4\u503e\u659c\u94fe\u6b6a\u5411\u53e6\u4e00\u8fb9</p> </li> <li> <p>\u4e5f\u53ef\u4ee5\u770b\u6210\u76f4\u63a5\u5c06\u5f53\u524d\u8282\u70b9\u5f80\u6700\u4e0a\u9762\u4e00\u63d0\uff0c\u5269\u4e0b\u7684\u513f\u5b50\u4eec\u201c\u7eb7\u7eb7\u201d\u5f80\u4e0b\u6389</p> </li> <li> <p></p> </li> </ul> </li> <li> <p>ZigZag </p> <ul> <li> <p>\u5f2f\u66f2\u94fe\uff0c\u76f4\u63a5\u5c06\u5f53\u524d\u8282\u70b9\u5411\u4e0a\u65cb\u8f6c\u4e24\u6b21</p> </li> <li> <p>\u4e5f\u53ef\u4ee5\u770b\u6210\u76f4\u63a5\u5c06\u5f53\u524d\u8282\u70b9\u5f80\u6700\u4e0a\u9762\u4e00\u63d0\uff0c\u4e24\u4e2a\u513f\u5b50\u88ab\u7236\u8282\u70b9\u548c\u7956\u5148\u8282\u70b9\u5747\u5206\uff0c\u4ece\u800c\u8d8b\u5411\u5e73\u8861</p> </li> <li> <p></p> </li> </ul> </li> </ul> </li> <li> <p>NOTES:</p> <ul> <li>Splaying roughly halves the depth of most nodes on the access path. </li> </ul> </li> </ul> Code (Not checked yet) Splay Tree<pre><code>struct Node{\n    Node *fa, *v[2];\n    int data;\n    Node (int x, Node *F, Node *Pivot):data(x),fa(F),v{Pivot, Pivot}{}\n};\ntypedef Node *Pt;\nPt NUL;// A trick to avoid NULL pointer\nstruct SplayTree{\n    Pt Rot;\n    void Print(Pt i){// Preorder\n        if(i == NUL) return;\n        cout &lt;&lt; i-&gt;data &lt;&lt; \" \";\n        Print(i-&gt;v[0]), Print(i-&gt;v[1]);\n    }\n    bool Is(Pt i){return (i-&gt;fa-&gt;v[1] == i);}// 0: left son, 1: right son\n    void Rotate(Pt i){ // Rotate i to its father\n        Pt F = i-&gt;fa, G = F-&gt;fa; bool p = Is(i), q = Is(F);\n        F-&gt;v[p] = i-&gt;v[p ^ 1], i-&gt;v[p^1]-&gt;fa = F;\n        F-&gt;fa = i, i-&gt;v[p^1] = F;\n        G-&gt;v[q] = i, i-&gt;fa = G;\n    }\n    void Splay(Pt i){// Splay i to the root\n        while(i-&gt;fa != NUL){\n            if(i-&gt;fa-&gt;fa != NUL) Rotate(Is(i) == Is(i-&gt;fa) ? i-&gt;fa : i), Rotate(i);\n                else Rotate(i);\n        }\n        Rot = i;\n    }\n    void Insert(Pt &amp;i, Pt F, int x){\n        if(i == NUL) return (void)(Splay(i = new Node(x, F, NUL)));\n        Insert(i-&gt;v[x &gt; i-&gt;data], i, x);\n    }\n\n    // User Interface\n    void Clear(){Rot = NUL = new Node(-1, NULL, NULL);}\n    void Print(){Print(Rot);cout &lt;&lt; endl;}\n    void Insert(int x){Insert(Rot, NUL, x);}\n    void Find(int x){\n        Pt i = Rot;\n        while(i != NUL &amp;&amp; i-&gt;data != x) i = i-&gt;v[x &gt; i-&gt;data];\n        if(i != NUL) Splay(i);\n    }\n    void Delete(int x){\n        Find(x);// Splay x to the root\n        if(Rot-&gt;v[0] == NUL) Rot = Rot-&gt;v[1], Rot-&gt;fa = NUL;\n        else{\n            Pt i = Rot-&gt;v[0], X = Rot;\n            while(i-&gt;v[1] != NUL) i = i-&gt;v[1];// Find the maximum in the left subtree\n            Splay(i);\n            i-&gt;v[1] = X-&gt;v[1], X-&gt;v[1]-&gt;fa = i;\n        }\n    }\n}Tree;\n</code></pre>"},{"location":"ADS/#b-tree","title":"B+ Tree","text":"<p>\u4e00\u79cd\u591a\u8def\u641c\u7d22\u6811\uff0c\u5e38\u7528\u4e8e\u6570\u636e\u5e93\u7d22\u5f15\u3001\u6587\u4ef6\u7cfb\u7edf\u7b49</p> <ul> <li> <p>\u7279\u5f81 \uff08Order of M\uff09</p> <ul> <li> <p>\u6839\u8282\u70b9\u6709\\([2,M]\\)\u4e2a\u5b50\u8282\u70b9</p> </li> <li> <p>\u5176\u4f59\u975e\u53f6\u8282\u70b9\u6709\\([[\\frac{M+1}{2}],M]\\)\u4e2a\u5b50\u8282\u70b9\uff0c\u7528 K - 1 \u4e2a\u5173\u952e\u5b57\u8fdb\u884c\u533a\u95f4\u5212\u5206</p> </li> <li> <p>\u6240\u6709\u53f6\u8282\u70b9\u5728\u540c\u4e00\u5c42\uff0c\u4e14\u90fd\u5728\u6700\u5e95\u5c42, \u4e14\u90fd\u6709\\([[\\frac{M+1}{2}],M]\\)\u4e2a\u5173\u952e\u5b57</p> </li> </ul> </li> <li> <p>\u4f18\u52bf\uff1a</p> <ul> <li> <p>\u53ef\u4ee5\u770b\u51fa\uff0cB+\u6811\u7684\u9ad8\u5ea6\u975e\u5e38\u4f4e\uff0c\u6574\u68f5\u6811\u603b\u4f53\u4e0a\u975e\u5e38\u201c\u6241\u5e73\u201d\uff0c\u56e0\u800c\u67e5\u8be2\u6548\u7387\u975e\u5e38\u9ad8</p> </li> <li> <p>\u7531\u4e8e\u53f6\u8282\u70b9\u90fd\u5728\u540c\u4e00\u5c42\uff0c\u82e5\u5bf9\u5144\u5f1f\u8282\u70b9\u95f4\u5efa\u7acb\u6307\u9488\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u8fdb\u884c\u8303\u56f4\u67e5\u8be2</p> </li> </ul> </li> <li> <p>\u7ef4\u62a4</p> <ul> <li> <p>\u63d2\u5165</p> <ul> <li> <p>\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u627e\u5230\u5408\u9002\u7684\u53f6\u8282\u70b9\uff0c\u63d2\u5165\u5173\u952e\u5b57</p> </li> <li> <p>\u82e5\u53f6\u8282\u70b9\u5173\u952e\u5b57\u6570\u76ee\u8d85\u8fc7\u4e0a\u9650\uff0c\u5c06\u8282\u70b9\u5747\u5206\u4e3a\\([\\frac{M+1}{2}],[\\frac{M}{2}]\\)\u4e24\u90e8\u5206\uff0c\u5e76\u66f4\u65b0\u5212\u5206\u5173\u952e\u5b57\u4e3a\u53f3\u534a\u8fb9\u7684\u6700\u5c0f\u503c</p> </li> <li> <p>\u9012\u5f52\u5411\u4e0a\uff0c\u82e5\u7236\u8282\u70b9\u5173\u952e\u5b57\u6570\u76ee\u8d85\u8fc7\u4e0a\u9650\uff0c\u5206\u88c2\u4e3a\\([\\frac{M+1}{2}],[\\frac{M}{2}]\\)\u4e24\u90e8\u5206\uff0c\u5e76\u66f4\u65b0\u7236\u8282\u70b9\u5904\u5173\u952e\u5b57\u4e3a\u4e2d\u95f4\u5269\u4f59\u7684\u4e00\u4e2a\u5212\u5206\u5173\u952e\u5b57</p> </li> <li> <p>\u82e5\u5230\u8fbe\u6839\u8282\u70b9\uff0c\u5219\u65b0\u5efa\u8282\u70b9\uff0c\u5373\u5168\u6811\u9ad8\u5ea6\u52a0\u4e00</p> </li> </ul> </li> <li> <p>\u5220\u9664</p> <ul> <li> <p>\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u627e\u5230\u5408\u9002\u7684\u53f6\u8282\u70b9\uff0c\u5220\u9664\u5173\u952e\u5b57</p> </li> <li> <p>\u82e5\u53f6\u8282\u70b9\u5173\u952e\u5b57\u6570\u76ee\u4f4e\u4e8e\u4e0b\u9650\uff0c\u627e\u5230\u5144\u5f1f\u8282\u70b9\uff0c\u82e5\u5144\u5f1f\u8282\u70b9\u5173\u952e\u5b57\u6570\u76ee\u5927\u4e8e\u4e0b\u9650\uff0c\u548c\u5144\u5f1f\u5e73\u5206\u8282\u70b9</p> </li> <li> <p>\u82e5\u5144\u5f1f\u8282\u70b9\u5173\u952e\u5b57\u6570\u76ee\u4e5f\u4f4e\u4e8e\u4e0b\u9650\uff0c\u5c06\u5f53\u524d\u8282\u70b9\u4e0e\u5144\u5f1f\u8282\u70b9\u5408\u5e76\uff0c\u5220\u9664\u7236\u8282\u70b9\u5904\u7684\u4e00\u4e2a\u5173\u952e\u5b57</p> </li> <li> <p>\u9012\u5f52\u5411\u4e0a\uff0c\u5bf9\u7236\u8282\u70b9\u8fdb\u884c\u76f8\u540c\u64cd\u4f5c</p> </li> <li> <p>\u82e5\u5230\u8fbe\u6839\u8282\u70b9\uff0c\u4e14\u6839\u8282\u70b9\u5173\u952e\u5b57\u6570\u76ee\u4e3a0\uff0c\u5220\u9664\u6839\u8282\u70b9\uff0c\u5373\u5168\u6811\u9ad8\u5ea6\u51cf\u4e00        </p> </li> </ul> </li> </ul> </li> </ul> Code (Delete Not Carefully Checked yet) <p>\u6211\u89c9\u5f97B+\u6811\u6700\u6076\u5fc3\u7684\u4e00\u70b9\u5c31\u5728\u4e8e\u4ed6\u7684\u5185\u90e8\u8282\u70b9\u4e0e\u53f6\u7ed3\u70b9\u5b9a\u4e49\u7684\u4e0d\u4e00\u81f4\u6027\uff0c\u5bfc\u81f4\u7f16\u5199\u4ee3\u7801\u975e\u5e38\u9ebb\u70e6\uff08\u5bf9\u4e8e\u6211\u8fd9\u79cd\u5177\u6709\u201c\u7edf\u4e00\u6027\u5199\u6cd5\u201d\u5f3a\u8feb\u75c7\u7684\u4eba\u6765\u8bf4\uff09</p> <p>\u7ed3\u679c\u5c31\u662f\u767d\u767d\u82b1\u8d39\u6570\u5c0f\u65f6\u53bb\u5199\u63ba\u6742\u7740\u5404\u79cd IsLeaf \u8fd0\u7b97\u7684\u5f0f\u5b50\uff0c\u548c\u65e0\u7a77\u65e0\u5c3d\u7684Debug</p> <p>\u56e0\u6b64\uff0c\u60e8\u75db\u6559\u8bad\uff1a\u5f88\u591a\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u5206\u7c7b\uff0c\u589e\u52a0\u4ee3\u7801\u957f\u5ea6\uff0c\u5927\u5927\u964d\u4f4e\u7f16\u7801\u590d\u6742\u5ea6\uff01\uff01\uff01 </p> B+ Tree<pre><code>const int Order = 5;\nstruct Node{\n    int M;                  //  Number of keys\n    int Key[Order + 1];     //  Keys\n    Node* Child[Order + 1]; //  Children\n    Node *Ls, *Rs;          //  Left and Right Sibling\n    int Height;              //  Height of the node for printing\n    Node(){\n        M = Height = 0;\n        Ls = Rs = NULL;\n        for(int i = 0; i &lt;= Order; i++) Child[i] = NULL, Key[i] = 0;\n    }\n    Node *Split(){\n        Node *j = new Node();\n        j-&gt;Height = Height;\n        j-&gt;Rs = Rs, Rs = j, j-&gt;Ls = this;\n        if(Height){ // Internal Node\n            for(int k = (Order + 1 &gt;&gt; 1); k &lt; M ; k++){\n                j-&gt;Key[j-&gt;M] = Key[k], j-&gt;Child[j-&gt;M] = Child[k];\n                j-&gt;M++;\n            }\n            j-&gt;Child[j-&gt;M] = Child[M], M = (M - 1 &gt;&gt; 1);\n        }else{  // Leaf Node\n            for(int k = (Order + 1 &gt;&gt; 1); k &lt; M ; k++) j-&gt;Key[j-&gt;M++] = Key[k];\n            M = (M + 1 &gt;&gt; 1);\n        }\n        return j;\n    }\n};\nint tp[Order &lt;&lt; 1]; Node *tq[Order &lt;&lt; 1];\nstruct BpTree{\n    Node *Rot;\n    #define IsLeaf(x) ((x)-&gt;Height == 0)\n    void Insert(Node *i, Node *F, int x){\n        int k;\n        if(IsLeaf(i)){// Leaf Node can contain more keys\n            for(k = 0; k &lt; i-&gt;M; k++) if(i-&gt;Key[k] == x) return (void)(printf(\"Key %d is duplicated\\n\", x));\n            while(k &amp;&amp; i-&gt;Key[k - 1] &gt; x) i-&gt;Key[k] = i-&gt;Key[k - 1], k--;\n            i-&gt;Key[k] = x, i-&gt;M++;\n            return;\n        }\n\n        // search for the child to insert\n        for(k = 0; k &lt; i-&gt;M; k++) if(i-&gt;Key[k] &gt; x) break;\n        Insert(i-&gt;Child[k], i, x);\n        if(i-&gt;Child[k]-&gt;M - (IsLeaf(i-&gt;Child[k])) &lt; Order) return;\n\n        // split the child\n        Node *j = i-&gt;Child[k]-&gt;Split();\n        for(int t = i-&gt;M; t &gt; k; t--) i-&gt;Child[t + 1] = i-&gt;Child[t], i-&gt;Key[t] = i-&gt;Key[t - 1];\n        i-&gt;Child[k + 1] = j, i-&gt;Key[k] = i-&gt;Child[k]-&gt;Key[i-&gt;Child[k]-&gt;M], i-&gt;M++;\n    }\n    int GetChild(Node *F, Node *i){\n        for(int k = 0; k &lt;= F-&gt;M; k++) if(F-&gt;Child[k] == i) return k;\n        return -1;\n    }\n    void Delete(Node *i, Node *F, int x){\n        int k;\n        if(IsLeaf(i)){\n            for(k = 0; k &lt; i-&gt;M; k++) if(i-&gt;Key[k] &gt;= x) break;\n            if(i-&gt;Key[k] != x) return;\n            i-&gt;M--;\n            for(; k &lt; i-&gt;M; k++) i-&gt;Key[k] = i-&gt;Key[k + 1];\n            return;\n        }\n        for(k = 0; k &lt; i-&gt;M ; k++) if(i-&gt;Key[k] &gt; x) break;\n        Node *s = i-&gt;Child[k], *t = k == i-&gt;M ? i-&gt;Child[k - 1] : i-&gt;Child[k + 1];\n        Delete(s, i, x);\n        if(s-&gt;M + 1 - IsLeaf(s) &gt;= (Order + 1 &gt;&gt; 1)) return;\n\n        if(k == i-&gt;M) swap(s,t), k--;// s --&gt; t\n        if(IsLeaf(s)){ // cope with leaf node\n            if(s-&gt;M + t-&gt;M &gt; Order){// Borrow from sibling\n                int cnt = (s-&gt;M + t-&gt;M &gt;&gt; 1), M = 0;\n                for(int j = 0; j &lt; s-&gt;M; j++) tp[++M] = s-&gt;Key[j];\n                for(int j = 0; j &lt; t-&gt;M; j++) tp[++M] = t-&gt;Key[j];//merge together\n\n                s-&gt;M = t-&gt;M = 0;\n                for(int j = 1;j &lt;= cnt; j++) s-&gt;Key[s-&gt;M++] = tp[j];//average\n                for(int j = cnt + 1; j &lt;= M; j++) t-&gt;Key[t-&gt;M++] = tp[j];\n                i-&gt;Key[k] = t-&gt;Key[0];\n            }else{ // merge leaf\n                for(int j = 0; j &lt; t-&gt;M; j++) s-&gt;Key[s-&gt;M++] = t-&gt;Key[j];\n                i-&gt;M--;\n                for(int j = k; j &lt; i-&gt;M; j++) i-&gt;Key[j] = i-&gt;Key[j + 1], i-&gt;Child[j + 1] = i-&gt;Child[j + 2];\n                s-&gt;Rs = t-&gt;Rs;\n                if(t-&gt;Rs != NULL) t-&gt;Rs-&gt;Ls = s;\n            }\n        }else{\n            if(s-&gt;M + 1 + t-&gt;M + 1 &gt; Order){// Borrow from sibling(average with sibling)\n                int cnt = (s-&gt;M + t-&gt;M &gt;&gt; 1), M = 0;\n                for(int j = 0; j &lt; s-&gt;M; j++) tp[++M] = s-&gt;Key[j], tq[M] = s-&gt;Child[j];\n                tp[++M] = i-&gt;Key[k], tq[M] = s-&gt;Child[s-&gt;M];\n                for(int j = 0; j &lt; t-&gt;M; j++) tp[++M] = t-&gt;Key[j], tq[M] = t-&gt;Child[j];\n                tq[M + 1] = t-&gt;Child[t-&gt;M];//merge together\n\n                s-&gt;M = t-&gt;M = 0;\n                for(int j = 1; j &lt;= cnt; j++) s-&gt;Key[s-&gt;M] = tp[j], s-&gt;Child[s-&gt;M++] = tq[j];\n                s-&gt;Child[s-&gt;M] = tq[cnt + 1];\n                for(int j = cnt + 2; j &lt;= M; j++) t-&gt;Key[t-&gt;M] = tp[j], t-&gt;Child[t-&gt;M++] = tq[j];\n                t-&gt;Child[t-&gt;M] = tq[M + 1];//average\n                i-&gt;Key[k] = tp[cnt + 1];\n            }else{\n                s-&gt;Key[s-&gt;M] = i-&gt;Key[k];\n                for(int j = 0; j &lt; t-&gt;M; j++) s-&gt;Key[++s-&gt;M] = t-&gt;Key[j], s-&gt;Child[s-&gt;M] = t-&gt;Child[j];\n                s-&gt;Child[++s-&gt;M] = t-&gt;Child[t-&gt;M];\n                i-&gt;M--;\n                for(int j = k; j &lt; i-&gt;M; j++) i-&gt;Key[j] = i-&gt;Key[j + 1], i-&gt;Child[j + 1] = i-&gt;Child[j + 2];\n            }\n        }\n    }\n\n    // interface for user\n    void Clear(){Rot = new Node();}\n    void Insert(int x){\n        Insert(Rot, NULL, x);\n        Node *i = Rot;\n        if(i-&gt;M - IsLeaf(i) &gt;= Order){// Split the root if necessary\n            Rot = new Node();\n            Node *j = i-&gt;Split();\n            Rot-&gt;Key[0] = i-&gt;Key[i-&gt;M], Rot-&gt;M = 1, Rot-&gt;Child[0] = i, Rot-&gt;Child[1] = j;\n            Rot-&gt;Height = i-&gt;Height + 1;\n        }\n    }\n\n    void Delete(int x){\n        if(Rot == NULL) return(void)(puts(\"Empty\"));\n        Delete(Rot, NULL, x);\n        if(!Rot-&gt;M) Rot = Rot-&gt;Child[0];\n    }\n    void Print(){// BFS\n        if(Rot == NULL) return (void)(puts(\"Empty\"));\n        queue&lt;Node*&gt; Q;\n        Q.push(Rot);\n        int lst = Rot-&gt;Height;\n        while(!Q.empty()){\n            Node *x = Q.front(); Q.pop();\n            if(x-&gt;Height != lst) putchar('\\n'), lst = x-&gt;Height;\n            putchar('[');\n            for(int i = 0; i &lt; x-&gt;M - 1; i++) printf(\"%d,\", x-&gt;Key[i]);\n            printf(\"%d]\", x-&gt;Key[x-&gt;M - 1]);\n            for(int i = 0; i &lt;= x-&gt;M; i++) if(x-&gt;Child[i] != NULL) Q.push(x-&gt;Child[i]);\n        }\n        puts(\"\");\n    }\n}B;\n</code></pre>"},{"location":"ADS/#rb-tree","title":"RB Tree","text":"<p>\u7b2c\u4e8c\u8282\u8bfe\u5c31\u8bb2\u624b\u6495\u7ea2\u9ed1\u6811 &amp; B+\u6811\uff0c\u8fd9\u5c31\u662fZJU\u7684ADS, \u6050\u6016\u5982\u65af\u2026\u2026</p> <p>\u4e00\u79cd\u81ea\u5e73\u8861\u4e8c\u53c9\u67e5\u627e\u6811\uff0c\u5e38\u7528\u4e8eC++ STL\u4e2d\u7684set\u548cmap\uff0c\u4ee5\u53caLinux\u5185\u6838\u4e2d\u7684\u8fdb\u7a0b\u8c03\u5ea6\u7b49</p> <p>\u6548\u7387\u8f83\u9ad8\u4e14\u6bd4\u4e00\u822c\u5e73\u8861\u6811\u7a33\u5b9a\uff0c\u4f46\u5b9e\u73b0\u2026\u2026</p> <ul> <li> <p>\u7279\u5f81\uff08\u719f\u8bb0\uff1f\uff01\uff09</p> <ol> <li> <p>\u6bcf\u4e2a\u8282\u70b9\u8981\u4e48\u662f\u7ea2\u8272\uff0c\u8981\u4e48\u662f\u9ed1\u8272</p> </li> <li> <p>\u6839\u8282\u70b9\u662f\u9ed1\u8272</p> </li> <li> <p>\u6bcf\u4e2a\u53f6\u8282\u70b9\u90fd\u4e3aNIL\u8282\u70b9\uff0c\u4e14\u4e3a\u9ed1\u8272</p> </li> <li> <p>\u4e0d\u80fd\u6709\u4e24\u4e2a\u76f8\u90bb\u7684\u7ea2\u8272\u8282\u70b9</p> </li> <li> <p>\u4ece\u4efb\u4e00\u8282\u70b9\u5230\u5176\u6bcf\u4e2a\u53f6\u8282\u70b9\u7684\u6240\u6709\u8def\u5f84\u90fd\u5305\u542b\u76f8\u540c\u6570\u76ee\u7684\u9ed1\u8272\u8282\u70b9\uff08\u4e5f\u6b63\u662f\u57fa\u4e8e\u6b64\u6211\u4eec\u5b9a\u4e49\u4e86\u6811\u7684\u9ed1\u9ad8\uff09</p> </li> </ol> </li> <li> <p>\u590d\u6742\u5ea6\u5206\u6790</p> operation complexity rotation recoloring Insert O(logN) O(1) O(logN) Delete O(logN) O(1) O(logN) <ul> <li> <p>\u5e38\u89c1\u64cd\u4f5c\u5747\u4e3a\\(O(logN)\\)</p> </li> <li> <p>\u7ef4\u62a4\u7684\u65cb\u8f6c\u6b21\u6570\u4e3a\u5e38\u6570\u65f6\u95f4\uff0c\u6240\u4ee5\u975e\u5e38\u5feb </p> </li> </ul> <p>\u9996\u5148\u5b9a\u4e49\u9ed1\u9ad8 bh(x) \u4e3a\u4ece\u8282\u70b9 x \u5230\u5176\u6bcf\u4e2a\u53f6\u8282\u70b9\u7684\u7b80\u5355\u8def\u5f84\u4e0a\u9ed1\u8272\u8282\u70b9\u6570\u76ee\uff08\u4e0d\u5305\u62ec\u81ea\u5df1\uff09</p> <ul> <li> <p>\u8bc1\u660e\uff1a</p> <ul> <li> <p>\u9996\u5148\uff0c\u7531\u7ea2\u9ed1\u6811\u5b9a\u4e49\uff0c\\(h(x) &lt;= 2bh(x)\\)</p> </li> <li> <p>\u4f7f\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\uff0c\u5bf9\u4e8e\u4efb\u610f\u8282\u70b9 x\uff0c\u5176\u5b50\u6811\u7684\u8282\u70b9\u6570\u76ee \\(N(x) &gt;= 2^{bh(x)} - 1\\)</p> <ul> <li> <p>\u56e0\u4e3a\u5bf9\u4e8e\u4efb\u610f\u8282\u70b9\uff0c\u5176\u5b50\u8282\u70b9\u7684\u9ed1\u9ad8\u4e3a bh(x) \u6216 bh(x) - 1</p> </li> <li> <p>\u4ece\u800c\u7531\u5f52\u7eb3\u5047\u8bbe\uff0c\u6709 \\(N(x) &gt;= 2^{bh(x) - 1} - 1 + 2^{bh(x) - 1} - 1 + 1 = 2^{bh(x)} - 1\\)</p> </li> </ul> </li> <li> <p>\u7efc\u4e0a\uff0c\u5f97\u8bc1     </p> </li> </ul> </li> </ul> </li> <li> <p>\u7ef4\u62a4</p> <p>\u4e3b\u8981\u53c2\u8003\u4e86\u7b97\u6cd5\u5bfc\u8bba\uff0c\u611f\u89c9\u76f8\u5bf9\u4e8e\u8bfe\u4ef6\uff0c\u5c06\u5b50\u6811\u7684\u5206\u5e03\u753b\u51fa\u6765\uff0c\u66f4\u52a0\u6e05\u6670\u660e\u4e86\u4e00\u4e9b</p> <ul> <li> <p>\u6211\u89c9\u5f97\uff0c\u672c\u8d28\u4e0a\u63d2\u5165\u548c\u5220\u9664\u6700\u5173\u6ce8\u7684\u8fd8\u662f\u9ed1\u9ad8\u7684\u7ef4\u62a4\uff0c\u56e0\u6b64\u5173\u952e\u6b65\u9aa4\u90fd\u662f\u5728\u8c03\u6574\u6811\u7684\u5f62\u6001\u7684\u540c\u65f6\uff0c\u5982\u4f55\u5bf9\u9ed1\u9ad8\u4e0d\u4ea7\u751f\u5f71\u54cd</p> <ul> <li> <p>\u57fa\u4e8e\u540c\u9ad8\u5ea6\u540c\u65f6\u53d8\u5316\u7684\u4e0d\u53d8</p> <ul> <li> <p>\u9ed1\u4e0b\u653e\uff1a\u5c06\u9ed1\u8272\u8282\u70b9\u7684\u4e24\u4e2a\u7ea2\u8272\u513f\u5b50\u53d8\u4e3a\u9ed1\u8272\uff0c\u81ea\u5df1\u53d8\u4e3a\u7ea2\u8272</p> </li> <li> <p>\u9ed1\u4e0a\u63d0\uff1a\u5c06\u4e24\u9ed1\u8272\u513f\u5b50\u7684\u9ed1\u8272\u6c47\u805a\u5230\u7ea2\u8272\u7684\u7236\u4eb2\u8eab\u4e0a\uff0c\u513f\u5b50\u53d8\u7ea2 </p> </li> </ul> </li> <li> <p>\u65cb\u8f6c\u4e0d\u53d8</p> <ul> <li> <p>\u5728\u65cb\u8f6c\u65f6\uff0c\u82e5\u4e0b\u65b9\u5f85\u8f6c\u8282\u70b9\u4e3a\u7ea2\u8272\uff0c\u5219\u65cb\u8f6c\u540e\u7ee7\u627f\u5176\u539f\u672c\u7236\u8282\u70b9\u7684\u989c\u8272\uff0c\u539f\u672c\u7236\u8282\u70b9\u53d8\u7ea2\uff0c\u9ed1\u9ad8\u4e0d\u53d8</p> </li> <li> <p>\u7279\u522b\u7684\uff0c\u7ea2\u8282\u70b9\u8f6c\u6765\u8f6c\u53bb\u5e76\u4e0d\u4f1a\u5bf9\u9ed1\u9ad8\u4ea7\u751f\u5f71\u54cd   </p> </li> </ul> </li> </ul> </li> <li> <p>\u63d2\u5165 </p> <ul> <li>\u6309\u6b63\u5e38\u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u65b9\u5f0f\uff0c\u63d2\u5165\u4e00\u4e2a\u7ea2\u8272\u8282\u70b9 \u2014\u2014 \u6b64\u65f6\u4e0d\u4f1a\u5f71\u54cd\u9ed1\u9ad8\uff0c\u4f46\u53ef\u80fd\u51fa\u73b0\u4e24\u4e2a\u76f8\u90bb\u7684\u7ea2\u8272\u8282\u70b9\uff0c\u4ece\u800c\u9700\u8981\u8fdb\u884c\u8c03\u6574</li> </ul> <p>\uff08\u63d2\u5165\u9ed1\u8272\u8282\u70b9\u4f1a\u5bf9\u5230\u6839\u6574\u6761\u8def\u5f84\u4ea7\u751f\u7834\u574f\uff0c\u66f4\u52a0\u96be\u8c03\u6574\uff09</p> <ul> <li> <p>\u7b80\u5355\u60c5\u51b5\uff1a\u7236\u8282\u70b9\u4e3a\u9ed1\u8272\uff0c\u4e0d\u9700\u8981\u8c03\u6574</p> </li> <li> <p>\u590d\u6742\u60c5\u51b5\uff1a\u7236\u8282\u70b9\u4e3a\u7ea2\u8272\uff0c\u63d2\u5165\u4e3b\u8981\u5173\u6ce8\u201c\u53d4\u201d\u8282\u70b9\uff08z\u4e3a\u5f53\u524d\u8282\u70b9\uff0cy\u4e3a\u53d4\u8282\u70b9\uff09</p> <ul> <li> <p>Case 1</p> <ul> <li>\u53d4\u8282\u70b9\u4e3a\u7ea2\u8272\uff0c\u5219\u7956\u7236\u8282\u70b9\u5fc5\u4e3a\u9ed1\u8272\uff0c\u90a3\u4e48\u5b9e\u884c\u4e00\u6b21\u201c\u9ed1\u4e0b\u653e\u201d\u64cd\u4f5c\uff0c\u5c06\u7956\u7236\u8282\u70b9\u7684\u9ed1\u8272\u5411\u4e0b\u4f20\u9012\u5230\u5176\u5b50\u8282\u70b9\uff0c\u81ea\u5df1\u53d8\u4e3a\u7ea2\u8272\u5373\u53ef</li> </ul> <p></p> </li> <li> <p>Case 2 &amp; Case 3</p> <ul> <li> <p>Case 2, \u53d4\u8282\u70b9\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u540c\u4fa7\u8282\u70b9\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u5f53\u524d\u8282\u70b9\u7684\u4e00\u6b21\u65cb\u8f6c\uff0c\u53d8\u4e3a\u5f02\u4fa7\u7684\u60c5\u51b5\uff08\u6b64\u65f6 z \u53d8\u6210\u539f\u6765\u7684\u7236\u8282\u70b9\u4e86\uff09</p> </li> <li> <p>Case 3, \u53d4\u8282\u70b9\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5f02\u4fa7\u8282\u70b9\uff0c\u800c\u7236\u8282\u70b9\u4e3a\u7ea2\u8272\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21\u4e0a\u8ff0\u7684\u4e0d\u53d8\u65cb\u8f6c\u5b8c\u6210\u8c03\u6574</p> </li> <li> <p>\u4ece\u7ed3\u679c\u6765\u770b\uff0c\u5b9e\u9645\u4e0a\u662f\u975e\u5e38\u597d\u7406\u89e3\u7684\uff0c\u672c\u8d28\u4e0a\u5c31\u662f\u4e0b\u56fe\u4e2d A &lt; B &lt; C, \u4ece\u800c\u5e94\u5c06B\u65cb\u8f6c\u5230\u6700\u4e2d\u592e\uff0c\u4f7f\u5e73\u8861\u6811\u5c3d\u53ef\u80fd\u5e73\u8861 </p> </li> </ul> <p> </p> </li> </ul> </li> </ul> </li> <li> <p>\u5220\u9664 </p> <ul> <li> <p>\u548c\u4e00\u822c\u7684\u4e8c\u53c9\u67e5\u627e\u6811\u4e00\u6837\uff0c\u5148\u7528\u8282\u70b9\u7684\u524d\u9a71/\u540e\u7ee7\u8282\u70b9\u66ff\u6362\uff08\u989c\u8272\u4e0d\u53d8\uff09\uff0c\u7136\u540e\u5220\u9664\u524d\u9a71/\u540e\u7ee7\u8282\u70b9</p> </li> <li> <p>\u8fd9\u6837\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5220\u9664\u4e86\u9ed1\u8272\u8282\u70b9\u5f71\u54cd\u9ed1\u9ad8\uff0c\u6216\u8005\u51fa\u73b0\u4e24\u4e2a\u76f8\u90bb\u7684\u7ea2\u8272\u8282\u70b9</p> </li> <li> <p>\u7b80\u5355\u60c5\u51b5\uff1a\u5220\u9664\u7684\u8282\u70b9\u4e3a\u7ea2\u8272\uff0c\u4e0d\u4f1a\u4ea7\u751f\u5f71\u54cd\uff0c\u4e0d\u9700\u8981\u8c03\u6574</p> </li> <li> <p>\u590d\u6742\u60c5\u51b5\uff1a\u5220\u9664\u4e86\u9ed1\u8272\u8282\u70b9\uff0c\u5f71\u54cd\u5f88\u5927\uff0c\u4f1a\u5bfc\u81f4\u591a\u4e2a\u7279\u5f81\u4e0d\u7b26\u5408</p> <p>\u672c\u8d28\u4e0a\uff0c\u5c31\u662f\u5bfc\u81f4\u4e86\u66ff\u6362\u8282\u70b9 x \u8fd9\u9897\u5b50\u6811\u7684\u9ed1\u9ad8\u90fd\u504f\u5c11\u4e861, \u6240\u4ee5\u63a5\u4e0b\u6765\u5c31\u662f\u8ba8\u8bba\u5982\u4f55\u4f18\u96c5\u5730\u5c06\u4ed6\u4eec\u5168\u90e8+1</p> <p>\u4e0b\u9762\u8ba8\u8bba\u66ff\u6362\u8282\u70b9 x \u4e3a\u9ed1\u8272\u7684\u60c5\u51b5\uff08\u7ea2\u8272\u7684\u8bdd\u76f4\u63a5\u67d3\u9ed1\u5373\u53ef\uff0c\u8fd8\u53ef\u4ee5\u987a\u4fbf\u907f\u514d\u76f8\u90bb\u7ea2\u8272\u8282\u70b9\uff09\uff0c\u5220\u9664\u4e3b\u8981\u5173\u6ce8\u5144\u5f1f\u8282\u70b9 w </p> <ul> <li> <p>Case 1</p> <ul> <li>\u5144\u5f1f\u8282\u70b9\u4e3a\u7ea2\u8272\uff0c\u5219\u8fdb\u884c\u4e00\u6b21\u4e0a\u8ff0\u7684\u4e0d\u53d8\u65cb\u8f6c\uff0c\u5c06\u5144\u5f1f\u8282\u70b9\u53d8\u4e3a\u9ed1\u8272\uff0c\u7236\u8282\u70b9\u53d8\u4e3a\u7ea2\u8272\uff08\u7ea2\u8282\u70b9\u4e0a\u65b9\u4e0b\u65b9\uff0c\u539f\u6765\u5fc5\u9ed1\uff09\uff0c\u8f6c\u5316\u4e3a\u4e0b\u9762\u8981\u8ba8\u8bba\u7684\u60c5\u5f62</li> </ul> <p></p> </li> <li> <p>Case 2</p> <ul> <li>\u5144\u5f1f\u8282\u70b9\u4e3a\u9ed1\u8272\uff0c\u4e14\u5144\u5f1f\u8282\u70b9\u7684\u4e24\u4e2a\u513f\u5b50\u90fd\u4e3a\u9ed1\u8272, \u5219\u5e72\u8106\u5c06\u5144\u5f1f\u8282\u70b9\u53d8\u4e3a\u7ea2\u8272\uff0c\u8fd9\u6837\u5f53\u524d\u8282\u70b9\u548c\u5144\u5f1f\u8282\u70b9\u7684\u5b50\u6811\u76f8\u5f53\u4e8e\u201c\u626f\u5e73\u201d\u4e86\u90fd\u5dee1\uff0c\u4ece\u800c\u53ef\u4ee5\u5411\u4e0a\u9012\u5f52\u8c03\u6574\uff0c\u5373\u5f53\u524d\u5f85\u8c03\u6574\u8282\u70b9\u53d8\u4e3a\u7236\u8282\u70b9</li> </ul> <p></p> </li> <li> <p>Case 3</p> <ul> <li>\u5144\u5f1f\u8282\u70b9\u4e3a\u9ed1\u8272\uff0c\u4e14\u5144\u5f1f\u8282\u70b9\u7684\u5f02\u4fa7\u5b50\u8282\u70b9\u4e3a\u9ed1\u8272\uff0c\u540c\u4fa7\u5b50\u8282\u70b9\u4e3a\u7ea2\u8272\uff0c\u6b64\u65f6\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21\u4e0d\u53d8\u65cb\u8f6c\uff0c\u5c06\u8be5\u7ea2\u8272\u8282\u70b9\u53d8\u4e3a\u9ed1\u8272\u5144\u5f1f\uff0c\u5e76\u83b7\u5f97\u5f02\u4fa7\u5b50\u8282\u70b9\uff0c\u8f6c\u5316\u4e3aCase 4</li> </ul> <p> </p> </li> <li> <p>Case 4</p> <ul> <li>\u5144\u5f1f\u8282\u70b9\u4e3a\u9ed1\u8272\uff0c\u4e14\u5144\u5f1f\u8282\u70b9\u7684\u5f02\u4fa7\u5b50\u8282\u70b9\u4e3a\u7ea2\u8272\uff0c\u6b64\u65f6\u5c06\u7236\u8282\u70b9\u65cb\u8f6c\u4e0b\u6765\u5f3a\u5236\u67d3\u9ed1\u6765\u8865\u507f\u5b50\u6811\u9ed1\u9ad8\uff0c\u5144\u5f1f\u8282\u70b9\u65cb\u8f6c\u5230\u4e0a\u65b9\u5e76\u7ee7\u627f\u7236\u8282\u70b9\u7684\u989c\u8272\uff0c\u5e76\u5c06\u5269\u4e0b\u7684\u4e00\u4e2a\u513f\u5b50\u4e5f\u67d3\u9ed1\uff0c\u7ef4\u62a4\u5176\u4f59\u5b50\u6811\u7684\u9ed1\u9ad8\u4e0d\u53d8\uff0c\u76f4\u63a5Over\uff08\u53ef\u4ee5\u68c0\u67e5\u6bcf\u9897\u5b50\u6811\u6240\u7ecf\u8fc7\u7684\u8def\u5f84\uff0c\u6070\u597d\u5b8c\u7f8e\u7b26\u5408\uff0c\u8fc7\u4e8e\u5de7\u5999\uff01\uff09</li> </ul> <p> </p> </li> </ul> </li> </ul> </li> <li> <p>\u4e0a\u9762\u63d0\u5230\u7684\u90fd\u662f\u81ea\u5e95\u5411\u4e0a\u8c03\u6574\u7684\u65b9\u6cd5\uff0c\u8fd8\u6709\u4e00\u79cd\u81ea\u9876\u5411\u4e0b\u7684\u529e\u6cd5\uff0c\u5373\u5728\u7528\u5faa\u73af\u63d2\u5165/\u5bfb\u627e\u5173\u952e\u5b57\u7684\u540c\u65f6\u5bf9\u6811\u7684\u5f62\u6001\u8fdb\u884c\u7ef4\u62a4\u548c\u8c03\u6574\uff0c\u4f7f\u5f97\u63d2\u5165/\u5220\u9664\u540e\u6811\u7684\u5f62\u6001\u76f4\u63a5\u6ee1\u8db3\u8981\u6c42\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4f1a\u8dd1\u5f97\u66f4\u5feb\u4e00\u70b9</p> </li> </ul> </li> </ul> Code <p>\u9762\u5411Luogu P3369\u5e73\u8861\u6811\u6a21\u677f\u9898\u5199\u7684\uff0c\u8dd1\u5f97\u560e\u560e\u5feb\uff0c\u8fd9\u5c31\u662fRBTree! \u4f46\u662f\u82b1\u4e86\u6211\u4e00\u4e0b\u5348debug\uff01\uff01\uff01</p> <p>\u4e3b\u8981\u6ce8\u610f\u7a7a\u8282\u70b9\u7684\u4e00\u4e9b\u5904\u7406\uff08\u63d0\u524d\u5c06\u5bf9\u5e94\u6307\u9488\u8bb0\u4e0b\u6765\u9632\u6b62\u540e\u9762\u88ab\u66f4\u6539\uff09\uff0c\u4ee5\u53ca\u53ca\u65f6\u66f4\u65b0\u6839\u8282\u70b9\u7684\u6307\u9488</p> Red Black Tree<pre><code>const int INF = 1e9;\nenum Color {RED, BLACK};\nstruct Node{\n    int data, size; // size denotes the number of nodes in subtree x\n    Color color;\n    Node *v[2], *F;\n    Node(int x = 0, Color c = BLACK, Node *fa = NULL, Node *NIL = NULL){\n        data = x, size = 0, color = c, F = fa;\n        v[0] = v[1] = NIL;\n    }\n    void Update(){size = v[0]-&gt;size + v[1]-&gt;size + 1;}\n};\ntypedef Node *Pt;\nPt NIL = new Node(-1, BLACK, NIL, NIL);\nstruct RBTree{\n    Node *Rot;\n    #define Is(i) ((i)-&gt;F-&gt;v[1] == (i))\n    void Rotate(Pt i){ // Rotate i to i-&gt;F\n        Pt F = i-&gt;F; bool p = Is(i), q = Is(F);\n        F-&gt;v[p] = i-&gt;v[p ^ 1], i-&gt;v[p ^ 1]-&gt;F = F;// first cope with external nodes\n        i-&gt;F = F-&gt;F, F-&gt;F-&gt;v[q] = i;               // then i and F\n        F-&gt;F = i, i-&gt;v[p ^ 1] = F;\n        F-&gt;Update(), i-&gt;Update();\n        if(F == Rot) Rot = i;\n    }\n    void FixUp_Insert(Pt i){\n        while(i-&gt;F-&gt;color == RED){\n            bool p = Is(i), q = Is(i-&gt;F) ^ 1;\n            Pt F = i-&gt;F, U = F-&gt;F-&gt;v[q];\n\n            if(U-&gt;color == RED){ // case 1: uncle is red, black down\n                F-&gt;color = U-&gt;color = BLACK;\n                F-&gt;F-&gt;color = RED, i = F-&gt;F;\n                continue;\n            }\n\n            if(p == q){ // case 2: uncle is black but same side, rotate to case 3\n                Rotate(i);\n                swap(i, F), p ^= 1;\n            }\n\n            // case 3: uncle is black and different side, rotate and recolor\n            F-&gt;color = BLACK, F-&gt;F-&gt;color = RED;\n            Rotate(F);\n            break;\n        }\n    }\n    void Insert(Pt &amp;i, Pt fa, int x){\n        if(i == NIL){\n            i = new Node(x, RED, fa, NIL), i-&gt;size = 1;\n            FixUp_Insert(i);\n            return;\n        }\n        i-&gt;size++, Insert(i-&gt;v[x &gt; i-&gt;data], i, x);\n    }\n    Pt Find(Pt i, int x){\n        if(i == NIL) return NIL;\n        i-&gt;size--;\n        if(i-&gt;data == x) return i;\n        return Find(i-&gt;v[x &gt; i-&gt;data], x);\n    }\n    void FixUp_Delete(Pt i){\n        // Print();\n        while(i != Rot &amp;&amp; i-&gt;color == BLACK){\n            bool p = Is(i);\n            Pt F = i-&gt;F, S = F-&gt;v[p ^ 1];\n            if(S-&gt;color == RED){ // case 1: sibling is red\n                S-&gt;color = BLACK, F-&gt;color = RED;\n                Rotate(S);\n                S = F-&gt;v[p ^ 1];\n                // if(S == NIL) assert(i != NIL);\n            }\n\n            if(S-&gt;v[0]-&gt;color == BLACK &amp;&amp; S-&gt;v[1]-&gt;color == BLACK){ // case 2: sibling is black and both children are black\n                S-&gt;color = RED, i = F;\n                continue;\n            }\n\n            if(S-&gt;v[p ^ 1]-&gt;color == BLACK){ // case 3: sibling is black and the child in the opposite side is black\n                S-&gt;v[p]-&gt;color = BLACK, S-&gt;color = RED;\n                Rotate(S-&gt;v[p]);// rotate to case 4\n                S = F-&gt;v[p ^ 1];\n            }\n\n            // case 4: sibling is black and the child in the opposite side is red\n            S-&gt;color = F-&gt;color, F-&gt;color = BLACK, S-&gt;v[p ^ 1]-&gt;color = BLACK;\n            Rotate(S);\n            i = Rot;\n        }\n        i-&gt;color = BLACK;\n    }\n    int Rank(Pt i, int x){\n        if(i == NIL) return 0;\n        if(i-&gt;data &lt; x) return i-&gt;v[0]-&gt;size + 1 + Rank(i-&gt;v[1], x);\n        return Rank(i-&gt;v[0], x);\n    }\n    int Kth(Pt i, int k){\n        if(i-&gt;v[0]-&gt;size + 1 == k) return i-&gt;data;\n        if(i-&gt;v[0]-&gt;size + 1 &lt; k) return Kth(i-&gt;v[1], k - i-&gt;v[0]-&gt;size - 1);\n        return Kth(i-&gt;v[0], k);\n    }\n    int Pre(Pt i, int x){\n        if(i == NIL) return -INF;\n        if(i-&gt;data &lt; x) return max(i-&gt;data, Pre(i-&gt;v[1], x));\n        return Pre(i-&gt;v[0], x);\n    }\n    int Next(Pt i, int x){\n        if(i == NIL) return INF;\n        if(i-&gt;data &gt; x) return min(i-&gt;data, Next(i-&gt;v[0], x));\n        return Next(i-&gt;v[1], x);\n    }\n\n    // interface for user\n    void Clear(){Rot = NIL;}\n    void Insert(int x){\n        Insert(Rot, NIL, x);\n        Rot-&gt;color = BLACK;\n    }\n    void Delete(int x){\n        Pt i = Find(Rot, x);\n        Color dc = i-&gt;color;// deleted color\n        if(i == NIL) return;\n        if(i-&gt;v[0] == NIL || i-&gt;v[1] == NIL){ // i has at most one child\n            bool p = (i-&gt;v[1] != NIL);\n            i-&gt;v[p]-&gt;F = i-&gt;F, i-&gt;F-&gt;v[Is(i)] = i-&gt;v[p];\n            i = i-&gt;v[p];\n            if(i-&gt;F == NIL) Rot = i;\n        }else{\n            Pt j = i-&gt;v[0];j-&gt;size--;\n            while(j-&gt;v[1] != NIL) j = j-&gt;v[1], j-&gt;size--;// maximum in left subtree\n\n            dc = j-&gt;color;\n            i-&gt;data = j-&gt;data;// replace i with j\n            i = j-&gt;v[0], i-&gt;F = j-&gt;F, j-&gt;F-&gt;v[Is(j)] = i; // delete j\n        }\n        if(dc == BLACK) FixUp_Delete(i);\n    }\n    int Rank(int x){return Rank(Rot, x);}\n    int Kth(int k){return Kth(Rot, k);}\n    int Pre(int x){return Pre(Rot, x);}\n    int Next(int x){return Next(Rot, x);}\n}Tree;\n</code></pre>"},{"location":"ADS/#reverse-index","title":"Reverse Index","text":"<p>\u5c31\u662f\u4e00\u4e2a\u90bb\u63a5\u77e9\u9635\u4e00\u6837\u7684\u611f\u89c9\uff0c\u9644\u52a0\u4e86\u4e00\u4e9b\u7b80\u5355\u7684\u4f18\u5316\uff0c\u6ca1\u5565\u597d\u8bf4\u7684</p> <p>\u4e00\u4e9b\u4e13\u6709\u540d\u8bcd\uff1a</p> <p></p> <p></p> <p></p> <p></p> <ul> <li> <p>Notes</p> <ul> <li> <p>word stemming \u4f1a\u63d0\u9ad8\u53ec\u56de\u7387\uff0c\u4f46\u662f\u4f1a\u5f71\u54cd\u7cbe\u5ea6</p> </li> <li> <p>Thresholding \u6ce8\u610f\u662fdocument\u8fd8\u662fquery,\u4e24\u8005\u64cd\u4f5c\u65b9\u5f0f\u4e0d\u4e00\u6837</p> </li> <li> <p>In data retrieval, the response time is more important than the relevance of the answer set. </p> </li> </ul> </li> </ul>"},{"location":"ADS/#leftist-tree","title":"Leftist Tree","text":"<p>\u4e00\u79cd\u81ea\u5e73\u8861\u4e8c\u53c9\u5806\uff0c\u5e38\u7528\u4e8e\u4e24\u5806\u7684\u5feb\u901f\u5408\u5e76\u64cd\u4f5c</p> <ul> <li> <p>\u7279\u5f81\uff1a</p> <ul> <li> <p>\u5806\u7684\u7279\u6027\uff1a\u6839\u8282\u70b9\u4e3a\u5b50\u6811\u4e2d\u7684\u6700\u5927 / \u6700\u5c0f\u503c</p> </li> <li> <p>\u5de6\u504f\uff1aNpl(Ls) &gt;= Npl(Rs)</p> <ul> <li> <p>\u5176\u4e2dNpl(x)\u4e3ax\u5230\u6700\u8fd1\u7a7a\u8282\u70b9\u7684\u8ddd\u79bb\uff0cNpl(x) = min{Npl(C)} + 1</p> </li> <li> <p>\u89c4\u5b9aNpl(NULL) = -1 </p> </li> </ul> </li> </ul> </li> <li> <p>\u7ef4\u62a4\uff1a</p> <ul> <li> <p>\u6838\u5fc3\u64cd\u4f5c merge</p> <ul> <li> <p>\u9009\u4e24\u9897\u6811\u4e2d\u6839\u8282\u70b9\u5c0f\u7684\u90a3\u68f5\u4f5c\u4e3a\u4e3b\u6811</p> </li> <li> <p>\u9012\u5f52\u5408\u5e76\u5176\u53f3\u5b50\u6811\u4e0e\u5269\u4e0b\u7684\u90a3\u68f5\u6811</p> </li> <li> <p>\u9012\u5f52\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c\u5bf9\u5de6\u504f\u6027\u8d28\u8fdb\u884c\u7ef4\u62a4\uff0c\u4ea4\u6362\u4e0d\u7b26\u6027\u8d28\u7684\u5de6\u53f3\u5b50\u6811\u5e76\u7ef4\u62a4 Npl</p> </li> </ul> </li> <li> <p>\u63d2\u5165</p> <ul> <li>\u53ef\u4ee5\u89c6\u4e3a\u4e3b\u6811\u4e0e\u4e00\u4e2a\u5355\u4e00\u8282\u70b9\u7684\u6811\u5408\u5e76</li> </ul> </li> <li> <p>\u5220\u9664\uff08\u6700\u503c\uff09</p> <ul> <li>\u76f4\u63a5\u5220\u9664\u6839\u8282\u70b9\uff0c\u5e76\u5408\u5e76\u5176\u4e24\u68f5\u5b50\u6811 </li> </ul> </li> </ul> </li> <li> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <ul> <li> <p>\u53ef\u4ee5\u5229\u7528\u7c7b\u4f3c\u7ea2\u9ed1\u6811\u4e2d\u7684\u6570\u5b66\u5f52\u7eb3\u6cd5\uff0c\u8bc1\u660e</p> <p>\u53f3\u8def\u5f84\u4e0a\u6709 \\(r\\) \u4e2a\u8282\u70b9\u7684\u5de6\u504f\u6811\u81f3\u5c11\u6709 \\(2^r - 1\\)\u4e2a\u8282\u70b9</p> <p>\u5373\u53f3\u8def\u5f84\u957f\u5ea6\u4e3a\\(O(logN)\\)</p> </li> <li> <p>\u800c\u5de6\u504f\u6811\u7684\u5408\u5e76\u64cd\u4f5c\u663e\u7136\u590d\u6742\u5ea6\u4e3a\u53f3\u8def\u5f84\u957f\u5ea6\u4e4b\u548c\uff0c\u56e0\u6b64\u590d\u6742\u5ea6\u4e3a\\(O(logN)\\) </p> </li> </ul> </li> </ul> Code (passed Luogu P3377) Leftist Tree<pre><code>struct Node{\n    int Key, pos, Npl;\n    Node *Ls, *Rs;\n    Node(int _Key, int _Npl = 0,  int _pos = 0, Node *_s = NULL):Key(_Key), Npl(_Npl), Ls(_s), Rs(_s), pos(_pos){}\n    bool operator &lt;(const Node &amp;Y)const{return Key == Y.Key ? pos &lt; Y.pos : Key &lt; Y.Key;} // for this specific test problem\n};\nclass Leftist{\n    private:\n        Node *Rot;\n        static Node *NIL;\n        Node *Merge(Node *L, Node *R){\n            if(L == NIL) return R;\n            if(R == NIL) return L;\n            if(*R &lt; *L) swap(L, R); // choose the root\n            L-&gt;Rs = Merge(L-&gt;Rs, R);\n            if(L-&gt;Ls-&gt;Npl &lt; L-&gt;Rs-&gt;Npl) swap(L-&gt;Ls, L-&gt;Rs); // maintain the property\n            L-&gt;Npl = L-&gt;Rs-&gt;Npl + 1;        // update Npl\n            return L;\n        }\n    public:\n        Leftist():Rot(NIL){}\n        void Clear(){Rot = NIL;}\n        void Push(int Key, int pos = 0){Rot = Merge(Rot, new Node(Key, 0, pos, NIL));}\n        bool Empty(){return Rot != NIL;}\n        int Top(){return Rot-&gt;Key;}\n        int Top_pos(){return Rot-&gt;pos;} // for this specific problem\n        int Pop(){\n            int Key = Rot-&gt;Key;\n            Rot = Merge(Rot-&gt;Ls, Rot-&gt;Rs);\n            return Key;\n        }\n        void Merge(Leftist T){Rot = Merge(Rot, T.Rot);}\n};\nNode *Leftist::NIL = new Node(-1, -1);  // NULL Node\n</code></pre>"},{"location":"ADS/#skew-heap","title":"Skew Heap","text":"<p>\u4e5f\u662f\u4e00\u79cd\u81ea\u5e73\u8861\u4e8c\u53c9\u5806\uff0c\u5e38\u7528\u4e8e\u4e24\u5806\u7684\u5feb\u901f\u5408\u5e76\u64cd\u4f5c</p> <ul> <li> <p>\u7279\u5f81\uff1a</p> <ul> <li> <p>\u5806\u7684\u7279\u6027\uff1a\u6839\u8282\u70b9\u4e3a\u5b50\u6811\u4e2d\u7684\u6700\u5927 / \u6700\u5c0f\u503c</p> </li> <li> <p>Skew\uff1a\u4e0d\u518d\u7ef4\u62a4Npl\uff0c\u800c\u662f\u901a\u8fc7\u6bcf\u6b21\u5f3a\u5236\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\u7684\u65b9\u5f0f\u6765\u7ef4\u62a4\u5e73\u8861</p> <p>\u53ef\u4ee5\u7406\u89e3\u4e3a \u4e3a\u4e86\u5e73\u8861\uff0c\u6bcf\u6b21\u5de6\u8fb9\u585e\u4e00\u4e2a\uff0c\u53f3\u8fb9\u585e\u4e00\u4e2a</p> </li> <li> <p>\u8fd8\u6709\u201c\u4e2d\u5eb8\u201d\u7248\uff0crandomize heap, \u540c\u6837\u4e0d\u7528\u7ef4\u62a4Npl, \u4e0d\u8fc7\u4e3a\u6bcf\u6b21\u968f\u673a\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\uff0c\u671f\u671b\u5e73\u8861\uff0c\u5176\u4f59\u5199\u6cd5\u4e00\u6a21\u4e00\u6837</p> </li> </ul> </li> <li> <p>\u7ef4\u62a4\uff1a</p> <ul> <li> <p>\u6838\u5fc3\u64cd\u4f5c merge</p> <ul> <li> <p>\u9009\u4e24\u68f5\u6811\u4e2d\u6839\u8282\u70b9\u5c0f\u7684\u4f5c\u4e3a\u4e3b\u6811\uff0c\u4ea4\u6362\u5176\u5de6\u53f3\u8282\u70b9</p> </li> <li> <p>\u9012\u5f52\u5408\u5e76\u5176\u5de6\u8282\u70b9\u4e0e\u5269\u4e0b\u7684\u4e00\u68f5\u6811</p> </li> <li> <p>\u5f53\u67d0\u68f5\u6811\u5df2\u7ecf\u4e3a\u7a7a\u65f6\u53ef\u4ee5\u76f4\u63a5\u63a5\u4e0a\uff0c\u505c\u6b62\u9012\u5f52\uff08\u4f1a\u5bfc\u81f4\u8fd9\u68f5\u5269\u4e0b\u7684\u5b50\u6811\u5185\u90e8\u6ca1\u6709\u5145\u5206\u65cb\u8f6c\uff0c\u5f71\u54cd\u89c1\u4e0b\u65b9\u590d\u6742\u5ea6\u5206\u6790\uff09    </p> </li> </ul> </li> <li> <p>\u5176\u4f59\u64cd\u4f5c\u540c\u5de6\u504f\u6811\u90fd\u7c7b\u4f3c </p> </li> </ul> </li> <li> <p>\u590d\u6742\u5ea6\u5206\u6790\uff1a </p> </li> </ul> <p>\u91c7\u7528\u5929\u624d\u7684\u52bf\u80fd\u5206\u6790\u6cd5</p> <p>\u5b9a\u4e49\u52bf\u80fd\u51fd\u6570 \\(\\Phi(i) = N_{heavy\\ nodes}\\)</p> <p>\u5176\u4e2d heavy node \u91cd\u8282\u70b9 \u5b9a\u4e49\u4e3a\u53f3\u5b50\u6811\u6bd4\u5de6\u5b50\u6811\u5927\u7684\u8282\u70b9</p> <p>\u6ce8\u610f\u5230\u6bcf\u6b21\u5408\u5e76\u90fd\u53d1\u751f\u5728\u5de6\u8fb9\uff0c\u800c\u5de6\u8fb9\u90fd\u662f\u53f3\u8fb9\u6362\u8fc7\u53bb\u7684\uff0c\u56e0\u6b64\u5b9e\u9645\u4e0a\u662f\u5728\u53f3\u8def\u5f84\u4e0a\u64cd\u4f5c\uff0c\u5de6\u8fb9\u7684\u90a3\u4e9b\u7ed3\u6784\u4e0d\u53d8\uff0c\u53ea\u8981\u5173\u6ce8\u64cd\u4f5c\u524d\u6574\u68f5\u6811\u7684\u53f3\u8def\u5f84</p> <p>\u5c06\u53f3\u8def\u5f84\u5355\u72ec\u5265\u79bb\u51fa\u6765\uff0c\u8bbe \\(H_i = l_i + h_i\\) (\\(H_i\\) \u4e3a\u53f3\u8def\u5f84\u8282\u70b9\u6570\uff0c\\(l_i\\) \u4e3a\u5176\u4e2dlight node, \\(h_i\\) \u4e3a\u5176\u4e2dheavy node)</p> <p>\u5219\u5bf9\u4e8e\u4e00\u6b21merge, $$ c_i \\leq H_1 + H_2 = l_1 + h_1 + l_2 + h_2 $$</p> <p>\u800c\u6bcf\u6b21 merge \u4e4b\u540e\uff0c \u53f3\u8def\u5f84\u4e0a\u6240\u6709\u7684\u91cd\u8282\u70b9\u5c06\u4f1a\u53d8\u6210\u8f7b\u8282\u70b9\uff0c \u8f7b\u8282\u70b9\u6709\u53ef\u80fd\u4f1a\u53d8\u6210\u91cd\u8282\u70b9</p> <p>\u5219 $$ \\Delta \\Phi(i) \\leq (l_1 + l_2) - (h_1 + h_2) $$ (\u53f3\u8def\u5f84\u5916\u7684\u91cd\u8282\u70b9\u4e0d\u53d8\uff0c\u4f1a\u88ab\u62b5\u6d88)</p> <p>\u7efc\u4e0a\uff0c\u5f97\u5230 $$ \\hat{c_i} \\leq c_i + \\Delta \\Phi(i) = 2(l_1 + l_2) $$</p> <p>\u6839\u636e\u8f7b\u8282\u70b9\u5b9a\u4e49\uff0c\u5de6\u5b50\u6811\u4e00\u5b9a\u5927\u4e8e\u53f3\u5b50\u6811\uff0c\u800c\u4e14\u5728\u53f3\u8def\u5f84\u4e0a\uff0c\u4ece\u800c \\(l_1 + l_2 = O(logN)\\)</p> <p>\u5373\u8bc1\u660e\u4e86\u6bcf\u6b21 merge \u7684\u644a\u8fd8\u4ee3\u4ef7\u4e3a \\(O(logN)\\)</p> <p>\u4e0b\u9762\u8bf4\u660e\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u63d0\u524d\u7ec8\u6b62\u4e0d\u4f1a\u5f71\u54cd\u644a\u8fd8\u4ee3\u4ef7\uff1a</p> <p>\u9996\u5148\uff0c\u63d0\u524d\u7ec8\u6b62\u786e\u5b9e\u4f1a\u5bfc\u81f4\u5269\u4e0b\u7684\u90a3\u68f5\u5b50\u6811\u4e2d\u7684\u91cd\u8282\u70b9\u672a\u88ab\u8f6c\u5316\u4e3a\u8f7b\u8282\u70b9</p> <p>\u4f46\u662f\u89c2\u5bdf\u4e0a\u65b9 \\(\\Delta \\Phi(i)\\) \u7684\u5f0f\u5b50\u4f1a\u53d1\u73b0\uff0c\u8fd9\u90e8\u5206 \\(\\Delta h\\) \u5728\u524d\u540e\u7684\u52bf\u80fd\u51fd\u6570\u4e2d\u4fdd\u6301\u4e0d\u53d8\uff0c\u4f1a\u88ab\u76f4\u63a5\u62b5\u6d88\uff0c\u56e0\u6b64\u539f\u5f0f\u4ecd\u7136\u6210\u7acb</p> Code\uff08passed Luogu P3377\uff09 SkewHeap<pre><code>struct Node{\n    int Key, pos;\n    Node *Ls, *Rs;\n    Node(int _Key, int _pos):Key(_Key), pos(_pos), Ls(NULL), Rs(NULL){}\n    bool operator &lt;(const Node &amp;Y)const{return Key == Y.Key ? pos &lt; Y.pos : Key &lt; Y.Key;} // for this specific test problem\n};\nclass SkewHeap{\n    private:\n        Node *Rot;\n        Node *Merge(Node *L, Node *R){\n            if(L == NULL) return R;         \n            if(R == NULL) return L;\n            if(*R &lt; *L) swap(L, R); // choose the smaller one as the root\n            swap(L-&gt;Ls, L-&gt;Rs);\n            L-&gt;Ls = Merge(L-&gt;Ls, R);\n            return L;\n        }\n    public:\n        void Clear(){Rot = NULL;}\n        void Push(int Key, int pos = 0){Rot = Merge(Rot, new Node(Key, pos));}\n        bool Empty(){return Rot != NULL;}\n        int Top(){return Rot-&gt;Key;}\n        int Top_pos(){return Rot-&gt;pos;}\n        int Pop(){\n            int Key = Rot-&gt;Key;\n            Rot = Merge(Rot-&gt;Ls, Rot-&gt;Rs);\n            return Key;\n        }\n        void Merge(SkewHeap T){Rot = Merge(Rot, T.Rot);}\n};\n</code></pre>"},{"location":"ADS/#binomial-queue","title":"Binomial Queue","text":"<ul> <li> <p>\u7279\u5f81</p> <ul> <li> <p>\u7531\u4e00\u7cfb\u5217\u4e8c\u9879\u6811\u7ec4\u6210\uff0c\u6bcf\u4e2a\u4e8c\u9879\u6811\u90fd\u662f\u4e00\u9897\u8282\u70b9\u6570\u4e3a\\(2^K\\)\u7684\u6811\uff0c\u6ee1\u8db3\u7b2c\\(R\\)\u5c42\u7684\u8282\u70b9\u6570\u4e3a\\(C_{K}^{R}\\)</p> </li> <li> <p>\u672c\u8d28\u4e0a\u6bcf\u68f5\u6811\u5c31\u4ee3\u8868\u4e8c\u8fdb\u5236\u4f4d\u7684\u4e00\u4e2a\u201c1\u201d\uff0c \u56e0\u6b64\u4e00\u5207\u64cd\u4f5c\u90fd\u53ef\u4ee5\u770b\u6210\u5728\u4e8c\u8fdb\u5236\u4e0a\u7684\u8fd0\u7b97</p> </li> </ul> </li> <li> <p>\u7ef4\u62a4</p> <ul> <li> <p>\u63d2\u5165</p> <ul> <li>\u76f8\u5f53\u4e8e\u4e8c\u8fdb\u5236+1, \u65b0\u8282\u70b9\u76f4\u63a5\u4e3a\u4e00\u9897\u5b50\u6811\uff0c\u7136\u540e\u5411\u4e0a\u8fdb\u4f4d\u5408\u5e76</li> </ul> </li> <li> <p>\u5220\u9664</p> <ul> <li> <p>\u627e\u6700\u5c0f\u503c\u663e\u7136\u9700\u8981\u904d\u5386\u6240\u6709\u6811\u6839</p> </li> <li> <p>\u5220\u9664\u6839\u8282\u70b9\u76f8\u5f53\u4e8e\u4e8c\u8fdb\u5236-1, \u5220\u9664\u67d0\u9897\u6811\u6839\u8282\u70b9\u540e\uff0c\u5c06\u5176\u5b50\u6811\u5206\u89e3\u4e3a\u4e00\u4e2a\u65b0\u7684\u4e8c\u9879\u961f\u5217\uff0c\u7136\u540e\u4e24\u4e8c\u8fdb\u5236\u6570\u76f8\u52a0\u5408\u5e76</p> </li> </ul> </li> <li> <p>\u5408\u5e76</p> <ul> <li> <p>\u4e24\u4e2a\u4e8c\u9879\u961f\u5217\u5408\u5e76\uff0c\u76f8\u5f53\u4e8e\u4e8c\u8fdb\u5236\u76f8\u52a0\uff0c\u7136\u540e\u5c06\u8fdb\u4f4d\u7684\u90e8\u5206\u5408\u5e76</p> </li> <li> <p>\u4e24\u68f5\u4e8c\u9879\u6811\u5408\u5e76\uff0c\u4e3a\u4e86\u5e94\u7528\u5e38\u7528\u7684\u201cLeft-Child-Next-Sibling\u201d\u5b58\u50a8\u6cd5\uff0c\u4e00\u822c\u5c06\u5b50\u6811\u6309\u5927\u5c0f\u5012\u6392\uff0c\u7136\u540e\u65b0\u6765\u4e00\u9897\u540c\u7b49\u5927\u5c0f\u7684\u5b50\u6811\u65f6\uff0c\u76f4\u63a5\u5c06\u6839\u5927\u7684\u63d2\u5230\u6839\u5c0f\u7684\u5de6\u513f\u5b50\u4e0a\u5373\u53ef</p> <p>\uff08\u4f46\u662f\u8fd9\u79cd\u65b9\u5f0f\u5b9e\u9645\u6709\u70b9\u667a\u969c\uff0c\u4e0d\u5982\u52a0\u4e0a\u6700\u5de6\u6700\u53f3\u513f\u5b50\u6307\u9488\uff0c\u8be6\u89c1\u4e0b\u65b9\u4ee3\u7801\u90e8\u5206\uff09 </p> </li> </ul> </li> </ul> </li> <li> <p>\u590d\u6742\u5ea6\u5206\u6790\uff1a</p> <ul> <li> <p>\u63d2\u5165</p> <ul> <li> <p>\u8003\u8651\u5355\u6b21\u8fdb\u4f4d\uff0c\u6700\u574f\u590d\u6742\u5ea6\u4e3a\\(O(logN)\\)</p> </li> <li> <p>\u4f46\u662f\u8003\u8651\u6bcf\u4e00\u4f4d\u6240\u80fd\u8d21\u732e\u7684\u8fdb\u4f4d\u6b21\u6570</p> \\[ T(N) = \\frac{N}{2} + \\frac{N}{2^2} + \\frac{N}{2^3} + \\cdots = O(N) \\] <p>\u56e0\u6b64\uff0c\u63d2\u5165\u64cd\u4f5c\u7684\u5747\u644a\u590d\u6742\u5ea6\u4e3a\\(O(1)\\) </p> </li> </ul> </li> <li> <p>\u5408\u5e76 </p> <ul> <li> <p>\u7531\u4e0a\u53ef\u77e5\uff0c\u4e24\u68f5\u4e8c\u9879\u6811\u7684\u5408\u5e76\u662f\\(O(1)\\)\u7684</p> </li> <li> <p>\u4e8c\u9879\u961f\u5217\u7684\u5408\u5e76\u64cd\u4f5c\u5b9e\u9645\u4e0a\u5c31\u662f\u4e8c\u8fdb\u5236\u7684\u52a0\u6cd5\uff0c\u56e0\u6b64\u590d\u6742\u5ea6\u4e3a\\(O(logN) * O(1) = O(logN)\\)</p> </li> </ul> </li> <li> <p>\u5220\u9664</p> <ul> <li> <p>\u67e5\u8be2\u6700\u5c0f\u503c\u663e\u7136\u4e3a\\(O(logN)\\)</p> </li> <li> <p>\u5220\u9664\u672c\u8d28\u4e0a\u5c31\u662f\u4e8c\u9879\u961f\u5217\u7684\u5408\u5e76\uff0c\u56e0\u6b64\u590d\u6742\u4e3a\\(O(logN)\\) </p> </li> </ul> </li> </ul> </li> </ul> Code (Passed Luogu P3378) <p>\u7eaf\u5c5e\u81ea\u5df1NT\uff0c\u60f3\u8981\u5b9e\u73b0\u5168\u94fe\u8868\u7248\u7684\uff0c\u7136\u540e\u5c31\u88ab\u5404\u79cdNULL\u6307\u9488\u548c\u574f\u6307\u9488\u6298\u78e8\uff08\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u7a7a\u6307\u9488\u5224\u65ad\u3001\u7ed3\u6784\u4f53\u91cd\u8f7d\u5c0f\u4e8e\u53f7\u540e\u5fd8\u8bb0\u52a0\u201c*\u201d\u5bfc\u81f4\u6307\u9488\u5185\u5b58\u5730\u5740\u6bd4\u5927\u5c0f\u7b49\uff09</p> <p>\u800c\u4e14\u6211\u8d8a\u5199\u8d8a\u89c9\u5f97\u8bfe\u4ef6\u4e2d\u4e3a\u4e86\u6ee1\u8db3left-child-next-sibling\u7684\u5b58\u50a8\u65b9\u5f0f\u800c\u5012\u6392\u513f\u5b50\u5b9e\u5728\u662f\u592a\u667a\u969c\u4e86\uff0c\u56e0\u4e3a\u4e8c\u8fdb\u5236\u52a0\u6cd5\u5e94\u8be5\u662f\u4ece\u4f4e\u4f4d\u5f00\u59cb\u8fd0\u7b97\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4\u5220\u9664\u64cd\u4f5c\u8fc7\u4e8e\u5c34\u5c2c\uff0c\u751a\u81f3\u9700\u8981\u989d\u5916\u5f00\u9500\u53cd\u8f6c\u94fe\u8868\u7b49</p> <p>\u56e0\u6b64\u7ecf\u5386\u5404\u79cd\u9519\u8bef\u540e\uff0c\u6211\u9009\u62e9\u6b63\u6392\u513f\u5b50\uff0c\u4fdd\u8bc1merge\u7684\u7edf\u4e00\u6027\uff0c\u5e76\u4e14\u5206\u522b\u4f7f\u7528\u5de6\u53f3\u6307\u9488\u6765\u8bb0\u5f55\u6700\u5de6\u8fb9\u7684\u513f\u5b50\u548c\u6700\u53f3\u8fb9\u7684\u513f\u5b50\uff0c\u4fdd\u8bc1\u4e86\u4e8c\u9879\u6811\u5408\u5e76\u4ecd\u7136\u4e3aO(1)\uff0c~~\u7528\u8f83\u5c0f\u7684\u7a7a\u95f4\u5927\u5927\u964d\u4f4e\u4e86\u7f16\u7801\u590d\u6742\u5ea6~~</p> <p>\u6b64\u5916\uff0c\u7531\u4e8e\u7528\u94fe\u8868\u5b9e\u73b0\uff0c\u4e24\u68f5\u4e8c\u9879\u6811\u5305\u62ec\u8fdb\u4f4d\u7684\u4e8c\u9879\u6811\u7684\u5927\u5c0f\u5173\u7cfb\u5e76\u4e0d\u80fd\u4fdd\u8bc1\uff0c\u56e0\u6b64\u5728\u53cc\u6307\u9488\u7684\u57fa\u7840\u4e0a\u53c8\u8981\u52a0\u5165\u5404\u79cd\u7e41\u7410\u7684\u5224\u65ad\uff0c\u786e\u5b9e\u662f\u6709\u70b9\u9ebb\u70e6\u7684\uff0c\u8fd8\u662f\u6570\u7ec4\u5b9e\u73b0\u6bd4\u8f83\u597d\uff01\uff01\uff01</p> Binomial Queue<pre><code>class BinomialQueue{\nprivate:\n    struct Node{\n        int data, size;\n        Node *Ls, *nxt, *Rs;    // left-child-next-sibling + right-child to simplify the coding\n        Node(int _data): data(_data), size(1), Ls(NULL), nxt(NULL), Rs(NULL){}\n        bool operator &lt; (const Node &amp;rhs) const{return data &lt; rhs.data;}\n    };\n    Node *Rots;\n    Node *Merge(Node *i, Node *j){// Merge two binomial trees in O(1)\n        if(i == NULL) return j;\n        if(j == NULL) return i;\n        if(*j &lt; *i) swap(i, j);\n        if(i-&gt;Ls == NULL) i-&gt;Ls = i-&gt;Rs = j; else i-&gt;Rs-&gt;nxt = j, i-&gt;Rs = j;\n        i-&gt;size += j-&gt;size, i-&gt;nxt = j-&gt;nxt = NULL;\n        return i;\n    }\n    void Merge(BinomialQueue *BQ){\n        if(BQ == NULL) return;\n        Node *i = Rots, *j = BQ-&gt;Rots, *k = NULL, *t = NULL, *tp = NULL; \n        // i is the current node of this, j is the current node of BQ, k is the carry node\n        // t is the new line of the result, tp is the current node of the new line\n        Rots = NULL;\n        while(i != NULL || j != NULL || k != NULL){\n            if(i == NULL || (j != NULL &amp;&amp; j-&gt;size &lt; i-&gt;size)) swap(i, j);\n            Node *nxti = NULL, *nxtj = NULL;\n            if(i != NULL) nxti = i-&gt;nxt;\n            if(j != NULL) nxtj = j-&gt;nxt; // store the next node of i and j, otherwise it will be changed\n            if(i != NULL &amp;&amp; j != NULL){ // easy task \n                if(k != NULL &amp;&amp; k-&gt;size &lt; i-&gt;size) tp = k, k= NULL;          // easy\n                else if(i-&gt;size == j-&gt;size) tp = k, k = Merge(i, j), i = nxti, j = nxtj; // 1 + 1 + ?\n                else if(k != NULL) tp = NULL, k = Merge(i, k), i = nxti;    // 1 + 1 + 0\n                else tp = i, i = nxti;                                      // 1\n            }else{\n                int cnt = (i != NULL) + (j != NULL) + (k != NULL);\n                if(cnt == 1){   // 1 node in the line  1 + 0 + 0\n                    if(i != NULL) tp = i, i = nxti;\n                    else if(j != NULL) tp = j, j = nxtj;\n                    else tp = k, k = NULL;\n                }\n                else if(k-&gt;size == i-&gt;size) tp = NULL, k = Merge(i, k), i = nxti;  // 1 + 0 + 1\n                else tp = k, k = NULL;   // 0 + 0 + 1 \n            }\n            if(tp != NULL)\n                if(Rots == NULL) Rots = t = tp;else t-&gt;nxt = tp, t = t-&gt;nxt;\n            if(j == NULL &amp;&amp; k == NULL){t-&gt;nxt = i;break;} // break the loop to minimize the time complexity\n        }\n    }\n\npublic:\n    BinomialQueue(): Rots(NULL){}\n    BinomialQueue(Node *x): Rots(x){}\n    bool Empty(){return Rots == NULL;}\n    int Top(){  // return the minimum element\n        if(Empty()) return -1;\n        Node *i = Rots;\n        int res = i-&gt;data;\n        while(i != NULL) res = min(res, i-&gt;data), i = i-&gt;nxt;\n        return res;\n    }\n\n    void Insert(int x){Merge(new BinomialQueue(new Node(x)));}\n\n    int Pop(){ // pop the min\n        if(Empty()) return -1;\n        Node *i = Rots, *Pre = NULL, *Pos = i, *Pos_Pre = NULL;\n        while(i != NULL){\n            if(*i &lt; *Pos) Pos = i, Pos_Pre = Pre;\n            Pre = i, i = i-&gt;nxt;\n        }\n        if(Pos_Pre == NULL) Rots = Pos-&gt;nxt;else Pos_Pre-&gt;nxt = Pos-&gt;nxt;\n\n        int res = Pos-&gt;data;\n        Merge(new BinomialQueue(Pos-&gt;Ls));\n        return res;\n    }\n\n    void Print(){  // for debug\n        queue&lt;Node *&gt;Q;\n        Q.push(Rots);\n        while(!Q.empty()){\n            Node *j = Q.front(); Q.pop();\n            if(j == NULL) continue;\n            for(; j != NULL; j = j-&gt;nxt) Q.push(j-&gt;Ls), printf(\"%d \", j-&gt;data);\n            puts(\"\");\n        }\n        puts(\"\");\n    }\n};\n</code></pre>"},{"location":"ADS/#fibonacci-heap","title":"Fibonacci Heap","text":"<ul> <li> <p>\u7279\u5f81</p> <ul> <li> <p>\u6709\u70b9\u7c7b\u4f3c\u4e0e\u4e8c\u9879\u961f\u5217\uff0c\u7531\u4e00\u5806\u5b50\u6811\u4e32\u63a5\u800c\u6210\uff0c\u4f46\u662f\u6bcf\u4e2a\u8282\u70b9\u53ef\u4ee5\u6709\u4efb\u610f\u591a\u7684\u513f\u5b50\uff0c\u800c\u4e14\u4e0d\u518d\u662f\u4e8c\u9879\u6811</p> </li> <li> <p>\u5144\u5f1f\u95f4\u901a\u8fc7\u5faa\u73af\u53cc\u5411\u94fe\u8868\u4e32\u63a5\uff0c\u7236\u5b50\u95f4\u540c\u6837\u4f7f\u7528\u7c7b\u4f3c\u201cLeft-Child-Next-Sibling\u201d\u5b58\u50a8\u65b9\u5f0f </p> </li> <li> <p>\u5177\u6709\u6700\u5c0f\u5806\u7684\u6027\u8d28\uff0c\u5373\u6839\u8282\u70b9\u4e3a\u6700\u5c0f\u503c </p> </li> </ul> </li> <li> <p>\u7ef4\u62a4</p> <ul> <li> <p>\u63d2\u5165</p> <ul> <li>\u76f4\u63a5\u5728root list\u4e2d\u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\uff0c\u7136\u540e\u66f4\u65b0\u6700\u5c0f\u503c</li> </ul> </li> <li> <p>\u5220\u9664</p> <ul> <li> <p>\u5220\u9664\u6700\u5c0f\u503c\uff0c\u5c06\u5176\u5b50\u6811\u5168\u90e8\u63d2\u5165\u5230root list\u4e2d</p> </li> <li> <p>\u795e\u5947\u5408\u5e76</p> <ul> <li> <p>\u5c06root list\u4e2d\u6240\u6709\u5ea6\u76f8\u540c\uff08\u8fd9\u91cc\u5ea6 \u6307\u8282\u70b9\u7684\u76f4\u8fde\u513f\u5b50\u6570\u76ee\uff09\u7684\u5b50\u6811\u6309\u5c0f\u6839\u5806\u7684\u65b9\u5f0f\u5408\u5e76</p> </li> <li> <p>\u91cd\u590d\u5904\u7406\uff0c\u76f4\u81f3root list\u4e2d\u6ca1\u6709\u5ea6\u76f8\u540c\u7684\u5b50\u6811   </p> </li> </ul> </li> </ul> </li> <li> <p>\u5408\u5e76</p> <ul> <li>\u4e24\u4e2a\u5806\u5408\u5e76\uff0c\u76f8\u5f53\u4e8e\u4e24\u4e2aroot list\u505a\u5faa\u73af\u53cc\u5411\u94fe\u8868\u7684\u5408\u5e76\uff0c\u7136\u540e\u66f4\u65b0\u6700\u5c0f\u503c\u5373\u53ef</li> </ul> </li> <li> <p>\u51cf\u5c0f\u5173\u952e\u5b57</p> <ul> <li> <p>\u5c06\u8282\u70b9\u7684\u5173\u952e\u5b57\u51cf\u5c0f\uff0c\u7136\u540e\u4e0e\u7236\u8282\u70b9\u6bd4\u8f83\uff0c\u5982\u679c\u5c0f\u4e8e\u7236\u8282\u70b9\uff0c\u5219\u4e0d\u6ee1\u8db3\u5c0f\u6839\u5806\u7684\u6027\u8d28\uff0c\u5c06\u8fd9\u68f5\u5b50\u6811\u6458\u4e0b\u653e\u5230root list\u4e2d\uff0c\u7136\u540e\u5411\u4e0a\u7ea7\u8054\u5904\u7406</p> </li> <li> <p>\u82e5\u67d0\u4e2a\u975e\u6839\u8282\u70b9\u5df2\u7ecf\u5931\u53bb\u4e86\u4e24\u4e2a\u513f\u5b50\uff0c\u5219\u5c06\u5176\u6458\u4e0b\u653e\u5230root list\u4e2d\uff0c\u9012\u5f52\u5411\u4e0a\u7ea7\u8054\u5904\u7406 </p> </li> </ul> </li> <li> <p>\u5220\u9664\u8282\u70b9</p> <ul> <li>\u5c06\u8282\u70b9\u7684\u5173\u952e\u5b57\u51cf\u5c0f\u5230\u8d1f\u65e0\u7a77\uff0c\u7136\u540e\u5220\u9664\u6700\u5c0f\u503c\u5373\u53ef</li> </ul> </li> </ul> </li> <li> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <p>\u91c7\u7528\u52bf\u80fd\u5206\u6790\u6cd5\uff0c\u5b9a\u4e49\u52bf\u80fd\u51fd\u6570 \\(\\Phi(H) = t(H) + 2m(H)\\)\uff0c\u5176\u4e2d \\(t(H)\\) \u4e3aroot list\u4e2d\u7684\u8282\u70b9\u6570\uff0c\\(m(H)\\) \u4e3a\u5df2\u7ecf\u6807\u8bb0\u8fc7\u7684\u8282\u70b9\u6570\uff08\u5373\u5df2\u7ecf\u5931\u53bb\u4e00\u4e2a\u513f\u5b50\u7684\u975e\u6839\u8282\u70b9\uff09</p> <p>\u5148\u8981\u8bc1\u660e\u4e00\u70b9\uff1aN \u4e2a\u8282\u70b9\u7684\u6590\u6ce2\u90a3\u5951\u5806\u7684\u5b50\u6811\u7684\u6700\u5927\u5ea6\u6570 \\(D_n = O(logN)\\)</p> <p>\u4e3a\u6b64\uff0c\u8bbe\u8282\u70b9 x \u6240\u5728\u5b50\u6811\u7684\u8282\u70b9\u6570\u4e3a \\(S_x\\)\uff0c\u5219 \\(S_x \\geq F_{k+2}\\), \u5176\u4e2d \\(F_k\\) \u4e3a\u7b2c k \u4e2a\u6590\u6ce2\u90a3\u5951\u6570</p> <p>\u8bc1\u660e\uff1a</p> <p>\u9996\u5148\uff0c\u5bf9\u4e8e x \u7684\u6240\u6709\u6309\u6dfb\u52a0\u987a\u5e8f\u6392\u5217\u7684\u5b50\u6811\\(y_i\\)\uff0c\u6709\\(y_i \\geq (i-1) -1 =i-2\\)\uff08\u56e0\u4e3a\u53ea\u6709\u5ea6\u6570\u76f8\u540c\u624d\u80fd\u5408\u5e76\uff0c\u5e76\u4e14\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u5931\u53bb\u4e00\u4e2a\u513f\u5b50\uff09</p> <p>\u8bbe\u5ea6\u6570\u4e3a k \u7684\u8282\u70b9\u6240\u5728\u5b50\u6811\u7684\u6700\u5c0f\u5927\u5c0f\u4e3a\\(S_k\\)\uff0c\u5219\u6709 \\(S_k \\geq 2 + \\Sigma_2^k size(y_i) \\geq 2 + \\Sigma_{2}^{k}S_{i-2} \\geq F_{k+2}\\)</p> <ul> <li> <p>\u63d2\u5165</p> <ul> <li>\u76f4\u63a5\u63d2\u5165\u5230root list\uff0c\u663e\u7136\u590d\u6742\u5ea6\u4e3a\\(O(1)\\)</li> </ul> </li> <li> <p>\u5220\u9664</p> <ul> <li> <p>\u67e5\u8be2\u6700\u5c0f\u503c\u53ef\u4ee5\u76f4\u63a5\u7528\u4e00\u4e2a\u6307\u9488\u8bb0\u5f55\uff0c\u56e0\u6b64\u4e3a\\(O(1)\\)</p> </li> <li> <p>\u5220\u9664\u65f6\uff0c\u9996\u5148\u9700\u8981\u5c06\u6240\u6709\u5b50\u6811\u63d2\u5165\u5230root list\u4e2d\uff0c\u9700\u8981\\(O(D_N) = O(logN)\\)</p> </li> <li> <p>\u795e\u5947\u5408\u5e76\u7684\u5747\u644a\u5206\u6790</p> <ul> <li> <p>\u5408\u5e76\u9700\u8981\u5904\u7406\u7684\u603b\u7ed3\u70b9\u6570\u6700\u5927\u4e3a \\(D_N + t(H) - 1\\)\uff0c\u7531\u4e8e\u6bcf\u6b21\u5408\u5e76\u90fd\u4f1a\u51cf\u5c11\u4e00\u4e2a\u8282\u70b9\uff0c\u56e0\u6b64\u5b9e\u9645\u5f00\u9500\u7684\u590d\u6742\u5ea6\u4e3a\\(O(D_N + t(H) - 1)\\)</p> </li> <li> <p>\u5904\u7406\u8fc7\u540e\uff0c\u663e\u7136\\(t(H) \\leq D_N + 1\\) </p> </li> <li> <p>\u56e0\u6b64\u603b\u5747\u644a\u590d\u6742\u5ea6      $$\\hat c_i = O(D_N + t(H)) + \\Delta \\Phi $$</p> \\[= O(D_N + t(H)) + ((D_N + 1 + 2m(H)) - (t(H) + 2m(H))) \\] \\[= O(D_N) = O(logN)\\] </li> </ul> </li> </ul> </li> <li> <p>\u5408\u5e76</p> <ul> <li>\u4e24\u4e2a\u94fe\u8868\u5408\u5e76\uff0c\u663e\u7136\u590d\u6742\u5ea6\u4e3a\\(O(1)\\)</li> </ul> </li> <li> <p>\u51cf\u5c0f\u5173\u952e\u5b57</p> <ul> <li> <p>\u4e3b\u8981\u5728\u4e8e\u9012\u5f52\u5411\u4e0a\u7ea7\u8054\u65ad\u5f00\u7684\u5904\u7406\uff0c\u4e0b\u9762\u8bc1\u660e\u5176\u5747\u644a\u590d\u6742\u5ea6\u4e3a\\(O(1)\\)</p> <p>\u5047\u8bbe\u8c03\u7528\u4e86 k \u6b21\u9012\u5f52\u5411\u4e0a\u7684\u64cd\u4f5c\uff0c\u5373\u62d4\u6389\u4e86 k - 1 \u4e2a\u8282\u70b9\uff0c\u590d\u6742\u5ea6\u4e3a \\(O(k)\\)</p> <p>\\(\\Delta \\Phi \\leq (t(H) + (k - 1) + 1 + 2(m(H) - (k - 1) + 1)) - (t(H) + 2m(H)) = 4 - c\\) </p> <p>\u5176\u4e2d\u524d\u9762\u6839\u8282\u70b9\u7684 +1 \u8868\u793a\u51cf\u5c0f\u5173\u952e\u5b57\u7684\u8fd9\u68f5\u5b50\u6811\uff0c\u540e\u9762\u7684 +1 \u8868\u793a\u6700\u540e\u505c\u6b62\u65f6\u53ef\u80fd\u7684\u65b0\u589e\u6807\u8bb0</p> <p>\u56e0\u6b64\uff0c\u6700\u7ec8\u7684\u5747\u644a\u590d\u6742\u5ea6 </p> \\[\\hat c_i = O(k) + \\Delta \\Phi = O(1)\\] </li> </ul> </li> </ul> </li> </ul> Code (Passed Luogu P3371 &amp; P4779) <p>\u6590\u6ce2\u90a3\u5951\u7684\u4f18\u8d8a\u6027\u4e3b\u8981\u4f53\u73b0\u5728\u63d2\u5165\u548c\u51cf\u5c0f\u5173\u952e\u5b57\u7684\u64cd\u4f5c\u4e0a\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u5728\\(O(1)\\)\u7684\u65f6\u95f4\u5185\u5b8c\u6210</p> <p>\u56e0\u6b64\uff0c\u5728\u5220\u9664\u8f83\u5c11\u7684\u60c5\u51b5\u4e0b\uff0c\u6590\u6ce2\u90a3\u5951\u5806\u7684\u6548\u7387\u662f\u975e\u5e38\u9ad8\u7684\uff0c\u4f46\u662f\u5728\u5220\u9664\u8f83\u591a\u7684\u60c5\u51b5\u4e0b\uff0c\u7531\u4e8e\u603b\u4f53\u5e38\u6570\u8f83\u5927\uff0c\u53ef\u80fd\u4f1a\u6bd4\u4e00\u822c\u7684\u5806\u66f4\u6162</p> <p>\u7ecf\u5178\uff1a\u6590\u6ce2\u90a3\u5951\u5806\u4f18\u5316DIJ \u590d\u6742\u5ea6 \\(O(N + MlogM) --&gt; O(NlogN + M)\\)\uff0c\u5728\u7a20\u5bc6\u56fe\u7684\u4f18\u5316\u6548\u679c\u8fd8\u662f\u975e\u5e38\u660e\u663e\u7684</p> Fibonacci Heap<pre><code>class FiboHeap{\nprivate:\n    struct Node{\n        int pos, data;// pos denotes the node, data denotes the distance\n        int degree;     // degree records the direct children of this node\n        Node *Ls, *Rs, *Fa, *Son;//Ls &amp; Rs for cycle list with siblings, Fa for parent, Son for  a single child (randomly chosen)\n        bool mark;      // spcecial signal for FiboHeap, set to 1 if a child of this node has been removed\n        Node(int _pos, int _data){    // new Node at node _pos with value _data\n            pos = _pos, data = _data;\n            degree = 0;\n            Ls = Rs = this, Fa = Son = NULL;\n            mark = 0;\n        }\n        void Remove(){  // remove this Node from the cycle-list\n            this-&gt;Ls-&gt;Rs = this-&gt;Rs;\n            this-&gt;Rs-&gt;Ls = this-&gt;Ls;\n            this-&gt;Ls = this-&gt;Rs = this, this-&gt;Fa = NULL;\n        }\n        void Link(Node *L, Node *R){ // link this node between L and R\n            L-&gt;Rs = this, this-&gt;Ls = L;\n            R-&gt;Ls = this, this-&gt;Rs = R;\n        }\n    };\n    int Size;\n    Node *Min;\n    Node *Dis[MaxN];\n    void Consolidate(){ // Consolidating the nodes (subtrees) in root list\n        static Node *A[MaxS];// A[i] denotes the subtree with degree i\n        Node *p = Min, *q;\n        LL S = 0; // State of the degree of the root list, more precisely locate the nodes not null\n        while(p != NULL){\n            q = p, p = p-&gt;Rs;\n            if(q == p) p = NULL;\n            q-&gt;Remove();\n            while(A[q-&gt;degree] != NULL){    // merge the subtree with the same degree, ensure the degree of the root list is unique\n                Node *t = A[q-&gt;degree];\n                if(q-&gt;data &gt; t-&gt;data) swap(q, t); // minimum heap\n\n                t-&gt;Fa = q, S ^= 1ll &lt;&lt; (q-&gt;degree), A[q-&gt;degree++] = NULL;\n                if(q-&gt;Son == NULL) q-&gt;Son = t;else t-&gt;Link(q-&gt;Son-&gt;Ls, q-&gt;Son);\n            }\n            S |= 1ll &lt;&lt; (q-&gt;degree), A[q-&gt;degree] = q;\n        }\n        Min = NULL;\n        while(S){\n            int i = __builtin_ctzll(S);// find the first bit 1\n            S ^= 1ll &lt;&lt; i;\n            if(Min == NULL) Min = A[i], Min-&gt;Ls = Min-&gt;Rs = Min;\n            else{\n                A[i]-&gt;Link(Min-&gt;Ls, Min);\n                if(A[i]-&gt;data &lt; Min-&gt;data) Min = A[i];\n            }\n            A[i] = NULL;\n        }\n    }\n    void Cut(Node *p, Node *q){ // cut p from its parent q\n        if(q-&gt;Son == p)\n            if(p == p-&gt;Rs) q-&gt;Son = NULL;else q-&gt;Son = p-&gt;Rs;\n        p-&gt;Remove(), q-&gt;degree--;\n\n        p-&gt;mark = 0, p-&gt;Link(Min-&gt;Ls, Min);\n    }\n    void CascadingCut(Node *p){ // cascading cut p recursively\n        Node *q = p-&gt;Fa;\n        if(q != NULL){\n            if(p-&gt;mark == 0) p-&gt;mark = 1;\n            else Cut(p, q), CascadingCut(q);\n        }\n    }\npublic:\n    FiboHeap(): Min(NULL), Size(0){}\n    void Clear(){Min = NULL, Size = 0;}\n    bool Empty(){return !Size;} // check if the heap is empty\n    void Insert(int i, int x){\n        Size++;\n        Node *p = new Node(i, x);  // build a new Node &amp; insert it into root list\n        if(Min == NULL){\n            Min = p;\n            Min-&gt;Ls = Min-&gt;Rs = Min;\n        }else{\n            p-&gt;Link(Min-&gt;Ls, Min);\n            if(p-&gt;data &lt; Min-&gt;data) Min = p;\n        }\n        Dis[i] = p;\n    }\n    int Top(){return Min-&gt;data;} // get the minimum value\n    bool Find(int i){return Dis[i] != NULL;}    // check if the i-th node is in the heap\n    int GetData(int i){return Dis[i]-&gt;data;} // get the value of i-th node\n    void Merge(FiboHeap *H){    // merge two heaps(not used in this problem)\n        if(H-&gt;Min == NULL) return;\n        if(Min == NULL) return (void)(Min = H-&gt;Min, Size = H-&gt;Size);\n        Node *L = Min-&gt;Ls, *R = H-&gt;Min-&gt;Ls;\n        Min-&gt;Ls = R, R-&gt;Rs = Min;\n        L-&gt;Rs = H-&gt;Min, H-&gt;Min-&gt;Ls = L;\n        Size += H-&gt;Size;\n        if(H-&gt;Min-&gt;data &lt; Min-&gt;data) Min = H-&gt;Min;\n    }\n    int Pop(){  // pop the minimum value\n        Node *p = Min-&gt;Son, *q;\n        while(p != NULL){   // split the subtree of the minimum node, and insert them into the root list\n            q = p, p = p-&gt;Rs;\n            if(p == q) p = NULL;\n            q-&gt;Remove(), q-&gt;Link(Min-&gt;Ls, Min);\n        }\n        p = Min;\n\n        if(p == p-&gt;Rs) Min = NULL;\n        else{\n            Min = p-&gt;Rs, p-&gt;Remove();\n            Consolidate();\n        }\n        Size--;\n        return p-&gt;pos; \n    }       \n    void Decrease(int i, int x){    // decrease the value of i-th Node to x\n        Node *p = Dis[i];\n        p-&gt;data = x;\n\n        if(p-&gt;Fa != NULL){      // if the node is not in the root list\n            Node *q = p-&gt;Fa;\n            if(p-&gt;data &lt; q-&gt;data){  // if the value of the node is smaller than its parent, cut it &amp; cascading cut its parent\n                Cut(p, q);\n                CascadingCut(q);\n            }\n        }\n\n        if(x &lt; Min-&gt;data) Min = p;  // update the minimum value\n    }\n};\n</code></pre>"},{"location":"ADS/#algorithm","title":"Algorithm","text":""},{"location":"ADS/#amortized-analysis","title":"Amortized Analysis (\u644a\u8fd8\u5206\u6790)","text":"<p>worst-case bound &gt;= amortized bound &gt;= average-case bound(\u5f3a\u5f31\u5173\u7cfb)</p> <ul> <li> <p>Aggregated Analysis (\u805a\u7c7b\u5206\u6790)</p> <ul> <li> <p>\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3aN\u7684\u64cd\u4f5c\u5e8f\u5217\uff0c\u82e5\u8be5\u64cd\u4f5c\u5e8f\u5217\u7684\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aT(N),\u5219\u8be5\u64cd\u4f5c\u5e8f\u5217\u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\uff08\u644a\u8fd8\u4ee3\u4ef7\uff09\u4e3a T(N) / N</p> </li> <li> <p>\u7b80\u5355\u7c97\u66b4\uff0c\u4f46\u662f\u5f88\u591a\u65f6\u5019\u4e0d\u591f\u7cbe\u786e\uff0c\u56e0\u4e3a T(N) \u5e76\u4e0d\u4e00\u5b9a\u597d\u6c42 </p> </li> </ul> </li> <li> <p>Accounting Method (\u6838\u7b97\u6cd5)</p> <ul> <li> <p>\u4e3a\u6bcf\u4e2a\u64cd\u4f5c\u5206\u914d\u4e00\u4e2a\u989d\u5916\u644a\u8fd8\u4ee3\u4ef7\uff0c\u4ece\u800c\u4fbf\u4e8e\u4f30\u8ba1\u603b\u4ee3\u4ef7</p> </li> <li> <p>\u5e38\u89c1\u7406\u89e3\uff1a \u5c06\u989d\u5916\u5206\u914d\u7684\u4ee3\u4ef7\u89c6\u4e3a\u5b58\u94b1\uff0c\u4e4b\u540e\u7684\u4e00\u4e9b\u64cd\u4f5c\u53ef\u4ee5\u901a\u8fc7\u53d6\u94b1\u6765\u89e3\u51b3\uff0c\u4ece\u800c\u4f7f\u5f97\u603b\u4ee3\u4ef7\u4e0d\u4f1a\u8d85\u8fc7\u9884\u671f</p> </li> <li> <p>\u4e2a\u4eba\u611f\u89c9\uff0c\u4e0d\u5982\u76f4\u63a5\u4ece\u5b9a\u4e49\u5f0f\u4e0a\u53bb\u7406\u89e3</p> <ul> <li> <p>\\(\\sum_{i=1}^{n}c_i + \\sum_{i=1}^{n}t_i \\leq \\sum_{i=1}^{n}a_i\\)</p> </li> <li> <p>\\(c_i\\) \u4e3a\u5b9e\u9645\u6bcf\u4e00\u6b65\u7684\u4ee3\u4ef7\uff0c\\(t_i\\) \u4e3a\u989d\u5916\u644a\u8fd8\u4ee3\u4ef7\uff0c\\(a_i\\) \u4e3a\u4f30\u8ba1\u7684\u644a\u8fd8\u4ee3\u4ef7</p> </li> <li> <p>\u56e0\u800c\u53ea\u8981\u8ba9\\(t_i \\geq 0\\), \u5c31\u80fd\u4fdd\u8bc1\u5206\u6790\u7684\u590d\u6742\u5ea6\u4e00\u5b9a\u662f\u4e0a\u754c\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u7c7b\u4f3c\u4e8e\u6570\u5217\u653e\u7f29\uff0c\u901a\u8fc7\u5408\u7406~~\uff08\u7384\u5b66\uff09~~\u7684\u5206\u914d\u6743\u503c\uff0c\u4f7f\u5f97\u603b\u548c\u4e0d\u4f1a\u8d85\u8fc7\u9884\u671f</p> </li> </ul> </li> </ul> </li> <li> <p>Potential Method\uff08\u52bf\u80fd\u6cd5\uff09</p> <ul> <li> <p>\u7ed9\u6bcf\u4e2a\u72b6\u6001\u5206\u914d\u4e00\u4e2a\u52bf\u80fd\uff0c\u5c06\u644a\u8fd8\u4ee3\u4ef7\u89c6\u4e3a\u52bf\u80fd\u7684\u53d8\u5316</p> <ul> <li> <p>\\(c_i\\) \u4e3a\u5b9e\u9645\u6bcf\u4e00\u6b65\u7684\u4ee3\u4ef7\uff0c\\(a_i\\) \u4e3a\u4f30\u8ba1\u7684\u644a\u8fd8\u4ee3\u4ef7\uff0c\\(\\Phi_i\\) \u4e3a\u52bf\u80fd</p> </li> <li> <p>\\(\\Phi_0 = 0\\)</p> </li> <li> <p>\\(c_i + \\Phi_i - \\Phi_{i-1} =a_i\\) </p> </li> <li> <p>\u4e24\u8fb9\u6c42\u548c\uff0c\u5f97\u5230 \\(\\sum_{i=1}^{n}c_i + \\Phi_{n} = \\sum_{i=1}^{n}a_i\\)</p> </li> </ul> </li> <li> <p>\u4ece\u800c\u76f8\u5f53\u4e8e\u83b7\u5f97\u6bd4\u6838\u7b97\u6cd5\u66f4\u52a0\u5bbd\u677e\u7684\u6761\u4ef6\uff0c\u6211\u4eec\u4e0d\u518d\u9700\u8981\u6bcf\u4e00\u6b65\u7684\u644a\u8fd8\u4ee3\u4ef7\u90fd\u4e3a\u6b63\uff0c\u53ea\u8981\u9009\u62e9\u4e00\u4e2a\u7384\u5b66\u7684\u52bf\u80fd\u51fd\u6570\uff08\u8003\u8651\u9898\u76ee\u7279\u6027\uff09\uff0c\u4fdd\u8bc1\u6700\u540e\u4e00\u4e2a\u72b6\u6001\u7684\u52bf\u80fd\u4e3a\u6b63\u5373\u53ef</p> </li> <li> <p>Splay Tree</p> <ul> <li> <p>\u9009\u62e9\u52bf\u80fd\u51fd\u6570 \\(\\Phi = \\sum_{i=1}^{n}log(size_i)\\), \u5373\u4e3a\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u5927\u5c0f\u4e4b\u548c</p> </li> <li> <p>\u5bf9\u4e09\u79cd\u65cb\u8f6c\u64cd\u4f5c\u8fdb\u884c\u5206\u522b\u5206\u6790\uff0c\u53ef\u4ee5\u8bc1\u660e\uff0c\u6bcf\u6b21\u65cb\u8f6c\u7684\u644a\u8fd8\u4ee3\u4ef7\u4e3a \\(O(logN)\\)</p> </li> <li> <p></p> </li> </ul> </li> </ul> </li> <li> <p>NOTES:</p> <ul> <li>Amortized bounds are weaker than the corresponding worst-case bounds, because there is no guarantee for any single operation. </li> </ul> </li> </ul>"},{"location":"ADS/#backtracking","title":"BackTracking","text":"<p>\\(\\alpha - \\beta\\) pruning</p> <ul> <li> <p>\\(\\alpha\\)</p> <ul> <li> <p>\u6c42\u6700\u5927\u503c\uff0c\u5f53\u524d\u8282\u70b9\u6c42\u6700\u5c0f\u503c\u4e14\u5f53\u524d\u503c\u5df2\u7ecf\u504f\u5c0f</p> <p></p> </li> </ul> </li> <li> <p>\\(\\beta\\)</p> <ul> <li> <p>\u6c42\u6700\u5c0f\u503c\uff0c\u5f53\u524d\u8282\u70b9\u6c42\u6700\u5927\u503c\u4e14\u5f53\u524d\u503c\u5df2\u7ecf\u504f\u5927</p> <p> </p> </li> </ul> </li> <li> <p>Notes:</p> <p>Evaluating the time complexity in backtracking algorithms involves considering various factors. Some important elements that affect time complexity in backtracking include:</p> <ul> <li> <p>The number of decisions or choices to be made at each step.</p> </li> <li> <p>The size of the problem space or the search space.</p> </li> <li> <p>Constraints and pruning techniques applied to reduce the search space.</p> </li> </ul> </li> </ul>"},{"location":"ADS/#divide-and-conquer","title":"Divide and Conquer\uff08\u5206\u6cbb\uff09","text":"<p>\u5206\u6cbb\u662f\u975e\u5e38\u91cd\u8981\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u65b9\u6cd5\uff0c\u4f46\u5728\u8bfe\u4e2d\u66f4\u6ce8\u91cd\u76f8\u5173\u5206\u6cbb\u65f6\u95f4\u590d\u6742\u5ea6\u9012\u63a8\u5f0f\u7684\u8ba1\u7b97</p> <p>\\(T(N) = a T(N/b) + f(N)\\)</p> <ul> <li> <p>\u5e26\u5165\u6cd5</p> <ul> <li> <p>\u5f97\u5230\u4e00\u4e2a\u597d\u7684\u731c\u6d4b\uff08\u53ef\u4ee5\u7528\u540e\u9762\u4ecb\u7ecd\u7684\u9012\u5f52\u6811\u8f85\u52a9\uff09</p> </li> <li> <p>\u4f7f\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u5b8c\u6210\u8bc1\u660e</p> <p>\u6ce8\u610f\u8fd9\u91cc\u8fd0\u7b97\u8981\u6c42\u76f8\u5173\u5e38\u6570 c \u4fdd\u6301\u4e25\u683c\u4e00\u81f4\u6027\uff0c\u5373\u663e\u5f0f\u5730\u8bc1\u660e \\(T(N) \\leq cF(N)\\) \u5426\u5219\u754c\u662f\u4e0d\u5bf9\u7684</p> <p>\u4f8b\u5982\u5bf9\u4e8e\u6700\u7ecf\u5178\u7684 \\(T(N) = 2 T(N/2) + N\\)</p> \\[ T(N) \\leq 2 c (N/2) log(N/2) + N = cNlog(N) +(1-c)N \\leq cNlogN = O(N)\\] \\[ T(N) \\leq 2c (N/2) + N = (c+1)N \\neq O(N)\\] </li> <li> <p>\u7b97\u6cd5\u5bfc\u8bba\u4e2d\u63d0\u5230\uff0c\u6709\u65f6\u5f52\u7eb3\u5047\u8bbe\u4e0d\u591f\u5f3a\u65f6\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u51cf\u53bb\u4e00\u4e2a\u4f4e\u9636\u9879\u6765\u5f25\u8865</p> </li> </ul> </li> <li> <p>\u9012\u5f52\u6811 </p> </li> </ul> <p>\u5982\u4e0a\u9762\u63d0\u5230\u7684\uff0c\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684 \u83b7\u5f97\u731c\u6d4b \u751a\u81f3 \u76f4\u63a5\u8ba1\u7b97\u7b54\u6848 \u7684\u65b9\u6cd5</p> <ul> <li> <p>\u4e00\u822c\u7684\uff0c\u5bf9\u4e8e\u4e0a\u9762\u63d0\u5230\u7684\u201c\u5de5\u6574\u201d\u7684\u5f0f\u5b50\uff0c\u4ed6\u7684\u9012\u5f52\u6811\u662f\u4e00\u68f5\u5b8c\u5168 a \u53c9\u6811\uff0c\u603b\u5171\u6709 \\(\\log_b^N\\) \u5c42\uff0c\u7b2c i \u5c42\u6709 \\(a^i\\) \u4e2a\u8282\u70b9\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u4ee3\u4ef7\u4e3a \\(f(N/b^i)\\)\uff0c\u56e0\u6b64\u7b2c i \u5c42\u603b\u4ee3\u4ef7\u4e3a \\(a^i f(N/b^i)\\)</p> <p>\u6700\u540e\u4e00\u5c42\u4e25\u683c\u65f6\u89c6\u4e3a \\(\\Theta(a^{log_b^N}) = \\Theta(N^{log_b^a})\\) \uff0c\u5b9e\u9645\u76f4\u63a5\u5f53T(1)=O(1)\u76f4\u63a5\u8ba1\u7b97\u4e5f\u53ef</p> <p>\u793a\u4f8b\u5982\u4e0b\uff1a</p> \\[ T(N) = 3 T(N/4) + cN^2 \\] <p></p> </li> <li> <p>\u5bf9\u4e8e\u6b6a\u659c\u7684\u5f0f\u5b50\uff0c\u4f8b\u5982\u4e0b\u9762\u7684\u5f0f\u5b50\uff0c\u6709\u65f6\u7cbe\u786e\u7684\u4ee3\u4ef7\u4f1a\u5f88\u96be\u8ba1\u7b97\uff0c~~\u611f\u6027\u7406\u89e3\u731c\u6d4b~~</p> \\[ T(N) = T(N/3) + T(2N/3) + cN \\] <p>\u6574\u68f5\u6811\u5e94\u8be5\u662f\u53f3\u659c\u7684\uff0c\u524d\u9762\u51e0\u5c42\u7684\u4ee3\u4ef7\u5de7\u6070\u597d\u4e3a \\(cN\\)\uff0c\u800c\u540e\u9762\u51e0\u5c42\u663e\u7136\u4f1a\u94fa\u4e0d\u6ee1\uff0c\u56e0\u6b64\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u4e0a\u754c \\(O(N\\log_{\\frac{3}{2}}^N)\\) \uff08\u5982\u679c\u6070\u597d\u94fa\u6ee1\uff09\uff0c\u8fdb\u800c\u731c\u6d4b \\(T(N) = O(N \\log{N})\\) \uff0c\u53ef\u4ee5\u7528\u4ee3\u5165\u6cd5\u9a8c\u8bc1  </p> <p></p> </li> <li> <p>\u4e3b\u65b9\u6cd5</p> </li> </ul> <p>\\(f(N) = O(N^{\\log_b^a - \\epsilon}), T(N) = \\Theta(N^{\\log_b^a})\\)</p> <p>\\(f(N) = \\Theta(N^{\\log_b^a}), T(N) = \\Theta(N^{\\log_b^a} \\log N)\\)</p> <p>\\(f(N) = \\Omega(N^{\\log_b^a + \\epsilon}), T(N) = \\Theta(f(N)) (\\exists c &lt; 1, af(n/b) \\leq cf(n))\\)</p> <ul> <li> <p>\u7b80\u5355\u8bb0\u5fc6\uff0c\u5c31\u662f\u770b\u9012\u5f52\u5f0f\u7684\u524d\u4e00\u9879\u5927\u8fd8\u662f\u540e\u4e00\u9879\u5927\uff0c\u6216\u8005\u8bf4\uff0c\u9012\u5f52\u6811\u4e0a\u7684\u53f6\u5b50\u8282\u70b9\u4ee3\u4ef7\u5927\u8fd8\u662f\u6839\u8282\u70b9\u4ee3\u4ef7\u5927\uff0c\u82e5\u76f8\u7b49\u5219\u90fd\u7edf\u8ba1\u4e58\u4e0alogN</p> <p>\u5176\u4e2d\u8fd9\u91cc\u6307\u7684\u5927\u5c0f\u662f\u591a\u9879\u5f0f\u610f\u4e49\u4e0a\u7684\u5927\u5c0f\uff0c\u76f8\u5dee\u4e3a \\(N^{\\epsilon}\\) \u500d\uff0c\u6bd4\u5982 \\(N\\) \u4e0e \\(N \\log N\\) \u5c31\u4e0d\u80fd\u5728\u8fd9\u4e2a\u610f\u4e49\u4e0b\u6bd4\u5927\u5c0f\uff0c\u4e5f\u5c31\u65e0\u6cd5\u4f7f\u7528\u4e00\u822c\u7684\u4e3b\u65b9\u6cd5</p> <p>\u5173\u4e8ecase 3\u7684\u6b63\u5219\u5316\u6761\u4ef6\uff0c\u672c\u8d28\u4e0a\u5c31\u662f\u4fdd\u8bc1\u6839\u8282\u70b9\u6700\u5927</p> </li> <li> <p>\u8bc1\u660e\uff08\u7ed3\u5408\u9012\u5f52\u6811\uff09</p> <p></p> <ul> <li>\u6839\u636e\u4e09\u79cd\u60c5\u51b5\u7684\u6761\u4ef6\uff0c\u5bf9\u51e0\u4f55\u7ea7\u6570\u8fdb\u884c\u6c42\u548c\uff0c\u6bd4\u8f83\u5bb9\u6613\u5f97\u5230\u7ed3\u8bba </li> </ul> </li> <li> <p>\u524d\u9762\u63d0\u5230\u7684\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u5b9e\u9645\u4e0a\u4e0b\u4e24\u79cd\u7b26\u5408\u539f\u672c\u4e3b\u5b9a\u7406\u7684\u6761\u4ef6\uff0c\u53ea\u8981\u8003\u8651\u4e2d\u95f4\u90a3\u79cd\u5e42\u6307\u6570\u4e00\u6837(\\(N^{\\log_b^a} = N^k\\))\u4f46\u540e\u9762\u6302\u4e86\u4e2alog\u5c3e\u5df4\u7684\u60c5\u51b5</p> <p>\u7528\u9012\u5f52\u6811\u6c42\u548c\u540e\u4f1a\u53d1\u73b0</p> \\[ T(N) = N^{\\log_b^a} \\Sigma_{i=0}^{\\log_b^a} \\lg^p \\frac{N}{b^i} = N^{\\log_b^a} \\Sigma_{i=0}^{\\log_b^a} (\\lg{N} - \\lg{b^i})^p \\] \\[\\approx N^{\\log_b^a} \\Sigma_{i=0}^{\\log_b^a} \\lg^p{N}=N^{\\log_b^a} \\log_b^a \\lg^p{N} \\] \\[= \\Theta(N^{\\log_b^a} \\lg^{p+1}{N})\\] <p></p> </li> </ul>"},{"location":"ADS/#fft-fntt","title":"FFT &amp; FNTT","text":"<p>Fast Fourier Transform &amp; Fast Number Theoretic Transform</p> <p>Here we only discuss the application of FFT in polynomial multiplication</p> <p>For coefficient representated polynomials \\(A(x) = \\sum_{i=0}^{n-1} a_i x^i, B(x) = \\sum_{i=1}^{n-1} b_i x^i\\), the polynomial multication can seen as the convolutions which needs \\(O(n^2)\\) </p> <p>We can also represent a n-degree polynomial as a vector of n points \\(\\{(x_1, A(x_1)), (x_2, A(x_2)), ... (x_{n-1},A(x_{n-1}))\\}\\)</p> <p>proof: Lagrange Interpolation using Vandermonde Matrix</p> \\[ \\begin{bmatrix} 1 &amp; x_0 &amp; x_0^2 &amp; \\cdots &amp; x_0^{n-1} \\\\  1 &amp; x_1 &amp; x_1^2 &amp; \\cdots &amp; x_1^{n-1} \\\\  \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\  1 &amp; x_{n-1} &amp; x_{n-1}^2 &amp; \\cdots &amp; x_{n-1}^{n-1} \\end{bmatrix}  \\begin{bmatrix} a_0 \\\\ a_1 \\\\ \\vdots \\\\ a_{n-1} \\end{bmatrix} =  \\begin{bmatrix} A(x_0) \\\\ A(x_1) \\\\ \\vdots \\\\ A(x_{n-1}) \\end{bmatrix} \\] <p>If all \\(x_i\\) are unique, then the determinant of the vandermonde matrix is \\(\\prod_{0 \\leq i &lt; j &lt; n} (x_j - x_i) \\neq 0\\), which means there exists a unique solution for the coefficient vector, or say, the polynomial can be uniquely represented by the n points</p> <p>Then the polynomial multiplication can be seen as the vector dot product, which can be done in \\(O(n)\\)</p> <p>If we use point-value representaion \\(\\{(x_i,A(x_i))\\}, \\{x_i, B(x_i)\\}\\), then the polynomial multiplication can be seen as a vector dot product, which can be done in \\(O(n)\\)</p> <p>So the key point is the fast transformation between the coefficient representation and point-value representation, Which can be done in \\(O(nlogn)\\) using FFT</p> <p></p> <ul> <li> <p>coeffcient to point-value</p> <ul> <li> <p>If we randomly choose n points, then the transformation should be done in \\(O(n) * O(n) = O(n^2)\\),  which is not so good</p> </li> <li> <p>Here we choose a novel method, selecting the complex n powers of n-th root of unity \\(w_n = e^{2\\pi i / n}\\), that is, \\(w_n^0, w_n, w_n^2, ... w_n^{n-1}\\)</p> <ul> <li> <p>Special property:</p> <ul> <li> <p>Definition: \\(w_n^n = 1\\)</p> </li> <li> <p>Halving Lemma: \\(w_{2n}^{2k} = w_n^k\\) </p> <p>Proved easily by Euler's Formula, \\(w_{2n}^{2k} = e^{2\\pi i \\frac{2k}{2n}} = e^{2\\pi i \\frac{k}{n}} = w_n^k\\) </p> </li> <li> <p>Inverse Lemma: \\(w_n^{k + \\frac{n}{2}} = -w_n^{k}\\)</p> <p>Proved easily by Euler's Formula, \\(w_n^{k + \\frac{n}{2}} = e^{2\\pi i \\frac{k + \\frac{n}{2}}{n}} = e^{2\\pi i \\frac{k}{n} + \\pi i} = -e^{2\\pi i \\frac{k}{n}} = -w_n^k\\)</p> </li> <li> <p>Summation Lemma: \\(\\sum_{i=0}^{n-1} w_n^{ik} = \\begin{cases} n &amp; \\text{if } n | k \\\\ 0 &amp; \\text{otherwise} \\end{cases}\\)</p> <p>Proved easily by the geometric progression, \\(S = 1 + w_n^k + w_n^{2k} + ... + w_n^{(n-1)k} = \\frac{1 - w_n^{nk}}{1 - w_n^k} = 0\\)</p> </li> <li> <p>Halving &amp; Inverse Lemmas are quite useful in the FFT algorithm, which can be seen as a divide-and-conquer algorithm</p> </li> </ul> </li> </ul> </li> <li> <p>Considre a polynomial \\(A(x) = a_0 + a_1 x + a_2 x^2 + ... + a_{n-1} x^{n-1}\\),where \\(n = 2^k\\) (Easier to cope with, so we can append 0s as coefficients to make it a power of 2)</p> <p>Then we divide the polynomial into two parts:</p> \\[ A_1(x) = a_0 + a_2 x + a_4 x^2 + ... + a_{n-2} x^{n/2 - 1} \\] \\[ A_2(x) = a_1 + a_3 x + a_5 x^2 + ... + a_{n-1} x^{n/2 - 1} \\] <p>Then we can see that </p> \\[A(x) = A_1(x^2) + xA_2(x^2)\\] <p>Substitute \\(w_n^k\\) and using Halving Lemma</p> \\[A(w_n^k) = A_1(w_{n}^{2k}) + w_n^k A_2(w_{n}^{2k}) = A_1(w_{\\frac{n}{2}}^k) + w_n^k A_2(w_{\\frac{n}{2}}^k)\\] <p>Substituting the rest \\(w_{n}^{k+\\frac{n}{2}}\\) and using Inverse Lemma</p> \\[A(w_n^{k+\\frac{n}{2}}) = A_1(w_{\\frac{n}{2}}^k) - w_n^k A_2(w_{\\frac{n}{2}}^k)\\] <p>Now to get \\(A(w_n^{k})\\) for \\(k=0,1,...n-1\\)\uff0cwe only need to calculate \\(A_1(w_{\\frac{n}{2}}^k)\\) and \\(A_2(w_{\\frac{n}{2}}^k)\\) for \\(k=0,1,...\\frac{n}{2}-1\\), which is just half of the original problem!</p> FFT<pre><code>    FFT(A[0,1,...n-1]){\n        if(n == 1) return A;\n        A1 = FFT(A[0,2,...n-2])\n        A2 = FFT(A[1,3,...n-1])\n\n        w = exp(2 * pi * i / n)\n        for(int k = 0; k &lt; n/2; k++){\n            A[k] = A1[k] + w^k * A2[k];\n            A[k + n/2] = A1[k] - w^k * A2[k];\n        }\n        return A;\n    }\n</code></pre> </li> <li> <p>More efficient way</p> <p>Use Butterfly Operation instead of Recursion</p> <p>Maybe because of this photo so-called butterfly?</p> <p></p> <p>Check the clearer picture below, we can find the final position is just the inverse of its original position's binary represention!</p> <p>So based on this discovery, we can easily transform the recursive version into an iterative version, which is more efficient.</p> <p> </p> </li> </ul> </li> <li> <p>point-value to coefficient</p> <p>Use the Lagrange Interpolation as mentioned above</p> <ul> <li> <p>The Vandermond Matrix \\(V_n A = Y\\)</p> \\[ \\begin{bmatrix} 1 &amp; 1^1 &amp; 1^2 &amp; \\cdots &amp; 1^{n-1} \\\\  1 &amp; w_n^1 &amp; w_n^2 &amp; \\cdots &amp; w_n^{n-1} \\\\  \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\  1 &amp; w_n^{n-1} &amp; w_n^{2(n-1)} &amp; \\cdots &amp; w_n^{(n-1)(n-1)} \\end{bmatrix}  \\begin{bmatrix} a_0 \\\\ a_1 \\\\ \\vdots \\\\ a_{n-1} \\end{bmatrix} =  \\begin{bmatrix} y_0 \\\\ y_1 \\\\ \\vdots \\\\ y_{n-1} \\end{bmatrix} \\] <p>Recall the knowledge in Linear Algebra, the next step is to calculate the \\(V_n^{-1}\\), then \\(A = V_n^{-1}Y\\)</p> <p>Consider the definition of inverse matrix</p> \\[V_n^{-1} V_n = I_n\\] \\[I_{ij} = \\sum_{k=0}^{n-1} V^{-1}_{ik} V_{kj} = \\sum_{k=0}^{n-1} V^{-1}_{ik} w_n^{kj}\\] <p>Thinking of the Summation Lemma, we can easily find the \\(V_{ij}^{-1} = w_n^{-ij}\\), which is the similar form of the \\(V_n\\), like a vector-direction inverse on the complex plane</p> <p>So given the point-value representation, we can solve the corresponding coefficient representation by just changing the \\(w_n^k\\) to \\(w_n^{-k}\\) </p> </li> </ul> </li> </ul> <p>In conclusion, the FFT algorithm is a very efficient algorithm for polynomial multiplication, which can be done in \\(O(n \\log n)\\)</p> <p>However, since the use of double type in the complex number calculation, the precision of the result may be affected. We can then put the problem into the modulo field, which is the Fast Number Theoretic Transform (FNTT).</p> <p>Wonderfully, the FNTT is almost the same as the FFT, except that we change the complex n-th root of unity to the primitive root of the modulo field, which has the same properties as the n-th root of unity as mentioned above.</p> <ul> <li> <p>primitive root g:</p> \\[g_n^n \\equiv 1 \\pmod{P}\\] \\[g_n^{\\frac{n}{2}} \\equiv -1 \\pmod{P}\\] \\[g_l = g^{\\frac{P-1}{l}} \\pmod{P}\\] </li> <li> <p>Example: </p> <p>RB-Tree count: Count the number of different RB-Trees with N nodes.</p> <p>Using Generating Function \\(T_h(x)\\) for the RB-Trees with black height h </p> \\[T_h(x) = \\sum_{i=0}^{n} a_i x^i\\] <p>where \\(a_i\\) denotes the number of RB-Trees with black height h and i nodes</p> <p>Consider the  subtree of a RB-Tree</p> \\[\\begin{cases} T_{h-1}(x)\\  (black \\ subtree) \\\\ xT_{h-1}^2(x) \\ (red \\ subtree, must \\ have \\ two \\ black \\  sub-subtrees) \\\\  \\end{cases}\\] <p>Since a black root have two subtrees where order matters, we can easily get the recursive formula</p> \\[T_h(x) = x N_{h-1}^2= x(T_{h-1}(x) + xT_{h-1}^2(x))^2\\] <p>The answer is the sum of all \\(a_n\\)</p> <p>If the module prime is not good like 998244353 with primitive root, we need complicated MTT, which I haven't learned yet</p> </li> </ul> Code RB-Tree Count<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define LL long long\nint N;\n// Coefficient representation of polynomial\nclass Poly{ \nprivate: \n    // Primitive root of P 998244353(7 * 17 * 2^23 + 1) is 3\n    // _G = 3 ^ (-1) (Mod P)\n    static const int G = 3, _G = 332748118;\n\n    // Coefficients a[i] * x^i\n    vector&lt;int&gt;a;\n\n    // quick pow x^y in O(log(y))\n    static int Pow(int x, int y){\n        int s = 1, w = x;\n        while(y){\n            if(y &amp; 1) s = (LL) s * w % P;\n            w = (LL) w * w % P, y &gt;&gt;= 1;\n        }\n        return s;\n    }\npublic:\n    // Module \n    static const int P = 998244353;\n    Poly(int L) : a(vector&lt;int&gt;(L, 0)) {}\n    Poly(vector&lt;int&gt; &amp;_a) : a(_a) {}\n\n    // the length of the polynomial\n    inline int Length()const{return a.size();}\n\n    // robust access to the coeffcient a[i]\n    inline int Para(int i)const{return i &lt; Length() ? a[i] : 0;}\n\n    // add a constant (in this problem is just for +1)\n    Poly operator +(const int B){\n        Poly C = *this;\n        C.a[0] += B;\n        return C;\n    }\n\n    // addition of two polynomial: just add the corresponding coefficient, O(length)\n    Poly operator +(const Poly &amp;B){\n        Poly C(max(this-&gt;Length(), B.Length()));\n        for(int i = 0; i &lt; C.Length(); i++) C.a[i] = (this-&gt;Para(i) + B.Para(i)) % P;\n        return C;\n    }\n\n    // plus x^i, just like shift\n    Poly operator &lt;&lt; (int i){\n        Poly C = *this;\n        C.a.resize(Length() + i);   // make more capacity\n        for(int k = C.Length() - 1; k &gt;= i; k--) C.a[k] = C.a[k - i];   //move the data\n        for(int k = i - 1; k &gt;= 0; k--) C.a[k] = 0; // set the first ones to 0\n        return C;\n    }\n\n    // FNTT: fast number-theoretic transform\n    // f = 1: transform the coefficient representation to point-value representaion \n    // f = -1: inv-transform as f = 1, to transform back to coefficient representation using interpolating polynomial\n    // both done in O(nlogn)\n    void NTT(vector&lt;int&gt; &amp;A, int f, vector&lt;int&gt; &amp;pos){\n        // butterfly operation, transform the recursive into loops\n        int n = A.size();\n        for(int i = 0; i &lt; n; i++) if(i &lt; pos[i]) swap(A[i], A[pos[i]]);\n\n        // bottom-up calculation \n        for(int L = 1; L &lt; n; L &lt;&lt;= 1){\n            // the primitive root chosen W_n / (W_n ^ -1)\n            int Wl = Pow((~f) ? G : _G, (P - 1) / (L &lt;&lt; 1));\n            for(int j = 0; j &lt; n; j += (L &lt;&lt; 1)){\n                int Wk = 1;// twiddle factor\n                for(int k = 0; k &lt; L; k++, Wk = (LL) Wk * Wl % P){\n                    // recursively done, A[j+k] &amp; A[j+k+L] are calculated at the same time\n                    int x = A[j + k], y = (LL) Wk * A[j + k + L] % P;\n                    A[j + k] = (x + y) % P, A[j + k + L] = (x - y + P) % P;\n                }\n            } \n        }\n    }\n\n    // NTT\n    Poly operator *(const Poly &amp;_B){\n        // append 0s to ensure the length to be the power of 2\n        // it makes recursion more easily without influence the answer\n        int L = 1;\n        while((1&lt;&lt;L) &lt; this-&gt;Length() + _B.Length()) L++;  \n        vector&lt;int&gt; A = a, B = _B.a, C(1&lt;&lt;L), pos(1&lt;&lt;L);\n        // make transformation for the butterfly operation\n        for(int i = 0;i &lt; (1&lt;&lt;L); i++) pos[i] = (pos[i&gt;&gt;1] &gt;&gt; 1) | ((i &amp; 1) &lt;&lt; (L - 1));\n        L = 1 &lt;&lt; L;\n        A.resize(L), B.resize(L);\n\n        NTT(A, 1, pos), NTT(B, 1, pos);   // change to point-value representation\n        // multiplication can be done in O(n) now in point-value representation\n        for(int i = 0; i &lt; L; i++) C[i] = (LL)A[i] * B[i] % P;  \n        NTT(C, -1, pos);    // to transform back\n        int Inv = Pow(L, P - 2);   // 1/n in module space\n        // trick: remove the coefficient that over n, which can't contribute to the answer\n        C.resize(min(N + 1, this-&gt;Length() + _B.Length())); \n        for(int i = 0; i &lt; C.size();i++) C[i] = (LL) C[i] * Inv % P;\n        return Poly(C); \n    }\n\n    // for debug\n    void Print(){\n        for(auto i:a) cout &lt;&lt; i &lt;&lt; \" \";\n        cout &lt;&lt; endl;\n    }\n};\n\nint main(){\n    cin &gt;&gt; N;\n    // T[i] denotes the generating function of RB-Tree that with bh(root) = i+1\n    // ai is the number of RB-trees with i nodes\n    // T[i] = Sum(ai * x^i)\n    vector&lt;Poly&gt; T;\n    // T[0] --&gt; bh(root) = 1\n    // a0 = 0 (impossible)\n    // a1 = 1 (only root)\n    // a2 = 2 (root with single red child)\n    // a3 = 1 (root with two red children)\n    vector&lt;int&gt; T0{0, 1, 2, 1};\n    T.push_back(Poly(T0));\n    int Ans = T[0].Para(N);\n\n    // by the amortized analysis proof in class, we know N &gt;= 2^bh(root) - 1\n    // thus bh(root) &lt;= log(N+1)\n    for(int i=1, h = log2(N + 1);i &lt; h;i++){\n        // T[i] = x * T[i-1]^2 * (1 + x * T[i-1])^2\n        Poly Ti =((T[i-1] * T[i-1] &lt;&lt; 1) + T[i-1]);\n        Ti = Ti * Ti &lt;&lt; 1;\n        // add answer for N nodes\n        Ans = (Ans + Ti.Para(N)) % Poly::P;\n        T.push_back(Ti);\n    }\n    cout &lt;&lt; Ans &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"ADS/#np-completeness","title":"NP-Completeness","text":"<ul> <li> <p>P: Polynomial Time</p> <ul> <li>The class of problems that can be solved in polynomial time</li> </ul> </li> <li> <p>NP: Nondeterministic Polynomial Time</p> <ul> <li>The class of problems for which a solution can be verified in polynomial time</li> </ul> </li> <li> <p>NP-Hard</p> <ul> <li> <p>A problem is NP-Hard if every problem in NP can be reduced to it in polynomial time (\\(L^{'} \\leq_p L\\), not harder than)</p> </li> <li> <p>May not in NP</p> </li> </ul> </li> <li> <p>NP-Complete</p> <ul> <li>A problem is NP-Complete if it is in NP and is NP-Hard</li> </ul> </li> <li> <p>Some items:</p> <ul> <li> <p>deterministic turing machine: a machine that can only have one possible state at any time</p> </li> <li> <p>non-deterministic turing machine: a machine that can have multiple possible states at any time, and can choose best one</p> </li> </ul> </li> <li> <p>Some NPC problems</p> <ul> <li> <p>SAT: Given a boolean formula, is there an assignment of truth values to the variables that makes the formula true?</p> </li> <li> <p>3-SAT: Given a boolean formula in conjunctive normal form, where each clause has exactly 3 literals, is there an assignment of truth values to the variables that makes the formula true?</p> </li> <li> <p>Vertex Cover: Given a graph G and an integer k, is there a set of k vertices such that each edge in G is incident to at least one vertex in the set?</p> </li> <li> <p>Hamiltonian Cycle: Given a graph G, is there a simple cycle that visits every vertex exactly once?</p> </li> <li> <p>Subset Sum: Given a set of integers and an integer k, is there a subset of the integers that sums to k?</p> </li> <li> <p>Traveling Salesman Problem: Given a set of cities and distances between them, is there a tour that visits each city exactly once and has total length at most k?</p> </li> <li> <p>Knapsack Problem: Given a set of items, each with a weight and a value, and a knapsack with a weight limit, is there a subset of the items that fits in the knapsack and has total value at least k?</p> </li> <li> <p>Partition: Given a set of integers, is there a partition of the integers into two sets such that the sum of the integers in each set is equal?</p> </li> </ul> </li> </ul>"},{"location":"ADS/#approximation","title":"Approximation","text":"<p>\\(\\rho(n)\\)-approximation algorithm: \\(\\max\\{\\frac{C}{C^*},\\frac{C^*}{C}\\}\\leq \\rho(n)\\)</p> <ul> <li> <p>approximation scheme: \\(\\forall \\epsilon &gt; 0, \\exists \\rho(n) \\leq 1 + \\epsilon\\)</p> </li> <li> <p>PTAS: Polynomial Time Approximation Scheme</p> <p>\u590d\u6742\u5ea6\u4e3a\u89c4\u6a21n\u7684\u4e00\u4e2a\u591a\u9879\u5f0f</p> </li> <li> <p>FPTAS: Fully Polynomial Time Approximation Scheme</p> <p>\u590d\u6742\u5ea6\u540c\u65f6\u4e3a\u89c4\u6a21n\u4ee5\u53ca \\(\\frac{1}{\\epsilon}\\) \u7684\u4e00\u4e2a\u591a\u9879\u5f0f</p> </li> <li> <p>Some problems:</p> <ul> <li> <p>Vertex Cover: \\(\\rho(n) = 2\\)</p> <ul> <li>\u6bcf\u6b21\u6311\u9009\u4e00\u6761\u8fb9\uff0c\u5c06\u5176\u4e24\u7aef\u7684\u70b9\u52a0\u5165\u96c6\u5408\uff0c\u5e76\u5220\u9664\u5bf9\u5e94\u90bb\u8fb9\uff0c\u76f4\u5230\u6240\u6709\u8fb9\u90fd\u88ab\u8986\u76d6 </li> </ul> </li> <li> <p>Set Cover: \\(\\rho(n) = O(\\log n)\\)</p> <ul> <li>\u6bcf\u6b21\u9009\u62e9\u8986\u76d6\u6700\u591a\u672a\u8986\u76d6\u5143\u7d20\u7684\u96c6\u5408\uff0c\u76f4\u5230\u6240\u6709\u5143\u7d20\u90fd\u88ab\u8986\u76d6</li> </ul> </li> <li> <p>\u4e09\u89d2\u4e0d\u7b49\u5f0f\u7ea6\u675f\u7684TSP: \\(\\rho(n) = 2\\)</p> <ul> <li>\u751f\u6210\u6811\u7684\u6700\u5c0f\u8fb9\u6743\u548c\u5373\u4e3aTSP\u7684\u4e0b\u754c\uff0c\u7136\u540e\u904d\u5386\u751f\u6210\u6811\u4f7f\u5f97\u6bcf\u6761\u8fb9\u6070\u597d\u88ab\u8bbf\u95ee\u4e24\u6b21\uff0c\u6839\u636e\u4e09\u89d2\u4e0d\u7b49\u5f0f\uff0c\u53ef\u4ee5\u8bc1\u660e\u8fd9\u4e2a\u89e3\u4e3a\u4e0a\u754c</li> </ul> </li> <li> <p>Bin packing</p> <ul> <li> <p>Next Fit: \\(\\rho(n) = 2\\)</p> <ul> <li>\u6bcf\u6b21\u53ea\u8003\u8651\u4e0a\u4e00\u6876\u80fd\u5426\u88c5\u4e0b\uff0c\u5219\u76f8\u90bb\u6876\u76f8\u52a0\u5fc5\u5927\u4e8e1,\u4ece\u800c\u5f97\u51fa\u4e0a\u754c </li> </ul> </li> <li> <p>First Fit: \\(\\rho(n) = 1.7\\) </p> <ul> <li>\u6bcf\u6b21\u627e\u5230\u7b2c\u4e00\u4e2a\u80fd\u88c5\u4e0b\u7684\u6876</li> </ul> </li> <li> <p>Best Fit\uff1a\\(\\rho(n) = 1.7\\)</p> <ul> <li>\u6bcf\u6b21\u627e\u5230\u6700\u5408\u9002\u7684\u6876\uff08\u5269\u4f59\u7a7a\u95f4\u6700\u5c0f\u7684\uff09</li> </ul> </li> <li> <p>Online\uff1a\\(\\rho(n) \\geq \\frac{5}{3}\\) </p> </li> <li> <p>Offline: \\(\\rho(n) \\leq \\frac{11}{9}M+\\frac{6}{9}\\)</p> </li> </ul> </li> <li> <p>Knapsack</p> <ul> <li> <p>greedy</p> <p>\\(P_{greedy} = \\max \\{P_{max},P_{density}\\}\\)</p> <p> </p> </li> <li> <p>round</p> <p></p> </li> </ul> </li> <li> <p>K-centers</p> <ul> <li> <p>binary search &amp; check: \\(\\rho(n) = 2\\)</p> <ul> <li> <p>\u4e8c\u5206\u641c\u7d22\u534a\u5f84\uff0c\u7136\u540e\u68c0\u67e5\u76f4\u5f84\u4e3a2r\u662f\u5426\u80fd\u591f\u8986\u76d6\u6240\u6709\u70b9 </p> <p></p> </li> </ul> </li> <li> <p>smarter way: \\(\\rho(n) = 2\\)</p> <p> </p> </li> <li> <p>lower bound: \\(\\rho(n) = 2\\)</p> </li> </ul> </li> </ul> </li> </ul>"},{"location":"ADS/#local-search","title":"Local Search","text":"<ul> <li> <p>Gradient Descent</p> <ul> <li> <p>\u4ece\u4e00\u4e2a\u521d\u59cb\u89e3\u5f00\u59cb\uff0c\u6bcf\u6b21\u9009\u62e9\u4e00\u4e2a\u90bb\u57df\u5185\u7684\u66f4\u4f18\u89e3\uff0c\u76f4\u5230\u627e\u4e0d\u5230\u66f4\u4f18\u89e3\u4e3a\u6b62</p> </li> <li> <p>\u4f46\u662f\u53ef\u80fd\u4f1a\u9677\u5165\u5c40\u90e8\u6700\u4f18\u89e3</p> </li> </ul> </li> <li> <p>Metropolis Algorithm</p> <ul> <li> <p>\u4e00\u79cd\u8499\u7279\u5361\u6d1b\u91c7\u6837\u7b97\u6cd5\uff0c\u4ee5\u4e00\u5b9a\u6982\u7387\uff08\\(e^{-\\frac{\\Delta{cost}}{kT}}\\)\uff09\u63a5\u53d7\u66f4\u5dee\u7684\u89e3\uff0c\u4ece\u800c\u907f\u514d\u9677\u5165\u5c40\u90e8\u6700\u4f18\u89e3</p> <p></p> </li> </ul> </li> <li> <p>Simulated Annealing</p> <ul> <li>\u6a21\u62df\u9000\u706b\u7b97\u6cd5\uff0c\u662fMetropolis Algorithm\u7684\u4e00\u4e2a\u53d8\u79cd\uff0c\u901a\u8fc7\u9010\u6e10\u964d\u4f4e\u63a5\u53d7\u66f4\u5dee\u89e3\u7684\u6982\u7387\uff0c\u4ece\u800c\u9010\u6e10\u6536\u655b\u5230\u5168\u5c40\u6700\u4f18\u89e3</li> </ul> </li> <li> <p>Example</p> <ul> <li> <p>Vertex Cover</p> <ul> <li> <p>\u4ece\u5168\u96c6\u5f00\u59cb\uff0c\u6bcf\u6b21\u968f\u673a\u5220\u9664\u4e00\u4e2a\u70b9\uff0c\u68c0\u67e5\u662f\u5426\u4ecd\u7136\u662f\u8986\u76d6</p> </li> <li> <p>\u53ef\u80fd\u4f1a\u9677\u5165\u5c40\u90e8\u6700\u4f18\u89e3\uff0c\u53ef\u4ee5\u901a\u8fc7Metropolis Algorithm\u6216\u8005Simulated Annealing\u6765\u907f\u514d</p> </li> </ul> </li> <li> <p>Hopfield Network</p> <ul> <li> <p>Definations</p> <p></p> </li> <li> <p>\u7b97\u6cd5\u6d41\u7a0b\uff1a\u6bcf\u6b21\u968f\u673a\u7ffb\u8f6c\u4e00\u4e2a\u4e0d\u7a33\u5b9a\u7684\u70b9\uff0c\u76f4\u5230\u6240\u6709\u70b9\u90fd\u7a33\u5b9a\u4e3a\u6b62</p> <p></p> </li> <li> <p>\u52bf\u80fd\u5206\u6790\uff1a\\(\\Phi(S) = \\sum_{e \\in good} |W_e|\\)</p> <p>\u90a3\u4e48\u6bcf\u6b21\u7ffb\u8f6c\u4e00\u4e2a\u70b9\uff0c\u52bf\u80fd\u81f3\u5c11\u589e\u59271\uff0c\u56e0\u6b64\u6700\u591a\u9700\u8981\\(\\sum_{e} |W_e|\\)\u6b21\u7ffb\u8f6c\uff0c\u4e00\u5b9a\u53ef\u4ee5\u8fbe\u5230\u4e00\u4e2a\u6700\u5927\u503c</p> </li> </ul> </li> <li> <p>Max-Cut</p> <ul> <li> <p>\u7c7b\u4f3c Hopfield Network\uff0c\u6bcf\u6b21\u968f\u673a\u7ffb\u8f6c\u4e00\u4e2a\u70b9(\u66f4\u6539\u9635\u8425)\uff0c\u76f4\u5230\u6240\u6709\u70b9\u90fd\u7a33\u5b9a\u4e3a\u6b62</p> </li> <li> <p>\u8fd1\u4f3c\u7b97\u6cd5</p> <p></p> <p>\u7b80\u8981\u8bc1\u660e</p> <p>\u8003\u8651\\((1+\\frac{1}{x})^x \\geq 2\\)\uff0c\u4ee3\u5165\\(x=\\frac{|V|}{2\\epsilon}\\)\uff0c\u5219\u6bcf\\(x\\)\u6b21\u7ffb\u8f6c\u52bf\u80fd\u81f3\u5c11\u589e\u5927\u4e3a\u539f\u6765\u76842\u500d</p> </li> </ul> </li> </ul> </li> </ul>"},{"location":"ADS/#randomized-algorithm","title":"Randomized Algorithm","text":"<ul> <li> <p>Hiring Problem</p> <p>(\u5728\u6570\u6a21\u8bfe\u4e0a\u5df2\u7ecf\u7814\u7a76\u8fc7\u5404\u79cd\u62bd\u8c61\u7248\u672c\u4e86)</p> <ul> <li> <p>Naive (Randomized Permutaion)</p> <p>\u6bcf\u6b21\u96c7\u4f63\u6bd4\u524d\u9762\u6240\u6709\u4eba\u90fd\u4f18\u79c0\u7684\u4eba</p> <ul> <li> <p>\u671f\u671b\u96c7\u4f63\u4eba\u6570\uff1a</p> <p>\u8003\u8651\u7b2ci\u4e2a\u4eba\u4e3a\u6700\u4f18\u79c0\u7684\u6982\u7387\u4e3a\\(\\frac{1}{i}\\)\uff0c\u5219\u671f\u671b\u96c7\u4f63\u4eba\u6570</p> \\[c_n = \\sum_{i=1}^{n} \\frac{1}{i} \\approx \\ln n\\] </li> </ul> <p>Randomizing</p> <ol> <li> <p>\u7ed9\u6bcf\u4e2a\u5143\u7d20\u968f\u673a\u8d4b\u4e88\u4e00\u4e2a\u4f18\u5148\u7ea7\uff08\u4e00\u822c\u4e3a\\([1, n^3]\\)\uff09\uff0c\u7136\u540e\u6309\u7167\u4f18\u5148\u7ea7\u6392\u5e8f</p> </li> <li> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u5143\u7d20\\(i\\)\uff0c\u968f\u673a\u4e0e\\([i+1, n]\\)\u7684\u67d0\u4e00\u4e2a\u5143\u7d20\u8fdb\u884c\u4ea4\u6362</p> </li> </ol> </li> <li> <p>Online</p> <p>\u603b\u5171\u53ea\u96c7\u4f631\u4eba\uff0c\u6bcf\u6b21\u9700\u8981\u5f53\u573a\u505a\u51b3\u5b9a</p> <ul> <li> <p>\u671f\u671b\u96c7\u4f63\u5230\u6700\u4f18\u79c0\u7684\u4eba\uff1a</p> <p>\u8003\u8651\u5148\u8003\u5bdf\u524d\\(k\\)\u4e2a\u4eba\uff0c\u7136\u540e\u4f7f\u7528\u524d\u9762\u7684\u7b56\u7565\uff0c\u5373\u9009\u62e9\u7b2c\u4e00\u4e2a\u6bd4\u524d\u9762\u6240\u6709\u4eba\u90fd\u4f18\u79c0\u7684\u4eba</p> <p>\u5bf9\u4e8e\u7b2c\\(i\\)\u4e2a\u4eba\uff0c\u5176\u4e3a\u6700\u4f18\u79c0\u7684\u6982\u7387\u4e3a\\(\\frac{1}{n}\\)</p> <p>\u800c\u4ed6\u8981\u88ab\u9009\u5230\uff0c\u9700\u8981\u524d\u9762\u4f4d\u7f6e\u5728\\([k+1, i-1]\\)\u7684\u4eba\u90fd\u4e0d\u88ab\u9009\uff0c\u4e5f\u5373\u524d\u9762\\(i-1\\)\u4e2a\u4eba\u7684\u6700\u5927\u503c\u53ea\u80fd\u5728\\([1, k]\\)\u4e2d\uff0c\u6982\u7387\u4e3a\\(\\frac{k}{i-1}\\)</p> <p>\u663e\u7136\uff0c\u4e0a\u8ff0\u4e24\u4e2a\u6761\u4ef6\u662f\u72ec\u7acb\u7684\uff0c\u56e0\u6b64\u6210\u529f\u9009\u5230\\(i\\)\u4e14\u4ed6\u6070\u597d\u662f\u6700\u4f18\u79c0\u7684\u6982\u7387\u4e3a\\(\\frac{1}{n} \\cdot \\frac{k}{i-1}\\)</p> <p>\u4ece\u800c\u96c7\u4f63\u5230\u6700\u4f18\u79c0\u7684\u4eba\u7684\u6982\u7387\u4e3a</p> \\[\\sum_{i=k+1}^{n} \\frac{1}{n} \\cdot \\frac{k}{i-1} = \\frac{k}{n} \\sum_{i=k}^{n-1} \\frac{1}{i} \\approx \\frac{k}{n} \\ln \\frac{n}{k}\\] <p>\u5bf9\\(k\\)\u6c42\u5bfc\uff0c\u5f97\u5230</p> \\[\\frac{d}{dk} \\frac{k}{n} \\ln \\frac{n}{k} = \\frac{1}{n}\uff08\\ln{n} - \\ln{k} - 1\uff09 = 0 \\implies k = \\frac{n}{e}\\] <p>\u4ece\u800c\u53d6\\(k = \\frac{n}{e}\\)\u65f6\uff0c\u6982\u7387\u6700\u5927\uff0c\u4e3a\\(\\frac{1}{e}\\)</p> </li> </ul> </li> </ul> </li> <li> <p>Randomized Quick Sort</p> <ul> <li> <p>\u671f\u671b\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n \\log n)\\)</p> </li> <li> <p>\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^2)\\) </p> </li> <li> <p>\u8bc1\u660e\uff1a</p> <p>\u5feb\u901f\u6392\u5e8f\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u672c\u8d28\u4e0a\u6765\u6e90\u4e8e\u5212\u5206\u65f6\u4e0epivot\u7684\u6bd4\u8f83\u6b21\u6570</p> <p>Warning</p> <p>\u4e3a\u4e86\u4fbf\u4e8e\u5206\u6790\uff0c\u6211\u4eec\u4e0b\u9762\u6240\u8bf4\u7684\u7b2c\\(i\\)\u4e2a\u5143\u7d20\uff0c\u6307\u7684\u662f\u5728\u6392\u5e8f\u540e\u7684\u5e8f\u5217\u4e2d\u7684\u7b2c\\(i\\)\u4e2a\u5143\u7d20\uff0c\u800c\u4e0d\u662f\u5728\u539f\u5e8f\u5217\u4e2d\u7684\u7b2c\\(i\\)\u4e2a\u5143\u7d20</p> <p>\u505a\u5230\u76f8\u5173\u9898\u76ee\u65f6\u9700\u8981\u5c0f\u5fc3\uff01\uff01\uff01</p> <p>\u8003\u8651\u7b2c\\(i\\)\u4e0e\u7b2c\\(j\\)\u4e2a\u5143\u7d20\u7684\u6bd4\u8f83\u6b21\u6570\uff0c\u663e\u7136\u6700\u591a\u6bd4\u8f831\u6b21\uff0c\u56e0\u4e3a\u6bd4\u8f83\u5f53\u4e14\u4ec5\u5f53\u5176\u4e2d\u4e00\u4e2a\u88ab\u9009\u4e3apivot\uff0c\u53e6\u4e00\u4e2a\u88ab\u5212\u5206\u540e\u4e0d\u4f1a\u518d\u88ab\u6bd4\u8f83</p> <p>\u4ece\u800c\u6bd4\u8f83\u6b21\u6570\u7684\u671f\u671b\\(E_{ij} = 1 \\cdot P_{ij} = P_{ij}\\)</p> <p>\u800c\u4e24\u8005\u8981\u6bd4\u8f83\uff0c\u9664\u4e86\u5176\u4e2d\u4e00\u4e2a\u88ab\u9009\u4e3apivot\u5916\uff0c\u8fd8\u9700\u8981\u4ed6\u4eec\u6ca1\u6709\u88ab\u5212\u5206\u4e3a\u5230\u4e24\u8fb9\uff0c\u5373\u4ed6\u4eec\u4e4b\u95f4\u6ca1\u6709\u5176\u4ed6\u5143\u7d20\u88ab\u9009\u4e3apivot</p> <p>\u56e0\u6b64\uff0c\u5bf9\u4e8e\\([i,j]\\)\u8fd9\u4e2a\u5b50\u533a\u95f4\uff0cpivot\u7684\u9009\u62e9\u662f\u7b49\u6982\u7684\uff0c\\(P_{ij} = \\frac{2}{j-i+1}\\)\uff08\u5373\u9009\u62e9\\(i\\)\u6216\\(j\\)\u4f5c\u4e3apivot\u7684\u6982\u7387\uff09</p> <p>\u4ece\u800c\uff0c\u5bf9\u4e8e\u6574\u4e2a\u5e8f\u5217\uff0c\u6bd4\u8f83\u6b21\u6570\u7684\u671f\u671b\u4e3a</p> \\[E(n) = \\sum_{i=1}^{n-1} \\sum_{j=i+1}^{n} P_{ij} = \\sum_{i=1}^{n-1} \\sum_{j=i+1}^{n} \\frac{2}{j-i+1} &lt; 2n \\sum_{k=1}^{n} \\frac{1}{k} = O(n \\log n)\\] </li> </ul> </li> </ul>"},{"location":"AI_Materials/","title":"AI Materials","text":""},{"location":"AI_Materials/#cv","title":"CV","text":"<ul> <li> <p>CNN</p> <ul> <li>The pioneering work of CNN. The paper introduces the convolutional layer, pooling layer, fully connected layer, and the implementation of the CNN model.</li> </ul> </li> <li> <p>transformer</p> <ul> <li>The pioneering work of the transformer. The paper introduces the self-attention mechanism and the multi-head attention mechanism, as well as the implementation of the transformer model.</li> </ul> </li> <li> <p>GAN</p> <ul> <li>The pioneering work of GAN, which introduces the generator and discriminator mechanism in GAN.</li> </ul> </li> <li> <p>cGAN</p> <ul> <li> <p>Reference Blog</p> <ul> <li>Help build a network from scrat </li> </ul> </li> <li> <p>Deep Generative Image Models using a Laplacian Pyramid of Adversarial Networks</p> </li> <li> <p>ganhacks</p> </li> <li> <p>pix2pix </p> </li> </ul> </li> <li> <p>Unsupervised GAN</p> <ul> <li> <p>Refernce Blog</p> <ul> <li>A detailed explanation of GAN and its implementation, as well as the unsupervised GAN.</li> </ul> </li> <li> <p>Tutorial: Generative Adversarial Networks </p> </li> <li> <p>CycleGAN (style transfer)</p> </li> <li> <p>CycleGAN (Chinese font transfer) </p> </li> </ul> </li> </ul>"},{"location":"AI_Materials/#rnn","title":"RNN","text":"<ul> <li> <p>word2vec</p> <ul> <li>A detailed explanation of word2vec and its implementation CBOW &amp; SG, as well as two optimization methods, negative sampling and hierarchical softmax. </li> </ul> </li> </ul>"},{"location":"AI_Materials/#rl","title":"RL","text":"<ul> <li> <p>DQN</p> <ul> <li>The pioneering work of DQN, which introduces the experience replay mechanism and the target network mechanism.</li> </ul> </li> <li> <p>A3C</p> <ul> <li>The pioneering work of A3C, which introduces the actor-critic mechanism and the asynchronous training mechanism.</li> </ul> </li> <li> <p>Converge </p> <ul> <li>Prove the convergence and stability of the algorithm.</li> </ul> </li> <li> <p>DDPG</p> </li> </ul>"},{"location":"AI_Materials/#tips","title":"Tips","text":"<ul> <li>CUDA restart</li> </ul> <pre><code>sudo rmmod nvidia_uvm\nsudo modprobe nvidia_uvm\n</code></pre>"},{"location":"ASM/","title":"x86\u6c47\u7f16\u8bed\u8a00\u57fa\u7840","text":""},{"location":"ASM/#_1","title":"\u57fa\u672c\u89c4\u5219","text":"<ul> <li> <p>\u5bc4\u5b58\u5668\uff1a</p> </li> <li> <p>ax  bx cx dx\uff08\u8ba1\u7b97\u5e38\u7528\uff09</p> </li> <li>ds cs(\u6307\u4ee4\u548c\u6570\u636e\u6bb5\u5730\u5740)\uff0css(\u5806\u6808\u5730\u5740)\uff0ces\uff08\u6bb5\u5bc4\u5b58\u5668)     \u6bb5\u5bc4\u5b58\u5668\u4e0d\u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c\u5e38\u6570\u6216\u8ba1\u7b97\uff0c\u53ea\u80fd\u7528\u5bc4\u5b58\u5668\u6216\u53d8\u91cf\u8d4b\u503c</li> <li>si  di  bx  bp sp (\u504f\u79fb\u5730\u5740\u5bc4\u5b58\u5668\uff0c\u5373\u53ef\u4ee5\u653e\u8fdb[ ]\u4e2d)     \uff08\u5176\u4e2dss:sp\u6307\u5411\u6808\u9876\uff0cbp\u4e5f\u5e38\u7528\u4e8e\u6808\u4e2d\u5143\u7d20\uff09</li> <li>ip \uff08\u6307\u4ee4\u6307\u9488\uff0c\u6307\u4ee4\u7684\u504f\u79fb\u5730\u5740\uff09</li> <li>FL \uff0816\u4f4d\u8bb0\u5f55\u8fd0\u7b97\u72b6\u6001\uff09</li> <li>\u53cc\u76ee\u8fd0\u7b97\u4f4d\u5bbd\u76f8\u7b49\u4e14\u53ef\u786e\u5b9a\uff0c\u5e76\u4e14\u4e0d\u80fd\u540c\u65f6\u4e3a\u5185\u5b58\u5730\u5740   \u53d8\u91cf\u5f3a\u5236\u89c4\u5b9a\u4f4d\u5bbd\uff1a<code>byte/word/dword ptr</code></li> </ul> <p>\u5b9a\u4e49\u7684\u53d8\u91cf\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u4e5f\u5c5e\u4e8e\u53ef\u786e\u5b9a\u5bbd\u5ea6\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5 <code>mov a,0</code> - assume   \u672c\u8d28\u4e0a\u4e3a\u7701\u7565\u6bb5\u5730\u5740\u7684\u66ff\u6362</p> <p>(\u540c\u4e00\u4e2a\u6bb5\u4e0e\u591a\u4e2a\u6bb5\u5bc4\u5b58\u5668\u6709\u5173\u8054\u65f6:ds &gt; ss &gt; es &gt; cs)</p> <p>\u4f8b\u5982assume ds:data\u5373\u5c06data:\u81ea\u52a8\u66ff\u6362\u4e3ads:   \u6240\u4ee5\u4e00\u822c\u7a0b\u5e8f\u5f00\u5934\u6709</p> <pre><code>mov ax,data\nmov ds,ax\n</code></pre>"},{"location":"ASM/#_2","title":"\u6570\u636e\u5b58\u50a8","text":"<ul> <li>\u5185\u5b58\u4e2d\u5c0f\u7aef\u89c4\u5219\uff0c\u4f4e\u4f4d\u5728\u524d\uff0c\u9ad8\u4f4d\u5728\u540e</li> </ul> <p>\u5982    1234H  ---&gt;      34   12</p> <p>\u53ef\u7528\u4e0b\u9762\u4e24\u6bb5C\u8bed\u8a00\u4ee3\u7801\u9a8c\u8bc1</p> <pre><code>   unsigned short int a = 0x1234;\n   unsigned char *p;\n   p = (unsigned char *)&amp;a;\n   printf(\"%X %X\", p[0], p[1]);\n\n\n   unsigned char a[2]={0x12, 0x34};\n   unsigned short int *p;\n   p = (unsigned short int *)a;\n   printf(\"%X\", *p);\n</code></pre> <ul> <li>\u7b26\u53f7\u4e0d\u533a\u5206</li> </ul> <pre><code>a db 0FFh\n</code></pre> <p>\u5230\u5e95\u4ee3\u8868255\u8fd8\u662f-1,\u5728\u5b9a\u4e49\u65f6\u5e76\u4e0d\u786e\u5b9a</p> <p>\u4f46\u662f\u5728\u5f15\u7528\u53d8\u91cfa\u65f6\u53ef\u4ee5\u7528\u6307\u4ee4\u6765\u533a\u5206\u5b83\u662f\u975e\u7b26\u53f7\u8fd8\u662f\u6709\u7b26\u53f7</p> <p>\u4f8b\u5982 <code>imul  a</code>\u6307\u4ee4\u8868\u793a\u4e58\u4ee5  -1 \uff0c\u800c <code>mul a</code>\u6307\u4ee4\u5219\u8868\u793a\u4e58\u4ee5 255</p> <ul> <li>\u6bb5\u5730\u5740\uff1a\u504f\u79fb\u5730\u5740\uff08\u903b\u8f91\u5730\u5740\u5bfb\u5740\uff09   \u4ee55\u4f4d16\u8fdb\u5236\u7684\u5f62\u5f0f   XXXX:0000~~XXXX:FFFF   64KB   \u903b\u8f91\u5730\u5740XXXX0+YYYY   \u9700\u8981\u6ce8\u610f\u4e00\u4e2a\u7269\u7406\u5730\u5740\u53ef\u4ee5\u8868\u793a\u6210\u591a\u4e2a\u903b\u8f91\u5730\u5740</li> </ul> <p><code>12398h=1234:0058=1235:0048=1236:0038=1230:0098</code></p> <ul> <li> <p>\u5bfb\u5740\u65b9\u5f0f</p> </li> <li> <p>\u76f4\u63a5\u5bfb\u5740\uff08\u504f\u79fb\u5730\u5740\u4e3a\u5e38\u6570\uff0c\u6bb5\u5730\u5740\u5fc5\u987b\u4e3a\u6bb5\u5bc4\u5b58\u5668\uff09     1000H:[2000H]\u274c</p> </li> <li>\u95f4\u63a5\u5bfb\u5740\uff08\u504f\u79fb\u5730\u5740\u4e3a\u5bc4\u5b58\u5668+\u53d8\u91cf/\u6570\u7ec4\uff09</li> <li> <p>\u53d6\u5730\u5740\u8fd0\u7b97</p> </li> <li> <p>lea &amp; offset</p> <p><pre><code>\u8bbeabc\u7684\u504f\u79fb\u5730\u5740=1000h\nlea dx, abc         ; lea dx, [1000h]\nmov dx, offset abc  ; mov dx, 1000h\n\nmov dx, offset ds:[bx+si+3]   ; \u8bed\u6cd5\u9519\u8bef\nlea dx, ds:[bx+si+3]          ; dx=bx+si+3\nmov dx, bx+si+3               ; \u9519\u8bef\n\nlea eax, [eax+eax*4]          ; EAX=EAX*5 \u7528lea\u505a\u4e58\u6cd5\n</code></pre>   - lds &amp; les</p> <p>\u53d6\u8fdc\u6307\u9488\uff0c\u5e76\u5206\u522b\u628a\u6bb5\u5730\u5740\u8d4b\u7ed9ds/es\uff0c\u504f\u79fb\u5730\u5740\u8d4b\u7ed9\u76f8\u5e94\u76ee\u6807 - \u8fdc\u8fd1\u6307\u9488</p> </li> <li> <p>near ptr(\u504f\u79fb\u5730\u5740)</p> </li> <li> <p>far ptr   (\u6bb5\u5730\u5740:\u504f\u79fb\u5730\u5740)</p> <p>\u5047\u5b9a\u628a\u4e00\u4e2a\u8fdc\u6307\u94881234h:5678h\u5b58\u653e\u5230\u5730\u57401000:0000\u4e2d\uff0c\u5219\u5185\u5b58\u5e03\u5c40\u5982\u4e0b\uff1a  &amp;p=1000:0000 1000:0000 78h 1000:0001 56h 1000:0002 34h 1000:0003 12h</p> </li> </ul>"},{"location":"ASM/#_3","title":"\u7b97\u672f\u8fd0\u7b97","text":"<ul> <li><code>inc / dec  x</code>\u5355\u76ee\u8fd0\u7b97\uff08\u81ea\u52a0\u81ea\u51cf\uff0c\u4e0d\u5f71\u54cdCF\uff09</li> <li><code>add / sub  a,b</code>  \u53cc\u76ee\u8fd0\u7b97</li> <li><code>mul x</code> \u5355\u76ee\u8fd0\u7b97   \u6839\u636ex\u5bbd\u5ea6\u786e\u5b9a\u4e58\u6cd5\u5bbd\u5ea6</li> </ul> <p><pre><code>mul [1]     ah:al   = al * x\nmul [2]     dx:ax   = ax * x\nmul [4]     edx:eax = eax *x\n</code></pre> - <code>div x</code> \u5355\u76ee\u8fd0\u7b97</p> <p>\u57fa\u672c\u53ef\u89c6\u4e3a\u4e58\u6cd5\u7684\u9006\u8fd0\u7b97\uff0c\u5176\u4e2ddx\u5b58\u4f59\u6570\uff0cax\u5b58\u5546</p> <p>\uff08\u6ce8\u610fdx\u7684\u6e05\u7a7a\uff0c\u5426\u5219\u6613\u51fa\u73b0divide overflow\u62a5\u9519\uff09</p> <p>32\u4f4d\u5341\u8fdb\u5236\u8f93\u51fa</p> <p><pre><code>   mov di, 0; \u6570\u7ec4s\u7684\u4e0b\u6807\n   mov eax, abc\n   mov cx, 0; \u7edf\u8ba1push\u7684\u6b21\u6570\nagain:\n   mov edx, 0; \u88ab\u9664\u6570\u4e3aEDX:EAX\n   mov ebx, 10\n   div ebx; EAX=\u5546, EDX=\u4f59\u6570\n   add dl, '0'\n   push dx\n   inc cx; \u76f8\u5f53\u4e8eadd cx, 1\n   cmp eax, 0\n   jne again\npop_again:\n   pop dx\n   mov s[di], dl\n   inc di\n   dec cx; \u76f8\u5f53\u4e8esub cx, 1\n   jnz pop_again\n</code></pre> - <code>&amp;     |     ^      ~      &lt;&lt;     &gt;&gt;   and   or    xor    not    shl    shr</code></p> <p>\u7b80\u5355\u4f4d\u8fd0\u7b97</p> <p>\uff08\u79fb\u4f4d\u8fd0\u7b97\u6700\u540e\u79fb\u51fa\u7684\u4e00\u4f4d\u5b58\u5230CF\u4e2d\uff09 - ```   rol       ror   <pre><code>\u5faa\u73af\u79fb\u4f4d\n\n```c\nC\u8bed\u8a00\nrol()  return x&lt;&lt;n | x&gt;&gt;(sizeof(x)*8-n)\nror()  return x&gt;&gt;n | x&lt;&lt;(sizeof(x)*8-n)\n</code></pre></p> <p>\u7528\u8fd9\u4e9b\u6307\u4ee4\u6765\u5b8c\u6210\u5341\u516d\u8fdb\u5236\u8f93\u51fa\uff1a</p> <p><pre><code>again:\n   rol ax, 4  ;\u53d6\u51fa\u6700\u9ad84\u4f4d\u5230\u4f4e\u4f4d\n   push ax\n   and ax, 000Fh\n   cmp ax, 10\n   jb is_digit\nis_alpha:\n   sub al, 10\n   add al, 'A'\n   jmp finish_4bits\nis_digit:\n   add al, '0'\nfinish_4bits:\n   mov s[di], al\n   pop ax\n   pop cx\n   add di, 1\n   sub cx, 1\n   jnz again\n</code></pre> - sal: shift arithmetic left  \u7b97\u672f\u5de6\u79fb   sar: shift arithmetic right \u7b97\u672f\u53f3\u79fb   sal\u53casar\u662f\u9488\u5bf9\u7b26\u53f7\u6570\u7684\u79fb\u4f4d\u8fd0\u7b97, \u5bf9\u8d1f\u6570\u53f3\u79fb\u7684\u65f6\u5019\u8981\u5728\u5de6\u8fb9\u88651, \u5bf9\u6b63\u6570\u53f3\u79fb\u7684\u65f6\u5019\u5de6\u8fb9\u88650, \u65e0\u8bba\u5bf9\u6b63\u6570\u8fd8\u662f\u8d1f\u6570\u5de6\u79fb\u53f3\u8fb9\u90fd\u88650</p>"},{"location":"ASM/#_4","title":"\u5806\u6808","text":"<ul> <li><code>push x</code></li> </ul> <p>16\u4f4d\u621632\u4f4d\uff0csp=sp-sizeof(x) - <code>pop x</code></p> <p>16\u4f4d\u621632\u4f4d\uff0csp=sp+sizeof(x) - <code>pushf &amp; popf</code> \u4fdd\u62a4FL\u72b6\u6001\u5bc4\u5b58\u5668 - \u624b\u52a8\u5b9a\u4e49\u5806\u6808\u7a7a\u95f4</p> <pre><code>stk segment stack\ndb 200h dup(0)    ;\u6216\u5199\u6210dw 100h dup(0)\nstk ends\n</code></pre>"},{"location":"ASM/#fl","title":"FL\u72b6\u6001\u5bc4\u5b58\u5668","text":"<p>CF ZF SF OF AF PF(\u72b6\u6001) DF TF IF\uff08\u63a7\u5236\uff09</p> <p>mov\u6307\u4ee4\u4e0d\u5f71\u54cd\u4efb\u4f55\u6807\u5fd7\u4f4d</p> <ul> <li>CF\uff08Carry Flag\uff09   \u52a0\u6cd5\u8fdb\u4f4d\uff0c\u51cf\u6cd5\u501f\u4f4d</li> </ul> <p><pre><code>jc  jnc  (jump if (not)carry flag)\nadc      (add+CF)\nsbb      (sub+CF)\nclc CF=0\nstc CF=1\n</code></pre> - ZF(Zero Flag) - SF (Sign Flag   1 --&gt; - ) - OF (Overflow Flag) - PF\uff08Parity Flag\uff09</p> <p>\u5947\u5076\u6807\u5fd7\uff0c\u53ef\u505a\u6821\u9a8c\uff0c\u4f4e\u516b\u4f4d\u4e2d\u76841\u7684\u4e2a\u6570\uff0c1 --&gt; \u6709\u5076\u6570\u4e2a1 - AF(Auxiliary Flag)</p> <p>\u8f85\u52a9\u8fdb\u4f4d\u6807\u5fd7\uff0c1 --&gt; \u7b2c\u56db\u4f4d\u4e0e\u9ad8\u56db\u4f4d\u8fdb\u4f4d\u6216\u501f\u4f4d\u65f6 - DF(Direction Flag)   \u5b57\u7b26\u4e32\u590d\u5236\u65b9\u5411</p> <p><pre><code>cld DF=0 \u6b63\u65b9\u5411\nstd DF=1 \u53cd\u65b9\u5411\n</code></pre> - IF(Interrupt Flag)   1 --&gt; \u5141\u8bb8\u4e2d\u65ad</p> <p><pre><code>cli   (\u7f6e0)\n\u514d\u6253\u6270\u7a0b\u5e8f\u6bb5\nsti  \uff08\u7f6e1\uff09\n</code></pre> - TF(Trap Flag)   1 --&gt; \u8fdb\u5165\u5355\u6b65\u6a21\u5f0f\uff0c\u6bcf\u6761\u6307\u4ee4\u540e\u9690\u542bint 1H\uff08callback\uff09   \u7528\u4e8edebug\uff0c\u53cd\u8c03\u8bd5   \u88ab\u52a8\u9632\u5fa1\uff1a\u6821\u9a8c\u4ee3\u7801\u9632\u6b62\u66f4\u6539   \u4e3b\u52a8\u9632\u5fa1\uff1a\u62a2\u593a\u8d44\u6e90\uff0c\u81ea\u5df1\u83b7\u5f97int 1H\u4e3b\u52a8\u6743</p>"},{"location":"ASM/#_5","title":"\u5b57\u7b26\u4e32\u64cd\u4f5c","text":"<ul> <li>xlat(\u67e5\u8868)</li> </ul> <p>al=ds:[bx+al] - movsb movsw movsd(\u5bbd\u5ea6\u4e0d\u540c)</p> <p>\u2460ds:si   \u6e90\u5b57\u7b26\u4e32(si\u5c31\u662fsource index)   \u2461es:di  \u76ee\u6807\u5b57\u7b26\u4e32(di\u5c31\u662fdestination index)   \u2462cx      \u79fb\u52a8\u6b21\u6570   \u2463DF=0 \u5373\u65b9\u5411\u6807\u5fd7\u8bbe\u6210\u6b63\u65b9\u5411(\u7528\u6307\u4ee4cld) - stosb stosw stosd(\u5bbd\u5ea6\u4e0d\u540c)</p> <p>mov es:[di],     al/ax/eax</p>"},{"location":"ASM/#_6","title":"\u5173\u4e8e\u5faa\u73af","text":"<pre><code>loop label    ;while(--CX) jmp label\nloopz label   ;while(ZF &amp;&amp; --CX) jmp label\nloopnz label  ;while(!ZF &amp;&amp; --CX) jmp label\n</code></pre>"},{"location":"ASM/#_7","title":"\u5e38\u7528\u4e2d\u65ad","text":"<pre><code>\u7b49\u6548\u64cd\u4f5c\npushf, push cs, push ip\ntf = 0, if = 0\nip = word ptr 0:[n*4], cs = word ptr 0:[n*4+2]\n\nmov ah,01H\nint 21H           ;al=getchar()\n\nmov ah,02H\nint 21H           ;putchar(dl)\n\nmov ah,09H\nint 21H           ;cout &lt;&lt; ds:[dx]--&gt;'$'\n\nmov ah,0AH  \nint 21H           ;getline( ds:[dx+2] )\n          ;\u5176\u4e2dds:[dx]\u4e3a\u6700\u5927\u8bfb\u5165\u91cf\uff08\u8bb0\u5f97\u7f6e\u4e00\u4e2a\u5927\u6570\uff09\n          ;ds:[dx+1] \u4e3a\u5b9e\u9645\u8bfb\u5230\u7684\u5b57\u7b26\u6570 \n\nmov ah,4CH\nint 21H           ;exit\n\nmov ah,00H\nint 16H           ;AH = BIOS scan code\n                  ;AL = ASCII character\n\nmov ah,3DH\nint 21H           ;openfile\n\n;AL = access and sharing modes\n;DS:DX -&gt; ASCIZ filename\n;CL = attribute mask of files to look for\n\n;Return:\n;CF clear if successful\n;AX = file handle\n;CF set on error\n;AX = error code (01h,02h,03h,04h,05h,0Ch,56h)\n</code></pre>"},{"location":"ASM/#bcd","title":"\u5173\u4e8eBCD\u7801","text":"<p>\u4e00\u79cd\u7528\u5341\u516d\u8fdb\u5236\u8868\u793a\u5341\u8fdb\u5236\u6570\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982\u7aef\u53e3\u4e2d\u65f6\u949f</p> <p>15H   <code>&lt;----&gt;</code>   15D</p> <ul> <li> <p>\u538b\u7f29BCD    4\u4f4d\u8868\u793a\u4e00\u4e2a\u5341\u8fdb\u5236\u4f4d</p> </li> <li> <p>daa  \u52a0\u6cd5\u8c03\u6574     \u5177\u4f53\u5730</p> </li> </ul> <p><pre><code>if((AL &amp; 0FH) &gt;= 0AH) AL += 6H     //\u4f4e\u4f4d\nif((AL &amp; 0F0H) &gt;= 0AH) AL += 60H   //\u9ad8\u4f4d\n</code></pre>   - das \u51cf\u6cd5\u8c03\u6574\u7c7b\u4f3c - \u975e\u538b\u7f29BCD     8\u4f4d\u8868\u793a\u4e00\u4e2a\u5341\u8fdb\u5236\u4f4d</p> <p>8\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u7684\u9ad8\u56db\u4f4d\u6ca1\u7528</p> <p>0306H  <code>&lt;----&gt;</code>  3366H  <code>&lt;----&gt;</code> 36D</p> <ul> <li>aaa  \u52a0\u6cd5\u8c03\u6574</li> <li>\u5177\u4f53\u5730</li> </ul> <p><pre><code>if((AL &amp; 0FH) &gt;= 0AH) AL += 6 , AH++\n</code></pre>   - aas \u51cf\u6cd5\u8c03\u6574\u7c7b\u4f3c   - aam \u4e58\u6cd5\u8c03\u6574</p> <pre><code>```cpp\nAH /= 10\nAL %= 10\n```\n</code></pre> <ul> <li> <p>aad \u9664\u6cd5 \u524d \u9884\u5148\u8c03\u6574</p> <pre><code>AL = (AH * 10 + AL) &amp; 0FFH\nAH = 0\n</code></pre> </li> </ul>"},{"location":"CS231n/","title":"CS 231n","text":"<p>Systematical learning Machine Learning in CV</p>"},{"location":"CS231n/#resources","title":"Resources","text":"<ul> <li>My Repository</li> <li>Official Notes</li> <li>Course Website</li> </ul>"},{"location":"CS231n/#some-newly-learned-thoughts","title":"Some newly-learned thoughts","text":""},{"location":"CS231n/#training-sets-validation-sets-test-sets","title":"Training sets, validation sets &amp; test sets","text":"<ul> <li>We should isolate the test sets with the training process, \"just test the final model at the very end\" to avoid overfitting</li> <li>Often validation sets are extracted from training sets</li> </ul>"},{"location":"CS231n/#parameters-in-linear-model","title":"Parameters in Linear Model","text":"<ul> <li>We can view the Weight Matrix as a set of templates, and the scores as the similarity between the input and the templates</li> <li>So when printing the weights, we can somehow visualize the templates we learned</li> <li>Picture below is what we learned from the CIFAR-10 dataset using SVM   </li> </ul>"},{"location":"CS231n/#svm-support-vector-machine","title":"SVM (Support Vector Machine)","text":"<ul> <li>Hinge Loss: \\(L_i = \\sum_{j\\neq y_i} \\max(0, s_j - s_{y_i} + margin)\\), so-called max-margin loss because it encourages the correct class to have a score higher than the incorrect class by at least a margin</li> <li>The hinge loss is \"easy to be satisfied\" since it only cares about the margin, not the exact value of the score (e.g. [1,0] &amp; [100,-100] both have the same loss when the margin is 1)</li> </ul>"},{"location":"CS231n/#differentiation-on-vectors","title":"Differentiation on Vectors","text":"<ul> <li>Split: Trying to do the differentiation on a smaller vector or even a single element instead of a matrix.</li> </ul> <p>For example, solving Softmax - Cross Entropy Loss: \\(x\\) is a 1-D linear vector \\(\\frac{\\partial{Loss}}{\\partial{x}}=\\frac{\\partial{Loss}}{\\partial{score}} \\frac{\\partial{score}}{\\partial{x}}= -\\frac{1}{score_i} \\frac{\\partial{score_i}}{\\partial{x_i}}=-\\frac{1}{score_i} score_i (score_i - (y_i == i))\\)</p> <ul> <li>Dimension: Use Dimension to check or gain a overview of the result.</li> </ul>"},{"location":"CS231n/#process","title":"Process","text":"<ul> <li> <p>Preprocessing matters a lot.</p> <ul> <li>Mean subtraction: Subtract the mean of the data, thus the data should be centered around the origin</li> <li>Normalization: Divide the data by the standard deviation, thus the data should be normalized to a similar scale</li> <li>PCA: Reduce the dimension of the data, thus the data should be more efficient to compute.For example, SVD etc.</li> <li>Feature extraction: Extract the features from the raw data, thus the data should be more informative to the model. For example, HOG, Color Histogram etc.</li> <li>Data Augmentation: Generate more data from the original data, thus the model should be more robust to the noise. For example, flip, rotate, crop etc.</li> </ul> </li> <li> <p>Training</p> <ul> <li>Optimization: The gradient descent, the stochastic gradient descent, the mini-batch gradient descent, the momentum, the RMSprop, the Adam etc.</li> <li>Hyparameter Debug: The learning rate, the regularization strength, the number of hidden units, the number of layers, the number of epochs, the batch size etc.</li> <li>Monitor the Process: The loss, the accuracy, the gradient, the weights, the features etc.</li> <li>Visualize the Result: The weights, the features, the templates etc.</li> </ul> </li> </ul>"},{"location":"CS231n/#assignment","title":"Assignment","text":""},{"location":"CS231n/#assignment-1","title":"Assignment 1","text":""},{"location":"CS231n/#k-nn-k-nearest-neighbors","title":"K-NN (K Nearest Neighbors)","text":"<ul> <li>No training, just memorizing the data</li> <li>In prediction, compute the Distance with every sample (Costly)</li> <li>Use K-fold cross validation to find the best K. Concretely speaking, split the training sets into K folds, and choose each as validation set, and evaluate the model finally.</li> </ul>"},{"location":"CS231n/#svm-support-vector-machine_1","title":"SVM (Support Vector Machine)","text":"<ul> <li>Hinge Loss: \\(L_i = \\sum_{j\\neq y_i} \\max(0, s_j - s_{y_i} + margin)\\)</li> <li>Regularization: \\(L = \\frac{1}{N} \\sum_i L_i + \\frac{1}{2}\\lambda |W|^2\\), where \\(\\lambda\\) is the regularization strength</li> <li> <p>Gradient Descent:</p> <ul> <li>\\(W -= \\alpha \\nabla_W L\\),</li> <li>\\(\\nabla_W L_{yi} = - \\Sigma_{j \\neq y_i}1(w_jx_i + \\Delta &gt; 0)x_i\\)</li> <li>\\(\\nabla_W L_i = 1(w_jx_i + \\Delta &gt; 0)x_i\\)</li> </ul> </li> </ul>"},{"location":"CS231n/#softmax","title":"Softmax","text":"<ul> <li>Cross Entropy Loss: \\(L_i = -\\log(\\frac{e^{score_{y_i}}}{\\Sigma_j e^{score_j}})\\)</li> <li>Gradient Descent: \\(W -= \\alpha \\nabla_W L\\), where \\(\\nabla_W L_i = -x_i(\\frac{e^{score_{y_i}}}{\\Sigma_j e^{score_j}} - 1)\\)</li> </ul>"},{"location":"CS231n/#2-layer-network","title":"2-Layer Network","text":"<ul> <li>Combination of the lessons above. Not so hard to complete.</li> <li>Softmax gradient, however, seems hard to do right? But the final implement of training 2-layer network runs well and achieves the accuray of about 50%</li> <li></li> </ul>"},{"location":"CS231n/#feature-extraction","title":"Feature Extraction","text":"<ul> <li>Color Histogram: Count the number of pixels in each color channel</li> <li>HOG (Histogram of Oriented Gradients): Count the number of gradients in each direction</li> <li>Training on raw pixel V/S on features: After extracting the features, the model can outperform the raw pixel model a lot.</li> </ul>"},{"location":"CS231n/#assignment-2","title":"Assignment 2","text":""},{"location":"CS231n/#fully-connected-neural-network","title":"Fully Connected Neural Network","text":"<ul> <li>Multi-layer packaged class</li> <li> <p>Optimization</p> <ul> <li> <p>SGD(Stochastic Gradient Descent):</p> <p>\\(W -= \\alpha \\ d_W\\) </p> <ul> <li>Simplest way (converge slowly)</li> </ul> </li> <li> <p>SGD_Momentum:</p> <p>\\(v = \\beta v - \\alpha \\ d_W\\) </p> <p>\\(W += v\\) </p> <ul> <li>Simulate the physical process as ball rolling down the hill</li> </ul> </li> <li> <p>RMSprop:</p> <p>\\(cache = \\beta cache + (1-\\beta) d_W^2\\) </p> <p>\\(W -= \\alpha \\frac{d_W}{\\sqrt{cache} + \\epsilon}\\) (\\(\\epsilon\\) avoids division by zero) </p> <ul> <li>Adjust the learning rate adaptively, but the gradient may become too small</li> </ul> </li> <li> <p>Adam:</p> <p>\\(m = \\beta_1 m + (1-\\beta_1) d_W\\) </p> <p>\\(v = \\beta_2 v + (1-\\beta_2) d_W^2\\) </p> <p>\\(mt = \\frac{m}{1-\\beta_1^t}\\) </p> <p>\\(vt = \\frac{v}{1-\\beta_2^t}\\) </p> <p>\\(W -= \\alpha \\frac{mt}{\\sqrt{vt} + \\epsilon}\\) </p> <ul> <li>Combine the advantages of RMSprop and Momentum</li> </ul> </li> </ul> </li> </ul>"},{"location":"CS231n/#normalization","title":"Normalization","text":"<ul> <li> <p>Batch Normalization:</p> <ul> <li>Normalize the input of each layer, thus the model should be more robust to the noise and the gradient should be more stable, - But the performance depends on the batch size a lot.</li> <li>Gradient reference</li> </ul> </li> <li> <p>Layer Normalization:</p> <ul> <li>Normalize the input of each sample, thus the model should be more robust to the noise and the gradient should be more stable.</li> <li>But the performance may be influenced by the feature dimensions.</li> <li>Gradient is easy. We can transpose the matrix and transform the problem into the batch normalization.</li> <li>(N,D) -&gt; (D,N)</li> </ul> </li> <li> <p>Problem: The result of my code seems somewhat strange, like normalization works worse than without normalization. I think the problem may be the learning rate or the batch size, but I have no energy to debug it. </p> </li> </ul>"},{"location":"CS231n/#dropout","title":"Dropout","text":"<ul> <li>Randomly set some neurons to zero, thus the model should be more robust to the noise and the overfitting should be avoided.</li> <li><code>mask = (np.random.rand(*x.shape) &lt; p) / p</code></li> <li><code>p</code> is the probability of keeping a neuron active, and thus the mean of the output (or mathematical expectation) should be the same as the input.</li> </ul>"},{"location":"CS231n/#convolutional-neural-network","title":"Convolutional Neural Network","text":"<ul> <li> <p>Convolution Layer</p> <ul> <li> <p>Filter</p> <ul> <li>The learned template to extract the features</li> <li>Often \\(3*3*C\\) with stride 1</li> <li>Share parameters. Using the same filter to do convolution on the whole input, thus the model should be more efficient to compute and the number of parameters should be highly reduced.</li> <li>Too large filter may lead to a linear model, and costs more memory.</li> <li>Examples of features</li> </ul> <p></p> </li> <li> <p>Padding</p> <ul> <li>Add some zeros around the input, thus the output should be the same size as the input, which is convenient for the next layer to compute.</li> <li>Avoid the information loss on edges.</li> <li>\\(P = \\frac{F-1}{2}\\), where \\(F\\) is the size of the filter and \\(S = 1\\)</li> </ul> </li> <li> <p>Pooling</p> <ul> <li>Max Pooling: \\(max(x)\\) (Popular in practice, often \\(2 * 2\\))</li> <li>Average Pooling: \\(mean(x)\\)</li> <li>Reduce the size of the input, thus the model should be more efficient to compute and the number of parameters should be highly reduced.</li> <li>Avoid the overfitting and the noise.</li> </ul> </li> <li> <p>Layer Strutcture</p> <ul> <li>Input: \\(N * C * H * W\\)</li> <li>Filter: \\(F * C * HH * WW\\)</li> <li>Output: \\(N * F * H' * W'\\)</li> <li>Activation (often Relu): \\(N * F * H' * W'\\)</li> <li>Pooling: \\(N * F * H'' * W''\\)</li> </ul> </li> </ul> </li> <li> <p>Normalization</p> <ul> <li> <p>Spatial Batch Normalization</p> <ul> <li>Similar to Batch Normalization.</li> <li><code>X = x.transpose(0, 2, 3, 1).reshape(-1, C)</code></li> </ul> </li> <li> <p>Group Normalization</p> <ul> <li>Similar to Layer Normalization.</li> <li><code>X = x.reshape(N*G, -1)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"CS231n/#pytorch","title":"PyTorch","text":"<ul> <li>Useful tool to build the model and train the model</li> <li>Tutorial</li> <li>Docs</li> <li> <p>Structure</p> <ul> <li> <p><code>nn.Module</code></p> <ul> <li>Personalized model, more flexible</li> <li>Implement <code>forward</code> function</li> </ul> </li> <li> <p><code>nn.Sequential</code></p> <ul> <li>Simple model, just concatenate the layers</li> </ul> </li> </ul> </li> <li> <p>Optimization</p> <ul> <li><code>optim.SGD</code></li> <li><code>optim.Adam</code></li> <li><code>optim.RMSprop</code></li> <li>Backward Propagation</li> </ul> <pre><code>    optimizer.zero_grad() # clear\n\n    loss.backward()       # backpropagation\n\n    optimizer.step()      # update\n</code></pre> </li> <li> <p>Training</p> </li> </ul>"},{"location":"CS231n/#assignment-3","title":"Assignment 3","text":""},{"location":"CS231n/#visualizing","title":"Visualizing","text":"<ul> <li> <p>Salicency Maps</p> <ul> <li>A saliency map tells us the degree to which each pixel in the image affects the classification score for that image. </li> <li>To compute it, we compute the gradient of the unnormalized score corresponding to the correct class with respect to the pixels of the image.</li> <li>Or say, it visualizes the feature map of the input image.</li> </ul> </li> <li> <p>Fooling Images</p> <ul> <li>We can perform gradient ascent on the input image to maximize the class score, stopping when the network classifies the image as the target class. </li> <li>In practice, the fooling images often just looks like blurring the original image a little bit.</li> </ul> </li> <li> <p>Class Visualization</p> <ul> <li>We can also synthesize an image to maximize the classification score of a particular class </li> <li>Or say, visualizes what the network thinks various classes look like.</li> <li>Looks like AIGC images</li> </ul> </li> </ul>"},{"location":"CS231n/#rnn-captioning","title":"RNN Captioning","text":"<ul> <li> <p>Vanilla RNN</p> <ul> <li>The simplest RNN, but the gradient may vanish or explode.</li> <li>Use the hidden state to store the information of the previous time step, and use the input to update the hidden state.</li> <li> <p>\\(h_t = \\tanh(W_{hh}h_{t-1} + W_{xh}x_t)\\)</p> <p>\\(y_t = W_{hy}h_t\\)</p> </li> <li>The gradient is easy to compute, but the performance is not so good.</li> </ul> </li> <li> <p>LSTM</p> <ul> <li>The most popular RNN, with the forget gate, the input gate, the output gate.</li> <li>The gradient is easy to compute, and the performance is good.</li> <li> <p>\\(f_t = \\sigma(W_{hf}h_{t-1} + W_{xf}x_t + b_f)\\)</p> <p>\\(i_t = \\sigma(W_{hi}h_{t-1} + W_{xi}x_t + b_i)\\)</p> <p>\\(o_t = \\sigma(W_{ho}h_{t-1} + W_{xo}x_t + b_o)\\)</p> <p>\\(g_t = \\tanh(W_{hg}h_{t-1} + W_{xg}x_t + b_g)\\)</p> <p>\\(c_t = f_t \\odot c_{t-1} + i_t \\odot g_t\\)</p> <p>\\(h_t = o_t \\odot \\tanh(c_t)\\)</p> </li> </ul> </li> </ul>"},{"location":"CS231n/#transformer","title":"Transformer","text":"<ul> <li> <p>Attention Is All You Need</p> </li> <li> <p>Highly Recommend Movie By Hung-yi Lee </p> </li> <li> <p>Actually I havn't understood it well yet today, 2024.2.27</p> <p>After watching the lecture of Lee, now I got some new thoughts, 2024.2.28</p> </li> <li> <p>Structure</p> <ul> <li>Basic structure in paper:</li> </ul> <p></p> <ul> <li>Abstract structure:</li> </ul> <p></p> </li> <li> <p>Attention Mechanism</p> <ul> <li> <p>Self-Attention</p> <ul> <li>Scaled Dot-Product Attention</li> </ul> <p>\\(Attention(Q,K,V) = softmax(\\frac{QK^T}{\\sqrt{d_k}})V\\)</p> <p>Q is the query to match others, K is the key to be matched, V is the value to be extracted </p> <p></p> <ul> <li> <p>Use Dot-Product to compute the relationship between the query and the key, and use the softmax to normalize the result.</p> </li> <li> <p>Concretely, \\(Q_i\\) will be used to compute the attention score with all \\(K_j\\), and the corresponding result \\(score_{i, j}\\) will be used to compute the weighted sum of all \\(V_j\\), which is the output</p> </li> <li> <p>Finally multiply the value with the normalized result, converting the attention score to the output. </p> </li> </ul> </li> <li> <p>Multi-Head Attention</p> <ul> <li> <p>Split the input/output dimension into multiple smaller heads.</p> </li> <li> <p>Compute the attention score with multiple parallel attention mechanisms, and concatenate the result.</p> </li> </ul> <p></p> <ul> <li>Thus the model should be more expressive and the performance should be better, for multiple smller attention mechanisms can capture different features and run more efficiently.</li> </ul> </li> </ul> </li> <li> <p>Embedding</p> <ul> <li> <p>Positional Encoding</p> <ul> <li> <p>Since transformer discards the sequential information, we need to add the positional encoding to the input embedding.</p> </li> <li> <p>Just add the position embedding to the input embedding.</p> </li> </ul> <p>\\(PE(pos,\\ 2i) \\ \\ \\ \\ \\ \\ = \\sin(pos/10000^{2i/d_{model}})\\)</p> <p>\\(PE(pos,2i+1) = \\cos(pos/10000^{2i/d_{model}})\\)</p> <ul> <li>Use the sine and cosine function to encode the position information, because it's easy to add length when training length changes.</li> </ul> </li> <li> <p>Word Embedding</p> <ul> <li> <p>Use the pre-trained word embedding, or train the word embedding with the model.</p> </li> <li> <p>Similar to that of RNN.</p> </li> </ul> </li> </ul> </li> <li> <p>Other Tricks</p> <ul> <li> <p>Residual Connection</p> </li> <li> <p>Normalization</p> </li> <li> <p>Feed Forward Network</p> </li> <li> <p>Optimizer </p> </li> </ul> </li> <li> <p>Training</p> <ul> <li> <p>Input features</p> <ul> <li> <p>Embedding</p> <ul> <li>Embedding the features annd positional encoding</li> </ul> </li> <li> <p>Encoders </p> <ul> <li> <p>Multi-Head Attention</p> <ul> <li>Compute the attention score with multi-head attention, where both the query, the key and the value are derived from the input features</li> </ul> <p></p> <ul> <li>It looks like the input query with itself, or say, the input features are used to compute the attention score (relationships) with itself, so it's called self-attention. </li> </ul> </li> <li> <p>Multi-layers </p> <ul> <li>Multiple feed forward network with residual connection and normalization</li> </ul> </li> </ul> </li> </ul> </li> <li> <p>Output words (Expected Answers)</p> <ul> <li> <p>Embedding</p> <ul> <li>Feed in the Output in parallel</li> </ul> <p>For example </p> <p>With mask, it's just like spliting a sentence into N datas where \\(O_i\\) contains the first \\(i\\) words, and is to predict the next one. </p> <p>Thus the model should be more efficient to train in parallel.</p> <ul> <li> <p>Mask</p> <ul> <li> <p>To train the model in parallel, we need to mask the future words, otherwise the model may cheat.</p> </li> <li> <p>A trilled matrix is great to mask the future words.</p> </li> </ul> </li> </ul> </li> <li> <p>Decoders</p> <ul> <li> <p>2 Multi-Head Attention</p> <ul> <li> <p>Self. </p> <p>Compute the attention score with multi-head attention, where the query, the key and the value are all derived from the output features.</p> </li> <li> <p>Combine.</p> <p>Compute the attention score with multi-head attention, where the query is derived from the output features, and the key and the value are derived from the input features.</p> </li> </ul> </li> <li> <p>Multi-layers</p> </li> </ul> </li> </ul> </li> </ul> </li> <li> <p>Prediction</p> <ul> <li> <p>Output starts with a  token. <li> <p>Use the model to pick the next most possible word, and feed it back to the model.</p> </li> <li> <p>Repeat until the  token is picked. <li> <p>Some thoughts of my opnion</p> <ul> <li> <p>Compared to CNN, the transformer can access the global information, ganining the ability to capture the long-range dependencies, and thus the performance should be better.</p> </li> <li> <p>Compared to RNN, the transformer can train in parallel instead of sequentially, and thus the model should be more efficient to train.</p> </li> </ul> </li>"},{"location":"CS231n/#gan-generative-adversarial-network","title":"GAN (Generative Adversarial Network)","text":"<ul> <li> <p>Paper</p> </li> <li> <p>Structure</p> <ul> <li> <p>Generator</p> <ul> <li> <p>To generate the fake data.</p> </li> <li> <p>Viewed as a possibility distribution, trying to fit the real data distribution. </p> </li> </ul> </li> <li> <p>Discriminator</p> <ul> <li>To distinguish the real data from the fake data through learning the real data distribution.</li> </ul> </li> </ul> </li> <li> <p>Main Idea</p> <ul> <li> <p>A Min-Max Game</p> <ul> <li> <p>The generator tries to generate the fake data to cheat the discriminator</p> <p>The discriminator tries to distinguish the real data from the fake data.</p> </li> <li> \\[\\underset{G}{\\text{minimize}}\\; \\underset{D}{\\text{maximize}}\\; \\mathbb{E}_{x \\sim p_\\text{data}}\\left[\\log D(x)\\right] + \\mathbb{E}_{z \\sim p(z)}\\left[\\log \\left(1-D(G(z))\\right)\\right]\\] </li> <li> <p>The two are just like playing aganist each other, and thus both models should be trained to be better and better to \"beat\" the other one.</p> <p>Finally the generator should be able to fit the real data distribution well while the discriminator should just be fooled as a random guesser (with 50% possibility).</p> </li> <li> <p></p> <p>Black points denote real data</p> <p>Green ones denote generator distribution</p> <p>Blue ones denote output of the discriminator (possibility to be real)</p> </li> </ul> </li> </ul> </li> <li> <p>Training</p> <ul> <li> <p>Build the generator and the discriminator</p> </li> <li> <p>Key Steps</p> <ul> <li> <p>Generate the fake data using the generator</p> </li> <li> <p>Use the real-fake data loss to train the discriminator for P steps</p> <ul> <li> \\[ \\ell_D = -\\mathbb{E}_{x \\sim p_\\text{data}}\\left[\\log D(x)\\right] - \\mathbb{E}_{z \\sim p(z)}\\left[\\log \\left(1-D(G(z))\\right)\\right]\\] </li> </ul> </li> <li> <p>Use the fake data loss to train the generator for Q steps</p> <ul> <li> \\[ \\ell_G = -\\mathbb{E}_{z \\sim p(z)}\\left[\\log \\left(D(G(z))\\right)\\right]\\] </li> </ul> </li> </ul> </li> <li> <p>Important tricks on loss functions</p> <ul> <li> <p>Here we actually convert the min-max game to a min-min (mind the minus) game, because a min-max game is hard to train and may fall into a cycle.</p> </li> <li> <p>We use batch average to approximate the expectation, highly reducing the cost of computation.</p> </li> </ul> </li> <li> <p>PS: The training optimization and tricks of normal deep learning are still useful, and many so-called improved GAN models are based on these tricks.</p> </li> </ul> </li> <li> <p>Some improved models</p> <ul> <li> <p>LSGAN (Least Squares GAN)</p> <ul> <li> <p>Paper</p> </li> <li> <p>Use the least squares loss instead of the binary cross entropy loss, thus the gradient should be more stable and sharp.</p> </li> <li> \\[\\underset{G}{\\text{minimize}}\\; \\underset{D}{\\text{maximize}}\\; \\mathbb{E}_{x \\sim p_\\text{data}}\\left[(D(x)-1)^2\\right] + \\mathbb{E}_{z \\sim p(z)}\\left[D(G(z))^2\\right]\\] </li> </ul> </li> <li> <p>DC-GAN (Deep Convolutional GAN)</p> <ul> <li> <p>Paper</p> </li> <li> <p>Use the convolutional neural network to build the generator and the discriminator, bettering the performance.</p> </li> </ul> </li> <li> <p>Results on MNIST</p> </li> </ul> <p></p> </li> </ul>"},{"location":"CS231n/#self-supervised-learning","title":"Self-Supervised Learning","text":"<ul> <li> <p>Main Idea</p> <ul> <li>Use the data without labels to self-supervise the model.</li> </ul> </li> <li> <p>Contrastive Learning</p> <ul> <li> <p>Main Idea</p> <ul> <li> <p>Doing Augumentation on the input data to get a positive pair, and combine the loss of both positive pairs and negative pairs to train the model. </p> </li> <li> <p>That is, when distinguishing a totally different data, the model may easily do it by grabbing some unimportant features. So we feed them with similar data, force the model to extract the significant features.</p> </li> </ul> </li> <li> <p>SimCLR (Simple Contrastive Learning)</p> <ul> <li> <p>Paper</p> </li> <li> <p>Structure</p> <ul> <li> <p>Two branches to generate the positive pairs</p> </li> <li> <p>\\(f()\\) to extract the features</p> </li> <li> <p>\\(g()\\) to project the features, or say, a typical classifier</p> </li> <li> <p> </p> </li> </ul> </li> <li> <p>Training</p> <ul> <li> <p>Generate positive pairs (seemed quite important in training) </p> <p></p> </li> <li> <p>Feed in the batched 2*N datas, where larger N preferred</p> </li> <li> <p>Minimize the loss (Maximize the agreement)</p> <ul> <li> \\[\\ell = -\\frac{1}{2N}\\sum_{i=1}^{N}\\left[\\log\\frac{\\exp(sim(f(x_i),f(x_{i^+}))/ \\tau)}{\\sum_{j=1}^{2N} (j!=i) \\exp(sim(f(x_i),f(x_j))/ \\tau)}\\right]\\] </li> </ul> </li> </ul> </li> <li> <p>Results</p> <ul> <li> <p>Improved the performance of a pre-trained model a lot.</p> </li> <li> <p> </p> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"Database/","title":"DataBase","text":"<p>Fork Yile Liu</p>"},{"location":"Database/#_1","title":"\u7b2c\u4e00\u7ae0 \u5f15\u5165","text":""},{"location":"Database/#_2","title":"\u6570\u636e\u5e93\u91cd\u8981\u95ee\u9898","text":"<ul> <li> <p>data persistence: \u6570\u636e\u6301\u4e45\u5316</p> </li> <li> <p>convenience in accessing data: \u65b9\u4fbf\u7684\u6570\u636e\u8bbf\u95ee</p> </li> <li> <p>data integrity: \u6570\u636e\u5b8c\u6574\u6027</p> </li> <li> <p>concurrency control for multiple user: \u591a\u7528\u6237\u5e76\u53d1\u63a7\u5236</p> </li> <li> <p>failure recovery: \u5931\u8d25\u6062\u590d</p> </li> <li> <p>security control: \u5b89\u5168\u63a7\u5236</p> </li> </ul>"},{"location":"Database/#_3","title":"\u7cfb\u7edf\u7ed3\u6784","text":"<ul> <li> <p>Physical Level: \u6570\u636e\u5728\u78c1\u76d8\u4e0a\u7684\u5b58\u50a8\u65b9\u5f0f</p> </li> <li> <p>Logical Level: \u6570\u636e\u5728\u7528\u6237\u770b\u6765\u7684\u5b58\u50a8\u65b9\u5f0f</p> </li> <li> <p>View Level: \u7528\u6237\u770b\u5230\u7684\u6570\u636e</p> </li> </ul>"},{"location":"Database/#_4","title":"\u6570\u636e\u5e93\u8bed\u8a00","text":"<ul> <li> <p>DDL (Data Definition Language)</p> <ul> <li> <p>\u6570\u636e\u5b9a\u4e49\u8bed\u8a00\uff0c\u5b9a\u4e49\u6570\u636e\u5e93\u7684\u7ed3\u6784</p> <pre><code>    create table student(\n        name varchar(20),\n        ...\n        primary key(name),\n        foreign key(name) \n    );\n</code></pre> </li> <li> <p>DDL interpreter: \u7528\u4e8e\u89e3\u91caDDL\u8bed\u53e5\uff0c\u5c06\u5176\u8f6c\u5316\u4e3a\u5185\u90e8\u6570\u636e\u7ed3\u6784</p> </li> </ul> </li> <li> <p>DML (Data Manipulation Language)</p> <ul> <li> <p>\u6570\u636e\u64cd\u4f5c\u8bed\u8a00\uff0c\u5bf9\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u64cd\u4f5c</p> </li> <li> <p>Procedural DML: \u901a\u8fc7\u8fc7\u7a0b\u5316\u8bed\u8a00\u8fdb\u884c\u64cd\u4f5c</p> </li> <li> <p>Declarative DML(nonprocedural): \u901a\u8fc7\u58f0\u660e\u5f0f\u8bed\u8a00\u8fdb\u884c\u64cd\u4f5c(\u4f8b\u5982SQL\uff0c\u66f4\u52a0\u5e38\u89c1)</p> </li> <li> <p>DML compiler: \u7528\u4e8e\u89e3\u91caDML\u8bed\u53e5</p> </li> </ul> </li> <li> <p>Query Processor</p> <ul> <li>query -&gt; parse and translate -&gt; relational-algebra -&gt; optimizer -&gt; query plan -&gt; execute plan</li> </ul> </li> <li> <p>transaction management</p> <ul> <li> <p>\u4e8b\u52a1\u7ba1\u7406\uff0c\u4fdd\u8bc1\u6570\u636e\u5e93\u7684\u4e00\u81f4\u6027</p> </li> <li> <p>\u4e8b\u52a1\uff1a\u4e00\u7cfb\u5217\u64cd\u4f5c\uff0c\u8981\u4e48\u5168\u90e8\u6267\u884c\uff0c\u8981\u4e48\u5168\u90e8\u4e0d\u6267\u884c</p> </li> </ul> </li> </ul>"},{"location":"Database/#_5","title":"\u7b2c\u4e8c\u7ae0 \u6570\u636e\u5e93\u6982\u5ff5","text":""},{"location":"Database/#_6","title":"\u6982\u5ff5\u5f15\u5165","text":""},{"location":"Database/#table","title":"Table","text":"<p>\u53ef\u4ee5\u7c7b\u6bd4excel\uff0c\u6570\u636e\u5e93\u4ee5\u8868\u7684\u5f62\u5f0f\u7ec4\u7ec7\u6570\u636e\u3002\u8868\u4e2d\u7684\u4e00\u5217\u662f\u67d0\u4e00\u7c7b\u6570\u636e\uff0c\u4e00\u884c\u662f\u67d0\u4e00\u4e2a\u4e8b\u7269\u5177\u6709\u7684\u591a\u7c7b\u6570\u636e\u7684\u96c6\u5408\u3002\u4e00\u5f20\u8868\u662f\u591a\u4e2a\u96c6\u5408\u7ec4\u6210\u7684\u5927\u96c6\u5408\u3002</p> <p>\u6ce8\u610f\u6839\u636e\u96c6\u5408\u4e0d\u80fd\u6709\u76f8\u540c\u5143\u7d20\u7684\u8981\u6c42\uff0c\u4e00\u5f20\u8868\u4e2d\u4e0d\u80fd\u51fa\u73b0\u6570\u636e\u76f8\u540c\u7684\u4e24\u884c\uff0c\u4e5f\u4e0d\u80fd\u51fa\u73b0\u610f\u4e49\u76f8\u540c\u7684\u4e24\u5217\u3002\u6570\u636e\u5e93\u8bfe\u7a0b\u4e00\u822c\u4e0d\u8003\u8651\u7a7a\u96c6\u3002</p>"},{"location":"Database/#relation","title":"Relation","text":"<p>\u8868\u7684\u4e00\u884c\u662f\u67d0\u4e00\u4e2a\u4e8b\u7269\u5177\u6709\u7684\u591a\u7c7b\u5c5e\u6027\uff0c\u53cd\u8fc7\u6765\u8bf4\u591a\u7c7b\u5c5e\u6027\u7531\u67d0\u4e2a\u4e8b\u7269\u5173\u8054\u8d77\u6765\u3002\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\uff0c\u4e00\u4e2aRelation\u4e00\u822c\u6307\u4ee3\u4e00\u5f20Table\u3002</p> <p>Relation\u53c8\u53ef\u4ee5\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff1a</p> <ul> <li> <p>Relation Schema</p> <p>Relation Schema\u6307\u4e00\u5f20\u8868\u7684\u903b\u8f91\u8bbe\u8ba1\uff0c\u5305\u62ecTable\u7684\u540d\u5b57\uff0c\u5176\u4e2d\u6709\u54ea\u4e9bAttribute\uff0c\u6bcf\u4e2aAttribute\u5404\u81ea\u7684Domain\u7b49\u3002Relation Schema\u4e0d\u5173\u5fc3\u8868\u4e2d\u5177\u4f53\u7684\u6570\u636e\uff0c\u53ea\u5173\u5fc3\u6574\u4f53\u8bbe\u8ba1\u3002</p> <p>R = (A_1, A_2, A_3, ... A_n)</p> <p>\u4f8b\u5982\uff1aStudent(Student_ID, Name, Phone_Number), in which Student_ID supposed to be ......\u8fd9\u662f\u4e00\u4e2aRelation Schema\u3002</p> </li> <li> <p>Relation Instance</p> <p>Relation Instance\u662f\u4e00\u5f20\u8868\u4e2d\u5177\u4f53\u67d0\u51e0\u4e2a\u4e8b\u7269\uff08\u67d0\u51e0\u884c\uff09\u7684\u96c6\u5408\u3002\u51fa\u4e8e\u96c6\u5408\u7684\u5b9a\u4e49\uff0cRelation Instance\u662f\u53ef\u62c6\u5206\u7684\uff0c\u4e00\u4e2aInstance\u4ece\u4e2d\u7684\u67d0\u51e0\u884c\u7ec4\u6210\u96c6\u5408\u662f\u53e6\u4e00\u4e2a\u65b0\u7684Instance\u3002</p> <p>r(R) = {(t_1), (t_2), ... (t_n)}</p> <p>\u4f8b\u5982\uff1a{(3200102708, Liu Siri, 13588089548), (3200102706, Su Houxian, null)}\u8fd9\u662f\u4e00\u4e2aRelation Instance\u3002</p> <p>\u5173\u4e8e\u5143\u7ec4\uff1a</p> <ul> <li> <p>Tuple</p> <p>\u76f4\u8bd1\u4e3a\u5143\u7ec4\uff0c\u6307\u67d0\u4e2a\u8868\u4e2d\u7684\u4e00\u4e2a\u4e8b\u7269\uff0c\u6216\u8005\u8bf4\u4e00\u884c\u3002</p> </li> <li> <p>Attribute</p> <p>\u76f4\u8bd1\u4e3a\u5c5e\u6027\uff0c\u6307\u67d0\u4e2a\u8868\u4e2d\u7684\u67d0\u4e00\u7c7b\u6570\u636e\uff0c\u6216\u8005\u8bf4\u4e00\u5217\u3002</p> </li> <li> <p>Domain</p> <p>\u67d0\u4e2aAttribute\u7684\u53d6\u503c\u8303\u56f4\u3002</p> </li> <li> <p>Unordered Set</p> <p>\u8868\u4e2d\u7684\u884c\u662f\u65e0\u5e8f\u7684\uff0c\u5373\u8868\u4e2d\u7684\u884c\u7684\u987a\u5e8f\u4e0d\u5f71\u54cd\u8868\u7684\u5b9a\u4e49\u3002</p> </li> </ul> </li> <li> <p>Atomic</p> <p>\u6211\u4eec\u8981\u6c42\u6570\u636e\u5e93\u4e2d\u4efb\u610f\u5173\u7cfbr\uff0c\u5176Attribute\u7684Domain\u5fc5\u987b\u662fAtomic\u7684\u3002\u67d0\u4e2aDomain\u662fAtomic\u7684\u6307\u5176\u4e2d\u5b58\u50a8\u7684\u6570\u636e\u5df2\u7ecf\u662f\u6700\u5c0f\u5355\u5143\uff0c\u4e0d\u80fd\u8fdb\u4e00\u6b65\u62c6\u5206\u3002</p> <p>\u4f8b\u5982\uff1a\u5bf9\u4e8eAttribue(Phone_Number)\uff0c\u5982\u679c\u5141\u8bb8\u591a\u4e2a\u7535\u8bdd\u53f7\u7684\u96c6\u5408\u540c\u65f6\u5b58\u50a8\u5728\u8be5\u5217\u67d0\u884c\u4e2d\uff0c\u90a3\u4e48\u8fd9\u4e2aAttribute\u5c31\u4e0d\u6ee1\u8db3Atomic\uff0c\u4e8e\u662f\u8fd9\u5f20\u8868\u4e5f\u4e0d\u6ee1\u8db3\u6570\u636e\u5e93\u7684\u8bbe\u8ba1\u89c4\u8303\uff0c\u56e0\u4e3a\u4e00\u822c\u8ba4\u4e3a\u8fd9\u4e2a\u96c6\u5408\u53ef\u4ee5\u8fdb\u4e00\u6b65\u62c6\u5206\u6210\u4e00\u4e2a\u4e2a\u7535\u8bdd\u53f7\u3002</p> <p>\u4f46\u662f\u6ce8\u610f\uff0c\u4f60\u65e2\u53ef\u4ee5\u8ba4\u4e3a\u5355\u4e2a\u7535\u8bdd\u53f7\u4e3a\u4e0d\u80fd\u7ee7\u7eed\u62c6\u5206\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u8fd9\u65f6\u5b83Atomic\uff1b\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u7535\u8bdd\u53f7\u53c8\u5305\u62ec\u4e86\u56fd\u5bb6\u7f16\u7801\u3001\u533a\u53f7\u3001\u5206\u673a\u53f7\u7b49\u7b49\uff0c\u4e0d\u6ee1\u8db3Atomic\u3002</p> <p>\u56e0\u6b64Atomic\u662f\u4e00\u4e2a\u76f8\u5bf9\u7684\u6982\u5ff5\uff0c\u201c\u80fd\u4e0d\u80fd\u7ee7\u7eed\u62c6\u5206\u201d\u53d6\u51b3\u4e8e\u8bbe\u8ba1\u6570\u636e\u5e93\u7684\u5177\u4f53\u8981\u6c42\u4e0e\u4f60\u770b\u5f85\u6570\u636e\u7684\u65b9\u5f0f\u3002</p> </li> </ul>"},{"location":"Database/#key","title":"Key","text":"<p>Key\u662f\u67d0\u4e00\u4e2arelation\u4e2d\u67d0\u51e0\u4e2aattribute\u7684\u96c6\u5408\u3002\u5b83\u7684\u6bcf\u4e00\u4e2a\u5b50\u96c6\u4e5f\u90fd\u662f\u4e0d\u540c\u7684Key\u3002</p> <ul> <li> <p>Superkey</p> <p>\u5982\u679c\u5728\u67d0relation instance\u4e2d\u6839\u636e\u4e00\u4e2akey\u80fd\u591f\u5355\u72ec\u786e\u5b9a\u4e00\u4e2atuple\uff0c\u5b83\u662fSuperkey</p> <p>\u56e0\u6b64\uff0csuperkey \u53ef\u4ee5\u5f88\u5927\uff0c\u5982 \u6574\u4e2a\u5143\u7ec4\u7684\u6240\u6709\u5c5e\u6027\u5c31\u662f\u4e00\u4e2asuperkey</p> </li> <li> <p>Candidate Key</p> <p>\u5982\u679c\u4e00\u4e2aSuperkey\uff0c\u53bb\u6389\u4efb\u610f\u4e00\u4e2aattribute\u540e\u4e0d\u518d\u662fSuperkey\uff0c\u4ed6\u5c31\u662fCandidate Key</p> <p>\u5c31\u76f8\u5f53\u4e8e\u662f\u201c\u6700\u5c0f\u201d\u7684Superkey </p> </li> <li> <p>Primary Key\uff08\u9ed8\u8ba4not null\uff09</p> <p>\u4f7f\u7528\u4efb\u610fCandidate Key\u90fd\u53ef\u4ee5\u65b9\u4fbf\u7684\u67e5\u627erelation\u4e2d\u7684\u67d0\u4e2atuple\uff0c\u4f46\u662f\u4e3a\u4e86\u540c\u4e00\u64cd\u4f5c\u3001\u89c4\u8303\u63a5\u53e3\uff0c\u8bbe\u8ba1\u8005\u5e94\u8be5\u4e3a\u6bcf\u4e2arelation\u5728Candidates\u4e2d\u9009\u51fa\u4e00\u4e2a\u4f5c\u4e3aPrimary Key (a.k.a. Primary Key Constraint)\u3002</p> <p>Primary Key\u662frelation\u7684\u56fa\u6709\u5c5e\u6027\u800c\u4e0d\u4ec5\u662fattribute\u7684\u96c6\u5408\uff0c\u5730\u4f4d\u53d1\u751f\u4e86\u53d8\u5316\u3002</p> </li> <li> <p>Foreign Key Constraint</p> <p>A\u662f\u5173\u7cfb\\(r_{1}\\)\u7684\u4e00\u4e2akey\uff0c\uff08B\u662f\u5173\u7cfb\\(r_{2}\\)\u7684Primary Key\uff0c\uff09\u5982\u679cA\u4e2d\u6bcf\u4e2atuple\u90fd\u5728B\u4e2d\u90fd\u5b58\u5728\uff0c\u5c31\u79f0</p> <p>A is a foreign key from \\(r_{1}\\) referencing \\(r_{2}\\)</p> <p>\\(r_{1}\\) is the referencing relation of this foreign-key constraint and \\(r_{2}\\) Is the referenced relation</p> <p><code>foreign key A referencing r2(B1)</code></p> </li> </ul>"},{"location":"Database/#schema-diagram","title":"Schema Diagram","text":"<p>\u89c4\u5b9a\u67d0\u4e2arelation\u7684Primary Key\u7531\u4e0b\u5212\u7ebf\u6807\u51fa\uff1b\u6709\u5411\u7bad\u5934\u8868\u793aForeign Key Constraint\uff0c\u4ecereferencing relation\u6307\u5411referenced relation\u3002</p>"},{"location":"Database/#_7","title":"\u5173\u7cfb\u4ee3\u6570","text":""},{"location":"Database/#_8","title":"\u57fa\u7840\u64cd\u4f5c","text":"<ul> <li> <p>And Or Not(\u2227 \u2228 \u00ac)</p> </li> <li> <p>Select</p> <p>\\(\\sigma_{selection\\  predicate}(relation)\\)\uff1a\u4ecerelation\u4e2d\u9009\u51fa\u6ee1\u8db3selection predicate\u7684tuple\u7ec4\u6210\u4e00\u4e2a\u65b0\u7684relation\u3002\u5373\u9009\u884c\u3002</p> </li> <li> <p>Project</p> <p>\\(\\Pi_{A1,A2...}(relation)\\)\uff1a\u4ecerelation\u4e2d\u9009\u51fa\u540d\u79f0\u4e3aA1\u3001A2\u2026\u2026\u7684attribute\u7ec4\u6210\u4e00\u4e2a\u65b0\u7684relation,\u5373\u9009\u5217\u3002</p> <p>\u6ce8\u610f\u8fd9\u662f\u96c6\u5408\u64cd\u4f5c\uff0c\u56e0\u6b64\u4f1a\u81ea\u52a8\u53bb\u91cd</p> </li> <li> <p>Union\uff08\\(\\cup\\)\uff09</p> <ul> <li>\u5f85\u5408\u5e76\u7684\u4e24\u5f20\u8868\u5e94\u8be5\u5e94\u8be5\u76f8\u540c\u7684\u5c5e\u6027\u5143\u7ec4\uff08\u5373\u5c5e\u6027\u5b8c\u5168\u76f8\u540c\uff09</li> </ul> </li> <li> <p>Intersection\uff08\\(\\cap\\)\uff09</p> <ul> <li>\u5f85\u5408\u5e76\u7684\u4e24\u5f20\u8868\u5e94\u8be5\u5e94\u8be5\u76f8\u540c\u7684\u5c5e\u6027\u5143\u7ec4\uff08\u5373\u5c5e\u6027\u5b8c\u5168\u76f8\u540c\uff09</li> </ul> </li> <li> <p>Set Difference\uff08-\uff09</p> <ul> <li>\u5f85\u5408\u5e76\u7684\u4e24\u5f20\u8868\u5e94\u8be5\u5e94\u8be5\u76f8\u540c\u7684\u5c5e\u6027\u5143\u7ec4\uff08\u5373\u5c5e\u6027\u5b8c\u5168\u76f8\u540c\uff09</li> </ul> </li> <li> <p>Cartesian-Product\uff08\\(\\times\\)\uff09</p> <ul> <li> <p>\u5f00\u9500\u5f88\u5927\uff0c\u53ef\u4ee5\u60f3\u529e\u6cd5\u5148\u7528\u9009\u62e9\u6761\u4ef6\u964d\u4f4e\u8868\u5927\u5c0f\u518d\u505a\u79ef\uff08\u4e0d\u8fc7\u5e94\u8be5\u4e0d\u7528\u5f3a\u6c42\uff09</p> </li> <li> <p>\u4e24\u4e2a\u8868\u505a\u7b1b\u5361\u5c14\u79ef\uff0c\u4f1a\u83b7\u5f97 N * M \u884c</p> </li> </ul> </li> <li> <p>Join \uff08\u540e\u9762\u7ae0\u8282\u91cd\u70b9\uff09</p> <ul> <li> <p>\\(r\\bowtie_{predicate}s=\\sigma_{predicate}(r\\times s)\\)</p> </li> <li> <p>Inner Join: \\(r \\bowtie s\\)</p> </li> <li> <p>Outer Join</p> <ul> <li> <p>Left Outer Join: \\(r\\ \u27d5\\ s\\)</p> </li> <li> <p>Right Outer Join: \\(r\\ \u27d6\\ s\\)</p> </li> <li> <p>Full Outer Join: \\(r\\ \u27d7\\ s\\)</p> </li> </ul> </li> </ul> </li> <li> <p>Rename</p> <ul> <li> <p>\\(\\rho_{x(A_{1},A_{2}...)}(E)\\)</p> <p>\u5c06\u540d\u4e3aE\u7684\u8868\u91cd\u547d\u540d\u4e3ax\uff0c\u5e76\u5c06\u5176\u6bcf\u4e00\u5217\u91cd\u547d\u540d\u4e3aA1\u3001A2\u2026\u2026</p> </li> <li> <p>\u4e0b\u6807\\((A_{1},A_{2}...)\\)\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u4e0d\u5199\u8fd9\u4e00\u90e8\u5206\u8868\u793a\u53ea\u6539\u8868\u540d\u4e0d\u6539\u5217\u540d\u3002</p> </li> </ul> </li> <li> <p>Assignment</p> <ul> <li> <p>\\(d\\leftarrow expression\\)</p> <p>\u5c06\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u5b58\u653e\u5728\u4e34\u65f6\u201c\u53d8\u91cf\u201dd\u4e2d\uff0c\u4ee5\u4fbf\u540e\u7eed\u590d\u7528\u3002\u8fd9\u4e2a\u64cd\u4f5c\u4e00\u822c\u7528\u4e8e\u7b80\u5316\u516c\u5f0f\u548c\u589e\u5f3a\u53ef\u8bfb\u6027\u3002</p> </li> <li> <p>\u6ce8\u610f\u6570\u636e\u5e93\u6240\u6709\u7684\u8fd4\u56de\u503c\u90fd\u662f\u8868\uff0c\u5305\u62ec\u4ee3\u6570\u64cd\u4f5c\u6216\u8005\u5355\u6307\u64cd\u4f5c\u7b49\u3002</p> </li> </ul> </li> <li> <p>Division</p> <ul> <li>let \\(r(ID,course.ID)\\) and \\(s(course.ID)\\),  then \\(r\\div s\\) gives us ID who have taken all courses in the relation \\(s\\).</li> </ul> </li> <li> <p>\u4ee3\u6570\u64cd\u4f5c</p> <ul> <li>\u5e38\u89c1\u7684\u4ee3\u6570\u64cd\u4f5c\u6709avg, min, max, sum, count\u7b49</li> </ul> </li> </ul>"},{"location":"Database/#sql","title":"\u7b2c\u4e09\u7ae0 SQL\u57fa\u7840","text":""},{"location":"Database/#sql_1","title":"SQL\u6570\u636e\u7c7b\u578b","text":"<p>char(n): \u5b9a\u957f\u4e3an\u7684\u5b57\u7b26\u4e32</p> <p>varchar(n): variable-lenth char \u6700\u5927\u957f\u5ea6\u4e3an\u7684\u53ef\u53d8\u957f\u5b57\u7b26\u4e32</p> <p>int/smallint: \u6574\u6570\u578b\uff0c\u5141\u8bb8\u7684\u6570\u636e\u8303\u56f4\u7531\u5e93\u548c\u8ba1\u7b97\u673a\u67b6\u6784\u51b3\u5b9a\u3002smallint\u5360\u636e\u7684\u7a7a\u95f4\u4e0e\u53ef\u8868\u793a\u7684\u8303\u56f4\u90fd\u5c0f\u4e8eint\u3002</p> <p>numeric(p, d): \u5341\u8fdb\u5236\u8868\u793a\uff0c\u603b\u5171\u6709p\u4f4d\uff0c\u5176\u4e2d\u5c0f\u6570\u70b9\u540e\u6709d\u4f4d\u3002\u4f8b\u5982\u5bf9numeric(3, 1)\uff0c10.5\u300101.0\u662f\u5408\u6cd5\u7684\uff0c1.05\u3001105\u30011\u90fd\u662f\u4e0d\u5408\u6cd5\u7684\u3002</p> <p>real/double precision: \u5355\u7cbe\u5ea6\u548c\u53cc\u7cbe\u5ea6\u6d6e\u70b9\uff0c\u5927\u81f4\u5bf9\u5e94C\u8bed\u8a00\u7684float/double\u3002\u5141\u8bb8\u7684\u6570\u636e\u8303\u56f4\u7531\u5e93\u548c\u8ba1\u7b97\u673a\u67b6\u6784\u51b3\u5b9a\u3002</p> <p>float(n): \u81f3\u5c11\u6709n\u4e2a\u6570\u5b57\u7684\u6d6e\u70b9\u6570\u3002\u6ce8\u610f\u533a\u522bSQL\u7684float\u4e0e\u5e38\u89c1\u7f16\u7a0b\u8bed\u8a00\u7684float\u3002</p> <p>NULL</p> <ul> <li> <p>\u4ee3\u8868\u672a\u77e5\uff0c\u548c 0 \u4e0d\u76f8\u540c</p> </li> <li> <p>\u7279\u6b8a\u8fd0\u7b97\u89c4\u5219</p> <ul> <li> <p>and \u67090\u4e3a\u5047</p> </li> <li> <p>or    \u67091\u4e3a\u771f</p> </li> <li> <p>\u6bd4\u8f83 / \u7b97\u672f\u7b49\u7ed3\u679c\u4e3aunknown</p> </li> <li> <p>not unknown = unknown</p> </li> <li> <p>where \u4e2d\u8ba4\u4e3a unknown \u4e3a false</p> </li> <li> <p>\u7b5b\u9009distinct\u65f6\uff0cnull = null</p> </li> <li> <p>NULL\u503c\u4e0d\u53c2\u4e0e\u5bf9\u5217\u7684\u4ee3\u6570\u51fd\u6570\uff0c\u5168NULL\u7684tuple\u4e0d\u4f1a\u88abcount( )\u8ba1\u6570\u3002\u6ca1\u6709\u975eNULL\u5143\u7d20\u65f6\u4ee3\u6570\u64cd\u4f5c\u8fd4\u56deNULL\uff0ccount( )\u8fd4\u56de0\u3002</p> </li> </ul> </li> </ul> <p>\u6ce8\u610f\uff1a\u4ee5\u4e0a\u662f\u6559\u79d1\u4e66\u4e2d\u7684\u5185\u5bb9\uff0c\u5176\u4e2dchar/varchar/int\u57fa\u672c\u5168\u4e16\u754c\u901a\u7528\uff0c\u4f46\u662f\u5176\u4ed6\u7684\u6570\u636e\u7c7b\u578b\u5728\u4e0d\u540cDBMS\u4e2d\u8bed\u6cd5\u53ca\u7528\u6cd5\u53ef\u80fd\u5404\u6709\u4e0d\u540c\u3002</p>"},{"location":"Database/#sql_2","title":"SQL\u8bed\u53e5","text":"<p>\u6240\u6709SQL\u8bed\u53e5\u4ee5\u53ca\u8868\u540d\u3001\u5217\u540d\u7b49\u6807\u8bc6\u7b26\u90fd\u662f\u5927\u5c0f\u5199\u4e0d\u654f\u611f\u7684</p> <p>\u4f46\u662f\u8868\u7684\u5185\u5bb9\uff0c\u4f8b\u5982\u5b57\u7b26\u4e32\u7b49\uff0c\u5927\u5c0f\u5199\u654f\u611f\u3002</p> <p>\u4ee5\u4e0b\u53ea\u8bb0\u5f55\u6613\u9519\u70b9\uff0c\u4e0d\u6db5\u76d6\u6240\u6709\u8bed\u6cd5\u3002</p>"},{"location":"Database/#updates-to-tables","title":"Updates to tables","text":"<ul> <li> <p><code>drop table r;</code></p> </li> <li> <p><code>alter table r add column_name data_type;</code></p> </li> <li> <p><code>alter table r drop column_name;</code></p> </li> </ul>"},{"location":"Database/#select","title":"select","text":"<p>select\u53ef\u4ee5\u7ec6\u5206\u4e3aselect all\u4e0eselect distinct\uff0c\u533a\u522b\u662f\u662f\u5426\u4e3a\u7ed3\u679c\u53bb\u91cd\uff0cselect\u4e0d\u4f7f\u7528\u540e\u7f00\u65f6\u9ed8\u8ba4\u4e3aselect all</p> <p>select\u9009\u62e9\u7684\u5185\u5bb9\u53ef\u4ee5\u662f\u8868\u8fbe\u5f0f\uff0c\u4f8b\u5982select salary/1000 from teacher; \u8fd4\u56de\u7684\u662fsalary/1000\u7684\u7ed3\u679c\u3002</p> <p>from\u5b50\u53e5\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u8868\uff0c\u7528\u9017\u53f7\u5206\u9694\uff0c\u4f8b\u5982from r1, r2, r3...\uff0c\u8fd9\u6837select\u7684\u7ed3\u679c\u5c31\u662f\u8fd9\u4e9b\u8868\u7684\u7b1b\u5361\u5c14\u79ef\u3002</p> <p>\u540e\u9762\u4e00\u822c\u6709where\u5b50\u53e5\uff0c\u7528\u4e8e\u7b5b\u9009\u8868\u4e2d\u7684\u5185\u5bb9\u3002</p> <p>\u56e0\u6b64select\u53ef\u4ee5\u6ca1\u6709from\u5b50\u53e5\uff0c\u4e00\u822c\u7528\u4e8e\u5c55\u793a\u6570\u636e\u6216\u8005\u8d4b\u503c\u5e76\u5c55\u793a\u7ed3\u679c\uff0c\u4f8b\u5982select 12345/5; \u5355\u7eaf\u6253\u5370\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u6570\u5b57</p> <p>select\u7ed3\u679c\u53ef\u4ee5\u4f7f\u7528order by ATTRIBUTE_NAME (desc/asc)\u5b50\u53e5\u6392\u5e8f\uff0cdesc/asc\u8868\u793a\u6309\u7167\u964d/\u5347\u5e8f\uff0c\u4e0d\u5199\u9ed8\u8ba4\u4e3aasc\u3002</p> <p>order by\u540e\u9762\u53ef\u4ee5\u8ddf\u591a\u4e2aattribute\uff0c\u4ee5\u9017\u53f7\u5206\u9694\uff0c\u9760\u524d\u7684\u4f18\u5148\u3002</p> <p>select 'k' from ---&gt;N\u884c \u4e00\u5217'k', \u5c5e\u6027'k'</p>"},{"location":"Database/#as","title":"as","text":"<p>as\u53ef\u4ee5\u4e3a\u540c\u4e00\u4e2a\u5bf9\u8c61\u8d4b\u4e24\u4e2a\u522b\u540d\u4ee5\u5b9e\u73b0\u81ea\u6211\u5bf9\u6bd4\uff0c\u4f46\u662f\u522b\u540d\u7684\u4f5c\u7528\u57df\u4ec5\u9650\u4e8e\u5355\u6761\u8bed\u53e5\uff0c\u5b9e\u9645\u540d\u79f0\u5e76\u4e0d\u4f1a\u88ab\u66f4\u6539.</p>"},{"location":"Database/#string","title":"string","text":"<p>SQL \u7528\u4e00\u5bf9\u5355\u5f15\u53f7\u8868\u793a\u5b57\u7b26\u4e32\uff0c\u82e5\u8981\u5728\u5b57\u7b26\u4e32\u4e2d\u4f7f\u7528\u5355\u5f15\u53f7\uff0c\u53ef\u4ee5\u7528\u4e24\u4e2a\u5355\u5f15\u53f7\u8868\u793a\u4e00\u4e2a\u5355\u5f15\u53f7\u3002</p> <p>like\u662f\u6a21\u7cca\u641c\u7d22\u7684\u5173\u952e\u5b57\uff0c\u53ef\u4ee5\u7528 % \u8868\u793a\u4efb\u610f\u591a\u4e2a\u5b57\u7b26\uff0c\u7528 _ \u8868\u793a\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26</p> <p>\u9700\u8981\u5b57\u7b26\u4e32\u67e5\u627e\u5185\u5bb9\u672c\u8eab\u5305\u542b\u7279\u6b8a\u5b57\u7b26\u7684\uff0c\u53ef\u4ee5\u7528\u9003\u9038\u7b26\u53f7+\u8f6c\u4e49\u5b57\u7b26\uff0c\u5982\u83b7\u5f97'%' <code>'\\%' escape '\\'</code></p> <p>\u5b57\u7b26\u4e32\u5185\u5bb9\u5339\u914d\u9ed8\u8ba4\u533a\u5206\u5927\u5c0f\u5199\u3002</p>"},{"location":"Database/#set","title":"set","text":"<ul> <li> <p>set operations</p> <ul> <li> <p><code>union / intersect / except</code> \u53c8\u6709all\u548cdistinct\u4e24\u4e2a\u7248\u672c\uff0c\u533a\u522b\u662f\u7ed3\u679c\u662f\u5426\u53bb\u91cd</p> </li> <li> <p>\u4f46\u662f\u4ed6\u4eec\u9ed8\u8ba4\u4f5c\u4e3a\u96c6\u5408\u64cd\u4f5c\u662f\u53bb\u91cd\u7684\uff0c\u8fd9\u4e0eselect\u4e0d\u540c\u3002</p> </li> </ul> </li> <li> <p>set membership</p> <ul> <li><code>(not) in</code></li> </ul> </li> <li> <p>set comparison</p> <ul> <li> <p><code>some / all</code></p> </li> <li> <p>( = some) == (in) </p> </li> <li> <p>( != some) != (not in)</p> </li> <li> <p>(!= all) == (not in)</p> </li> <li> <p>( = all) != (in)</p> </li> </ul> </li> <li> <p>set empty test</p> <ul> <li><code>(not) exists</code></li> </ul> </li> <li> <p>set unique test</p> <ul> <li><code>unique</code> to check if duplicates exist</li> </ul> </li> </ul>"},{"location":"Database/#aggregate-functions","title":"aggregate functions","text":"<p><code>avg, count, min, max, sum</code></p> <p>\u805a\u96c6\u51fd\u6570\uff0c\u987e\u540d\u601d\u4e49\uff0c\u80fd\u628a\u540c\u4e00\u5217\u4e0d\u540c\u503c\u805a\u96c6\u5230\u4e00\u8d77\u5904\u7406\u4e3a\u4e00\u4e2a\u503c</p>"},{"location":"Database/#group-by","title":"group by","text":"<p>\u914d\u5408\u5404\u7c7b\u4ee3\u6570\u64cd\u4f5c</p> <p>group by\u5148\u4e8eselect\u8fdb\u884c\uff0c\u521b\u5efa\u4e00\u4e2a\u4ec5\u5305\u542b\u4ee3\u6570\u64cd\u4f5c\u5217\u4e0egroup by\u5217\u7684\u4e34\u65f6\u8868\uff0cselect\u64cd\u4f5c\u5728\u8fd9\u4e2a\u4e34\u65f6\u8868\u4e2d\u8fdb\u884c\u3002\u8fd9\u5e26\u6765\u4e24\u4e2a\u7279\u6027\uff1a</p> <ul> <li> <p>select...group by...\u53ef\u4ee5\u5728\u591a\u4e2a\u5217\u540d\u548c\u5217\u6570\u4e0d\u5b8c\u5168\u76f8\u540c\u7684\u8868\u4e2d\u8fdb\u884c\uff0c\u53ea\u8981\u5171\u6709\u7528\u4e8e\u4ee3\u6570\u64cd\u4f5c\u548cgroup by\u7684\u5217\u5c31\u53ef\u4ee5\u4e86\u3002\u4f8b\u5982\u4e0b\u9762\u7684\u8868r1\u3001r2\u2026\u2026\u53ea\u8981\u5171\u6709A1\u3001A2\uff08\u7528\u4e8egroup by\uff09\u548cA3\uff08\u7528\u4e8esum\uff09\u5373\u53ef\uff0c\u5176\u4f59\u5217\u65e0\u6240\u8c13\u3002</p> <pre><code>select A1, sum(A3)\nfrom r1, r2, r3...\nwhere P group by A1, A2\n</code></pre> </li> <li> <p>\u540c\u65f6select\u4ee3\u6570\u64cd\u4f5c\u548c\u5176\u4ed6\u7684\u5217\u65f6\uff0c\u5176\u4ed6\u5217\u5fc5\u987b\u540c\u65f6\u653e\u5728group by\u91cc\u9762\uff0c\u56e0\u4e3a\u4e0d\u80fd\u9009\u62e9\u4e34\u65f6\u8868\u4e2d\u6ca1\u6709\u7684\u5217\u3002\u4e0b\u9762\u662f\u4e24\u4e2a\u9519\u8bef\u7684\u4f8b\u5b50\uff0cID\u4e0d\u80fd\u88ab\u9009\u62e9\uff1a</p> <p>\u5373group by\u4e4b\u540e\uff0c\u6bcf\u4e2agroup\u53ea\u80fd\u8f93\u51fa\u4e00\u884c\u6570\u636e</p> <pre><code>select dept_name, ID, avg (salary)\nfrom instructor\ngroup by dept_name;\n\nselect ID, max(salary) from instructor;\n</code></pre> </li> </ul>"},{"location":"Database/#where-having","title":"where / having","text":"<p>where\u5728group by\u4e4b\u524d\u8fdb\u884c\uff0c\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684tuble\u4e0d\u4f1a\u53c2\u4e0egroup by\u8fdb\u5165\u4e34\u65f6\u8868</p> <p>having\u5728group by\u4e4b\u540e\u8fdb\u884c\uff0c\u5728\u4e34\u65f6\u8868\u4e2d\u7b5b\u9009\uff08\u56e0\u6b64\u540c\u6837\u53ea\u6709group by\u4e4b\u540e\u7684\u6570\u636e\u680f\uff09\uff0c\u53ea\u8fd4\u56de\u6ee1\u8db3\u7684tuble</p> <p>\u56e0\u6b64\u5f15\u7533\u51faexists\u53ea\u80fd\u8ddfwhere\uff1b\u4ee3\u6570\u64cd\u4f5c\u505a\u6761\u4ef6\u53ea\u80fd\u8ddfhaving\uff1b\u540c\u6837\u7684\u8bed\u53e5\u5728where\u548chaving\u4e4b\u540e\u6548\u679c\u4e0d\u4e00\u5b9a\u76f8\u540c\u3002</p>"},{"location":"Database/#with","title":"with","text":"<pre><code>with \ntemp_table_name1(attribute_name1, attibute_name2...) as (),\ntemp_table_name2(attribute_name1, attibute_name2...) as (),\n...\n</code></pre> <p>\u5efa\u7acb\u4e00\u4e2a\u4f5c\u7528\u57df\u4e3a\u4e00\u6761\u8bed\u53e5\u7684\u4e34\u65f6\u7684\u8868\u7528\u4e8e\u7b80\u5316\u903b\u8f91\u8868\u8fbe\u5f0f\u589e\u52a0\u53ef\u8bfb\u6027\u3002 \u76f8\u5f53\u4e8e\u5173\u7cfb\u4ee3\u6570\u4e2d\u7684Assignment\u3002select\u53ef\u4ee5\u4e0d\u51fa\u73b0\u3002</p>"},{"location":"Database/#delete","title":"delete","text":"<p><code>delete from table_name where ()</code></p>"},{"location":"Database/#insert","title":"insert","text":"<p><code>insert into table_name values(...)</code></p> <p><code>insert into table_name(attributes...) values(...)</code></p> <p>values \u4e5f\u53ef\u66ff\u6362\u6210\u5d4c\u5957\u5b50\u67e5\u8be2</p>"},{"location":"Database/#update","title":"update","text":"<ul> <li> <p><code>update table_name set attribute = () where ()</code></p> </li> <li> <p>\u6709\u65f6\u64cd\u4f5c\u4f1a\u5f71\u54cd\u540e\u7eed\u7684\u5224\u65ad\uff0c\u5bfc\u81f4\u975e\u5e38\u9ebb\u70e6\u7684\u62d3\u6251\u5e8f\u5904\u7406\uff0c\u56e0\u6b64\u590d\u6742\u65f6\u53ef\u4ee5\u4f7f\u7528case\u6761\u4ef6\u5224\u65ad</p> <pre><code>set () = case\n    when condition1 then value1\n    when condition2 then value2\n    ...\n    else value2\nend\n</code></pre> </li> </ul>"},{"location":"Database/#sql_3","title":"\u7b2c\u56db\u7ae0 SQL\u8fdb\u9636","text":""},{"location":"Database/#join","title":"Join","text":"<p>Join\u8bed\u53e5\u7684\u57fa\u672c\u529f\u80fd\u662f\u5c06\u4e24\u5f20\u8868\u4e2d\u7684tuple\u6309\u4e00\u5b9a\u89c4\u5219\u8fdb\u884c\u5339\u914d\uff0c\u5c06\u4ed6\u4eec\u76f8\u540c\u7684\u5217\u62fc\u8d77\u6765\uff0c\u4e0d\u540c\u7684\u5217\u5168\u90e8\u4fdd\u7559\uff0c\u5408\u6210\u4e00\u4e2a\u5927tuple\u3002</p> <p>\u5b83\u7684\u63a7\u5236\u7b26\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\uff1a</p> <ul> <li> <p>Join Conditions\uff08\u63a7\u5236\u54ea\u4e00\u4e9b\u5217\u6216\u6761\u4ef6\u7528\u4e8e\u5339\u914d\u4e24\u5f20\u8868\u4e2d\u7684tuple\uff09</p> <ul> <li> <p>natural\uff1atuple\u6240\u6709\u540c\u540d\u5217\u7684\u503c\u76f8\u7b49\uff08\u9ed8\u8ba4\uff09\uff0c\u4f46\u662f\u6709\u8868\u7ed3\u6784\u672a\u77e5\u9519\u8bef\u5408\u5e76\u7684\u98ce\u9669</p> <ul> <li>natural \u4f1a\u5408\u5e76\u540c\u540d\u5217\uff0c\u4e14using\u4e5f\u662f\u76f8\u5f53\u4e8e\u9ed8\u8ba4\u4e3anatural</li> </ul> </li> <li> <p>using (A1, A2...)\uff1atuple\u540c\u540d\u5217\u4e2d\u6307\u5b9a\u7684\u90e8\u5206\u5217\u7684\u503c\u76f8\u7b49</p> </li> <li> <p>on \\\uff1a\u6309\u7167\u7279\u5b9a\u7684\u89c4\u5219\u5339\u914d\uff0c\u4e0d\u9650\u4e8e\u540c\u540d\u5217 <li> <p>Join Types\uff08\u63a7\u5236\u5982\u4f55\u5904\u7406\u6ca1\u6709\u5339\u914d\u5bf9\u8c61\u7684tuple\uff09</p> <ul> <li> <p>Inner Join\uff1a\u6ca1\u6709\u5339\u914d\u5bf9\u8c61\u5219\u4e0d\u8fd4\u56de\uff08\u9ed8\u8ba4\uff09</p> </li> <li> <p>Left Outer Join\uff1a\u5de6\u4fa7\u8868\u7684tuple\u6ca1\u6709\u5339\u914d\u5bf9\u8c61\uff0c\u5219\u4e3a\u6269\u5c55\u7684\u5217\u586b\u5165NULL\uff0c\u4e00\u8d77\u8fd4\u56de\uff08\u5de6\u8fb9\u5143\u7d20\u4e00\u5b9a\u5b58\u5728\uff09</p> </li> <li> <p>Right Outer Join\uff1a\u53f3\u4fa7\u8868\u7684tuple\u6ca1\u6709\u5339\u914d\u5bf9\u8c61\uff0c\u5219\u4e3a\u6269\u5c55\u7684\u5217\u586b\u5165NULL\uff0c\u4e00\u8d77\u8fd4\u56de\uff08\u53f3\u8fb9\u5143\u7d20\u4e00\u5b9a\u5b58\u5728\uff09</p> </li> <li> <p>Full Outer Join\uff1a\u4e0a\u9762\u4e8c\u8005\u7684\u5e76\u96c6</p> </li> </ul> </li>"},{"location":"Database/#view","title":"View","text":"<pre><code>create view view_name(attributes...) as () \n</code></pre> <p>view\u4e00\u822c\u7531\u4e8e\u6743\u9650\u95ee\u9898\uff0c\u906e\u63a9\u90e8\u5206\u6570\u636e\u7528\u4e8e\u67e5\u627e\u4ee5\u53ca\u63a5\u53e3\uff0c\u8bed\u6cd5\u548cwith\u76f8\u540c\uff0c\u4f5c\u7528\u4e5f\u57fa\u672c\u76f8\u540c\u3002\u552f\u4e00\u7684\u533a\u522b\u662fview\u4e00\u7ecf\u5b9a\u4e49\u5219\u4e00\u76f4\u53ef\u7528\uff0c\u800cwith\u7684\u4f5c\u7528\u57df\u4ec5\u6709\u5355\u6761\u8bed\u53e5\u3002</p> <ul> <li> <p>view\u5e76\u4e0d\u662f\u5b9e\u9645\u5b58\u5728\u7684\u8868\uff0c\u6bcf\u6b21\u8c03\u7528view\u65f6\u53ea\u662f\u91cd\u590d\u8c03\u7528\u4e86\u7b5b\u9009\u7684\u6761\u4ef6\u3002\u56e0\u6b64update table\u540e\uff0c\u4e0e\u4e4b\u5173\u8054\u7684view\u4e5f\u4f1a\u6539\u53d8</p> </li> <li> <p>\u6211\u4eec\u4e00\u822c\u4e0d\u5bf9view\u8fdb\u884cupdate\uff0c\u5927\u90e8\u5206SQL\u7cfb\u7edf\u5bf9update view\u6709\u4e25\u683c\u7684\u9650\u5236\u3002</p> </li> <li> <p>\u90e8\u5206SQL\u4e5f\u652f\u6301materialize view\uff0cview\u6b64\u65f6\u662f\u4e00\u5f20\u771f\u5b9e\u5b58\u5728\u7684\u8868\uff0c\u8fd9\u4e00\u822c\u662f\u4e3a\u4e86\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\uff0c\u7269\u5316\u89c6\u56fe\u76f8\u5173\u7684\u8868\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u5b83\u81ea\u5df1\u4e5f\u5fc5\u987b\u540c\u65f6\u66f4\u65b0\uff0c\u4ee5\u7ef4\u6301\u4e00\u822cview\u7684\u7279\u6027\u3002</p> </li> <li> <p>view dependecy: \u53ef\u4ee5\u5d4c\u5957\u5b9a\u4e49\uff0c\u751a\u81f3\u81ea\u6211\u9012\u5f52\u5b9a\u4e49\uff1f </p> </li> </ul>"},{"location":"Database/#index","title":"Index","text":"<pre><code>CREATE INDEX index_name ON table_name ( column1, column2.....);//\u521b\u5efa\nALTER TABLE table_name DROP INDEX index_name;//\u5220\u9664\n</code></pre> <p>\u7d22\u5f15\u7684\u539f\u7406\u7c7b\u4f3c\u4e8e\u4e66\u7684\u76ee\u5f55\uff0c\u8981\u67e5\u627e\u67d0\u4e2a\u8bcd\u4e0d\u9700\u8981\u4ece\u5934\u5f00\u59cb\u9605\u8bfb\u4e66\u7c4d\uff0c\u53ef\u4ee5\u4ece\u76ee\u5f55\u67e5\u5230\u9875\u7801\u76f4\u63a5\u8df3\u8f6c\uff0c\u4e8e\u662f\u52a0\u5feb\u4e86\u67e5\u627e\u7684\u901f\u5ea6\u3002\u5176\u5177\u4f53\u5b9e\u73b0\u65b9\u5f0f\u4e0d\u9700\u8981\u6df1\u7a76\u3002\u4e00\u4e2a\u8868\u53ef\u4ee5\u521b\u5efa\u591a\u4e2a\u7d22\u5f15\uff0c\u4e00\u4e2a\u7d22\u5f15\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u5217\uff08\u590d\u5408\u7d22\u5f15\uff09\u3002</p> <p>\u4f46\u7d22\u5f15\u5e76\u4e0d\u662f\u5c3d\u5584\u5c3d\u7f8e\uff0c\u4f8b\u5982update\u4e4b\u540e\uff0c\u7d22\u5f15\u9700\u8981\u540c\u6b65\u7ef4\u62a4\uff1b\u540c\u65f6\u7d22\u5f15\u662f\u4e00\u79cd\u7269\u7406\u6570\u636e\u7ed3\u6784\uff0c\u6709\u989d\u5916\u7684\u7a7a\u95f4\u4e0eIO\u5f00\u9500\u3002\u4e0d\u9002\u5f53\u7684\u7d22\u5f15\u8bbe\u7f6e\u53cd\u800c\u4f1a\u964d\u4f4e\u6548\u7387\u3002</p>"},{"location":"Database/#integrity-constraint","title":"Integrity Constraint","text":"<p>\u5b8c\u6574\u6027\u7ea6\u675f\u5373\u5bf9attribute\u5185\u5bb9\u7684\u7ea6\u675f\uff0c\u4e0d\u6ee1\u8db3\u7ea6\u675f\u6761\u4ef6\u7684tuple\u4e0d\u80fd\u88ab\u63d2\u5165\u3002</p> <p>\u5bf9\u6570\u636e\u7c7b\u578b\u7684\u7ea6\u675f\u65e2\u53ef\u4ee5\u5728\u5b9a\u4e49\u8868\u65f6\u89c4\u5b9a\uff0c\u4e5f\u53ef\u4ee5\u540e\u671f\u901a\u8fc7domain\u5173\u952e\u5b57\u589e\u5220\u6539</p> <p>\u4e00\u822c\u67094\u7c7b\u7ea6\u675f\u65b9\u6cd5\uff1a</p> <ul> <li> <p>not NULL\uff1a\u975e\u7a7a\u3002</p> </li> <li> <p>Primary Key\uff1a\u6784\u6210\u4e3b\u952e\u7684tuple\u4e0d\u80fd\u91cd\u590d\u3002</p> </li> <li> <p>Check(Predicate)\uff1a\u81ea\u5b9a\u4e49\u68c0\u67e5\u7684\u6761\u4ef6\uff0c\u5728\u6570\u636e\u8868\u6709\u6539\u53d8\u65f6\u4fbf\u4f1a\u81ea\u52a8\u68c0\u67e5\uff0c\u4f8b\u5982 <code>CHECK (semester in (\"spring\", \"autumn\") )</code>\u3002</p> </li> <li> <p>Foreign Key : \u5916\u952e\u7ea6\u675f\uff0c\uff08\u539f\u5219\u4e0a\uff0c\u53ef\u4ee5\u4e0d\u662f\uff09\u81ea\u5b9a\u7684\u82e5\u5e72\u4e2aattribute\u7ec4\u6210\u7684tuple\u4e00\u5b9a\u662ftable_name\u7684\u4e3b\u952e\u4e4b\u4e00</p> <p><code>foreign key (attribute_name1, attribute_name2 ...) references table_name(attribute)</code></p> </li> </ul> <p>\u7ea6\u675f\u88ab\u7834\u574f\u65f6\u7684\u5904\u7406\u65b9\u6cd5\uff1a</p> <ul> <li> <p>cascade: \u7ea7\u8054\uff0c\u66f4\u65b0\u4e0e\u5220\u9664\u7b49\u64cd\u4f5c\u8fdd\u53cd\u5b8c\u6574\u6027\u7ea6\u675f\uff0c\u4fbf\u4f1a\u5c06\u5f71\u54cd\u7684\u5b50\u6570\u636e\u4e00\u5e76\u5904\u7406\u6389\uff08\u4e00\u822c\u6ca1\u6709 insert cascade\uff09</p> <ul> <li>\u8fd8\u53ef\u4ee5set null, set default\u7b49</li> </ul> </li> <li> <p>assertion: \u65ad\u8a00\uff0calways satisfy</p> </li> <li> <p>trigger\uff1aEvents &amp; Actions</p> <ul> <li>\u6709\u6548\u4f46\u5c11\u7528</li> </ul> </li> </ul>"},{"location":"Database/#_9","title":"\u7279\u6b8a\u6570\u636e\u7c7b\u578b","text":"<ul> <li> <p>\u65f6\u95f4\u76f8\u5173</p> <ul> <li> <p>date\uff1a\u65e5\u671f</p> </li> <li> <p>time\uff1aSQL\u81ea\u5e26\u65f6\u95f4\u76f8\u5173\u7684\u7279\u6b8a\u6570\u636e\u7c7b\u578b</p> </li> <li> <p>timestamp\uff1adate + time</p> </li> <li> <p>interval\uff1a\u65f6\u95f4\u95f4\u9694</p> </li> </ul> </li> <li> <p>\u5927\u5bf9\u8c61</p> <ul> <li> <p>large number\uff1a\u5bf9\u4e8e\u5c24\u5176\u7a7a\u95f4\u5c24\u5176\u5de8\u5927\u7684\u503c\uff0c\u4f20\u6307\u9488\u6bd4\u76f4\u63a5\u4f20\u6570\u636e\u672c\u8eab\u9ad8\u6548\u5f97\u591a\u3002\u5728\u6b64\u7406\u89e3\u5373\u53ef\u3002</p> </li> <li> <p>large-object types</p> <ul> <li> <p>blob: binary </p> </li> <li> <p>clob: character</p> </li> </ul> </li> </ul> </li> <li> <p>user-defined</p> <ul> <li>e.g. <code>create type dollar as numeric(10, 2);</code></li> </ul> </li> <li> <p>domain</p> <ul> <li>\u548c type\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u52a0\u4e0a\u7ea6\u675f\u6761\u4ef6</li> </ul> </li> </ul>"},{"location":"Database/#_10","title":"\u6743\u9650","text":"<ul> <li> <p>\u6388\u4e88/\u6536\u56de\u6743\u9650\u7684\u57fa\u672c\u8bed\u6cd5\uff1a</p> <p>\u6743\u9650\uff1a<code>select, insert, update, delete, references, all privileges</code></p> <pre><code>grant &lt;priviledge list or role name&gt; \non &lt;relation name or view name&gt; to &lt;user list&gt;;//\u6388\u4e88\n\nrevoke &lt;priviledge list or role name&gt; \non &lt;relation name or view name&gt; to &lt;user list&gt;;//\u6536\u56de\n</code></pre> </li> <li> <p>\u6743\u9650\u53ef\u4ee5\u6765\u81ea\u591a\u4e2a\u4e0a\u7ea7\u7528\u6237\uff0c\u76f8\u4e92\u53ef\u4ee5\u91cd\u53e0\uff0c\u4f8b\u5982\u6709\u4e24\u8005\u90fd\u4e3a\u7b2c\u4e09\u65b9\u6388\u4e88\u4e86\u8bfb\u53d6\u6743\u9650\uff0c\u6b64\u65f6\u5373\u4f7f\u6709\u4e00\u65b9\u64a4\u56de\u4e86\u6743\u9650\uff0c\u7b2c\u4e09\u65b9\u4ecd\u7136\u53ef\u4ee5\u6b63\u5e38\u8bfb\u53d6\u3002</p> </li> <li> <p>\u6743\u9650\u53ef\u4ee5\u7ea7\u8054\u4e0b\u653e\uff0c\u4f8b\u5982A\u4e3aB\u6388\u4e88\u4e86\u67d0\u4e9b\u6743\u9650\uff0cB\u53ef\u4ee5\u7ee7\u7eed\u5411\u5176\u4ed6\u4eba\u6388\u4e88\u4e0d\u9ad8\u4e8e\u4ed6\u81ea\u5df1\u7684\u6743\u9650\u3002\u5f53A\u64a4\u56de\u5bf9B\u7684\u6743\u9650\u65f6\uff0cB\u4e0b\u653e\u7ed9\u4ed6\u4eba\u7684\u6743\u9650\u4e5f\u4f1a\u540c\u65f6\u88ab\u6536\u56de\u3002</p> </li> <li> <p>\u6743\u9650\u7684\u57fa\u672c\u5355\u4f4d\u662frelation\uff0c\u9700\u8981\u6388\u4e88\u67d0\u4e2a\u6570\u636e\u5e93\u5185\u6240\u6709relation\u7684\u6743\u9650\u65f6\u53ef\u4ee5\u4f7f\u7528 DB_name.*</p> </li> <li> <p>\u591a\u6b21\u6388\u6743\uff0c\u4e00\u6b21\u53ea\u80fd\u6536\u4e00\u4e2a</p> </li> <li> <p>public\u6536\u56de\uff0c\u6240\u6709\u975e\u7279\u6b8a\u6307\u660e\u7684\u4eba\u7684\u6743\u9650\u90fd\u88ab\u6536\u56de</p> </li> <li> <p>\u89c6\u56fe\u4e0a\u7684\u6743\u9650\u6548\u679c\u7c7b\u4f3c\uff0c\u4f46\u662f\u89c6\u56fe\u7684\u6743\u9650\u4e0d\u80fd\u83b7\u5f97\u5bf9\u57fa\u8868\u7684\u6743\u9650</p> </li> <li> <p>role</p> <ul> <li> <p>\u6709\u591a\u4e2a\u540c\u7c7b\u7528\u6237\u9700\u8981\u505a\u7edf\u4e00\u7684\u6743\u9650\u8c03\u6574\u65f6\uff0c\u5217\u51fa\\\u7684\u4f7f\u7528\u65b9\u5f0f\u663e\u7136\u4e0d\u4fbf\uff0c\u6b64\u65f6\u5c31\u9700\u8981role\u3002 <li> <p>role\u662f\u6743\u9650\u7ec4\u6210\u7684\u96c6\u5408\uff0c\u53ef\u4ee5\u50cf\u9762\u5411\u4e00\u4e2a\u7528\u6237\u4e00\u6837\u8d4b\u4e88role\u5404\u79cd\u6743\u9650\uff0c\u7136\u540e\u50cf\u8d4b\u4e88\u5355\u4e2a\u6743\u9650\u4e00\u6837\u5c06role\u8d4b\u4e88\u7528\u6237\u3002\u4fee\u6539\u67d0\u4e2arole\u5bf9\u5e94\u7684\u6743\u9650\u96c6\u5408\u65f6\uff0c\u6240\u6709\u88ab\u8d4b\u4e88\u8fd9\u4e2arole\u8eab\u4efd\u7684\u7528\u6237\u6743\u9650\u90fd\u4f1a\u540c\u65f6\u88ab\u4fee\u6539\u3002</p> <pre><code>create role role_name;\ngrant &lt;priviledge list&gt; on &lt;relation name&gt; to role_name;\ngrant role_name to &lt;user list&gt;;\n</code></pre> </li>"},{"location":"Database/#sql_4","title":"\u7b2c\u4e94\u7ae0 \u9ad8\u7ea7SQL","text":""},{"location":"Database/#sql-injection","title":"SQL Injection","text":"<p>SQL\u7528\u6237\u7aef\u5e38\u5e38\u9700\u8981\u5c06\u7528\u6237\u7684\u8f93\u5165\u62fc\u63a5\u4e3a\u5b8c\u6574\u7684sql\u8bed\u53e5\u3002\u501f\u52a9\u7528\u6237\u7aef\u8f93\u5165\u6846\u76f4\u63a5\u8f93\u5165\u672a\u9884\u671f\u7684sql\u6307\u4ee4\uff0c\u53c8\u7531\u4e8e\u5b57\u7b26\u4e32\u62fc\u63a5\u7684\u7f18\u6545\u8fd9\u6761\u8bed\u53e5\u80fd\u591f\u88ab\u540e\u53f0\u6267\u884c\uff0c\u8fd9\u79f0\u4e3asql\u6ce8\u5165\u3002</p> <p>\u6bd4\u53d8sql\u6ce8\u5165\u7684\u529e\u6cd5\u662f\uff0c\u4e0d\u8981\u5c06\u7528\u6237\u7684\u8f93\u5165\u76f4\u63a5\u4f5c\u4e3a\u6570\u636e\u5e93\u8bed\u53e5\uff0c\u800c\u662f\u5957\u7528\u4e00\u5b9a\u7684\u6a21\u677f\u3002</p>"},{"location":"Database/#stored-procedure","title":"Stored Procedure","text":"<p>\u901a\u8fc7\u7528\u6237\u754c\u9762\u7684\u524d\u540e\u7aef\u6784\u5efa\u3001\u4f20\u9012\u3001\u6267\u884c\u3001\u56de\u4f20sql\u4ee3\u7801\u5e26\u6765\u5927\u91cf\u7684\u5f00\u9500\uff0c\u6240\u4ee5\u73b0\u4ee3sql\u90fd\u652f\u6301Stored Procedure\u3002\u4f60\u53ef\u4ee5\u5c06\u5b83\u7406\u89e3\u4e3a\u4e00\u79cd\u5185\u5efa\u7684\u5c0f\u578b\u7f16\u7a0b\u8bed\u8a00\uff0c\u652f\u6301if-else\u3001for\u3001while\u7b49\u7b80\u5355\u7f16\u7a0b\u903b\u8f91\uff0c\u7528\u4e8e\u6784\u9020\u6267\u884c\u4e00\u4e9bsql\u8bed\u53e5\uff0c\u6700\u7ec8\u8fd4\u56de\u7ed3\u679c\u3002sql\u8fd8\u652f\u6301function\uff0c\u4f5c\u7528\u4e0e\u4e4b\u57fa\u672c\u7c7b\u4f3c\u3002</p> <p>\u56e0\u4e3a\u5b83\u4eec\u662f\u5185\u5efa\u7684\uff0c\u4e14\u5927\u591a\u91c7\u7528\u7c7b\u4f3cC\u8bed\u8a00\u7684\u7f16\u8bd1\u6267\u884c\u65b9\u5f0f\uff0c\u6027\u80fd\u5f80\u5f80\u8fdc\u9ad8\u4e8e\u5728\u7528\u6237\u7aef\u62fc\u63a5\u5b57\u7b26\u4e32\u6784\u5efa\u5e76\u6267\u884csql\u8bed\u53e5\u3002</p> <p>Stored Procedure\u4e0efunction\u4e2d\u8fd8\u53ef\u4ee5\u521b\u5efacursor\uff0c\u4ee5\u5b8c\u6210\u4e00\u4e9b\u590d\u6742\u7684\u6570\u636e\u5e93\u64cd\u4f5c\u3002</p> <p>\u4f8b\u5982\uff1a</p> <pre><code>create procedure\ndept_count_proc (in dept_name varchar(20), out d_count integer)\nbegin\nselect count(*) into d_count\nfrom instructor\nwhere instructor.dept_name = dept_count_proc.dept_name\nend\n\ndeclare d_count integer;\ncall dept_count_proc('physics', d_count)\n</code></pre>"},{"location":"Database/#trigger","title":"Trigger","text":"<p>trigger\u662f\u5728\u6ee1\u8db3\u67d0\u4e9b\u6761\u4ef6\u540e\u81ea\u52a8\u6267\u884c\u7684sql\uff0c\u53ef\u4ee5\u89c6\u4e3a\u5bf9\u6570\u636e\u5e93\u64cd\u4f5c\u7684\u76d1\u89c6\u6216\u8005\u8bf4\u526f\u4f5c\u7528\u3002\u4f46\u662f\u73b0\u4ee3sql\u6570\u636e\u5e93\u6d41\u884c\u7684\u98ce\u683c\u662f\u4e0d\u5199trigger\u3002</p>"},{"location":"Database/#_11","title":"\u7b2c\u516d\u7ae0 \u6570\u636e\u5e93\u8bbe\u8ba1\u8303\u5f0f\u4e00","text":"<p>\u672c\u7ae0\u4e3b\u8981\u4ecb\u7ecdEntity-Relationship Model\u8bbe\u8ba1\u65b9\u5f0f\u3002\u4e0d\u540c\u4e8e\u76f4\u63a5\u5efa\u8868\u7684\u505a\u6cd5\uff0c\u5b9e\u9645\u5f00\u53d1\u4e2d\u6211\u4eec\u66f4\u559c\u6b22\u5148\u7528entity\u548crelationship\u4e24\u7c7b\u6982\u5ff5\u6784\u5efa\u903b\u8f91\u5173\u7cfb\uff0c\u518d\u5efa\u8868\u3002</p> <ul> <li> <p>Entity\u7684\u6bcf\u4e00\u884c\u5e94\u8be5\u662f\u4e00\u4e2a\u5b9e\u4f53\uff0c\u4f8b\u5982\u5b66\u751f\u4fe1\u606f\u8868\uff0c\u6559\u5e08\u4fe1\u606f\u8868\u3002</p> </li> <li> <p>Relation\u7684\u6bcf\u4e00\u884c\u662f\u591a\u4e2a\u5b9e\u4f53\u95f4\u7684\u67d0\u79cd\u5173\u8054\uff0c\u4f8b\u5982\u5bfc\u5e08-\u5b66\u751f\u5173\u7cfb\u8868\u3002</p> </li> </ul>"},{"location":"Database/#design-phases","title":"Design phases","text":"<ul> <li> <p>Initial phase: </p> <ul> <li>\u4e86\u89e3\u7528\u6237\u9700\u6c42\uff0c\u786e\u5b9a\u6570\u636e\u5e93\u7684\u76ee\u6807</li> </ul> </li> <li> <p>Second phase: </p> <ul> <li>\u9009\u62e9\u4e00\u4e2a\u6570\u636e\u6a21\u578b\uff0c\u8bbe\u8ba1\u6570\u636e\u5e93\u7684\u6982\u5ff5\u7ed3\u6784</li> </ul> </li> <li> <p>Final phase: </p> <ul> <li>\u5c06\u6982\u5ff5\u7ed3\u6784\u8f6c\u5316\u4e3a\u7269\u7406\u6570\u636e\u5e93\u6a21\u5f0f\uff0c\u5373\u5efa\u8868</li> </ul> </li> </ul>"},{"location":"Database/#design-alternatives","title":"Design Alternatives","text":"<ul> <li> <p>Redundancy</p> <ul> <li>\u6570\u636e\u5197\u4f59\uff0c\u5373\u540c\u4e00\u6570\u636e\u5728\u591a\u4e2a\u5730\u65b9\u91cd\u590d\u51fa\u73b0\u3002\u5197\u4f59\u6570\u636e\u7684\u5b58\u5728\u8fd8\u4f1a\u5bfc\u81f4\u6570\u636e\u4e0d\u4e00\u81f4\uff0c\u589e\u52a0\u4e86\u6570\u636e\u7684\u4fee\u6539\u96be\u5ea6\u3002</li> </ul> </li> <li> <p>Incompleteness</p> <ul> <li>\u7cfb\u7edf\u4e0d\u5b8c\u6574\uff0c\u5bfc\u81f4\u67d0\u4e9b\u529f\u80fd\u65e0\u6cd5\u5b9e\u73b0\u3002</li> </ul> </li> </ul>"},{"location":"Database/#e-r-diagram","title":"E-R Diagram","text":"<ul> <li> <p>Entity</p> <ul> <li> <p>\u7531\u591a\u4e2a\u5c5e\u6027 Attribute \u6784\u6210\uff0c\u5c5e\u6027\u7684\u53d6\u503c\u8303\u56f4\u662f Domain</p> </li> <li> <p>\u7528\u5b9e\u4f53\u96c6\u7684\u5916\u5ef6 extension \u8868\u793a\u5b9e\u9645\u7684\u5b9e\u4f53\u96c6\u5408</p> </li> </ul> </li> <li> <p>Attribute</p> <ul> <li> <p>\u590d\u5408\uff1a\u7528\u7f29\u8fdb\u8868\u8fbe\u5c42\u7ea7\u5173\u7cfb</p> </li> <li> <p>\u591a\u503c\uff1a\uff08\u540c\u4e00\u4e2a\u5c5e\u6027\u53ef\u80fd\u6709\u591a\u4e2a\u53d6\u503c\uff09\u7528\u5927\u62ec\u53f7\u8868\u793a</p> </li> <li> <p>\u6d3e\u751f\uff1a\uff08\u53ef\u7531\u5176\u4ed6\u5c5e\u6027\u63a8\u5bfc\u51fa\u6765\uff09\u5728\u540e\u65b9\u52a0\u4e0a\u62ec\u53f7\u62bd\u8c61\u4e3a\u51fd\u6570</p> </li> </ul> </li> <li> <p>Entity-Relation</p> <p>\u83f1\u5f62\u8868\u793a\uff0c\u5176\u4e2d\u7684\u6587\u5b57\u662fRelationship\u7684\u540d\u5b57\uff0c\u5b9e\u4f53\u95f4\u7684\u8fd9\u79cd\u5173\u8054\u79f0\u4e3a \u53c2\u4e0e\u8054\u7cfb\u96c6R\uff08participation\uff09</p> <ul> <li> <p>\u5ea6 \uff08Degree\uff09</p> <p>\u53c2\u4e0e\u8054\u7cfb\u96c6\u7684\u5b9e\u4f53\u96c6\u7684\u4e2a\u6570</p> <p>\u4e00\u822c\u4e8c\u5143\u5173\u7cfb\uff08binary\uff09\u4e3a\u4e3b\uff0c\u6709\u65f6\u6709\u4e09\u5143\u5173\u7cfb\uff0c\u518d\u591a\u5143\u4e0d\u5e38\u89c1</p> </li> <li> <p>\u989d\u5916\u5c5e\u6027(Discriptive Attribute)</p> <p>\u7528\u65b9\u6846 + \u865a\u7ebf\u8868\u793a</p> <p></p> </li> <li> <p>Role</p> <p>Role\u662f\u8fde\u7ebf\u6216\u8005\u7bad\u5934\u7684\u6807\u7b7e\u3002</p> <p>\u5173\u7cfb\u5bf9\u5e94\u7684Entities\u5e94\u8be5\u662f\u552f\u4e00\u7684\uff0c\u5f53\u5173\u7cfb\u4e0e\u67d0\u4e2a\u5b9e\u4f53\u6709\u591a\u91cd\u903b\u8f91\u8054\u7cfb (Recursive) \u65f6\u5c31\u9700\u8981\u4e3a\u8868\u8fbe\u903b\u8f91\u8054\u7cfb\u7684\u7ebf\u6216\u7bad\u5934\u52a0\u4e0a\u6807\u7b7e\u4f5c\u4e3a\u533a\u5206\u3002</p> <p></p> </li> <li> <p>Mapping Cardinality Constraints\uff08\u6620\u5c04\u57fa\u6570\u7ea6\u675f\uff09</p> <p>\u7bad\u5934\u8868\u793a\u201c\u4e00\u201d\uff0c\u76f4\u7ebf\u8868\u793a\u201c\u591a\u201d</p> <p>\u591a\u5173\u7cfb\u65f6\u53ea\u5141\u8bb8\u81f3\u591a\u4e00\u4e2a\u7bad\u5934\u907f\u514d\u6b67\u4e49</p> <ul> <li> <p>One-to-One\uff1a\u53cc\u5411\u5355\u76f4\u7ebf\u7bad\u5934</p> </li> <li> <p>One-to-Many\uff1a\u5355\u5411\u5355\u76f4\u7ebf\u7bad\u5934</p> </li> <li> <p>Many-to-One\uff1a\u5355\u5411\u5355\u76f4\u7ebf\u7bad\u5934</p> </li> <li> <p>Many-to-Many\uff1a\u5355\u76f4\u7ebf</p> </li> <li> <p>Participation Constraints</p> <ul> <li> <p>total participation</p> <p>\u6bcf\u4e2a\u5b9e\u4f53\u81f3\u5c11\u53c2\u4e0e\u4e00\u4e2a\u5173\u7cfb</p> <p>\u7528\u53cc\u76f4\u7ebf+\u53cc\u76f4\u7ebf\u6846\u83f1\u5f62\u8868\u793a</p> </li> <li> <p>partial participation</p> <p>\u5355\u76f4\u7ebf</p> </li> <li> <p>More accurate notation</p> <p>\u5728\u5355\u76f4\u7ebf\u4e0a\u4f7f\u7528\u6570\u5b57\u6807\u6ce8 min...max</p> <p></p> </li> </ul> </li> </ul> </li> <li> <p>Primary Key</p> <p></p> </li> <li> <p>Weak Entity Set</p> <p>\u6ca1\u6709\u72ec\u7acb\u4e3b\u952e\u7684Entity Set\u79f0\u4e3aWeak\uff0c\u5b83\u4e00\u822c\u662f\u4e3a\u4e86\u589e\u52a0\u590d\u7528\u6027</p> <ul> <li> <p>\u8981\u6c42\u5b58\u5728\u81f3\u5c11\u4e00\u4e2a\u975eWeak\u7684Identifying Entity Set\uff0c\u901a\u8fc7\u4e00\u4e2a\u5b8c\u5168\u53c2\u4e0e\u7684\u3001\u4e00\u5bf9\u591a\u7684\u5173\u7cfb\uff0c\u6307\u8ba4Weak Entity Set\u4e2d\u7684\u5143\u7d20\uff0c\u8fd9\u4e2a\u5173\u7cfb\u5c31\u79f0\u4e3aIdentifying Relationship\u3002</p> </li> <li> <p>\u5f31\u5b9e\u4f53\u96c6\u7684\u5c5e\u6027\u4e2d\u4e0eIdentifying Relationship\u76f8\u5173\u7684\u5c5e\u6027\u79f0\u4e3aDiscriminator (partial key, \u9700\u8981\u627e\u4e00\u4e2a\u5f3a\u5b9e\u4f53\u96c6\u7684\u952e\u4e00\u540c\u6784\u6210\u4e3b\u952e)</p> <p>\u4f8b\u5982\u4e0b\u56fe\u4e2dsection\u7684\u4e3b\u952e\u4e3a (course_id, sec_id, semester, year) \u3002</p> </li> </ul> <p></p> <p>\uff08\u753bE-R\u56fe\u65f6\uff0c\u865a\u5b9e\u4f53\u7528\u53cc\u7ebf\u77e9\u5f62\uff0cDiscriminator\u7528\u865a\u4e0b\u5212\u7ebf\uff0c\u56e0\u4e3a\u8fd9\u662f\u5b8c\u5168\u53c2\u4e0e\u5173\u7cfb\uff0c\u7528\u53cc\u7ebf\u83f1\u5f62\u6807\u8bb0\u5173\u7cfb\uff0c\u540c\u65f6\u5f31\u5b9e\u4f53\u96c6\u4e00\u4fa7\u5fc5\u987b\u5b8c\u5168\u53c2\u4e0e\uff0c\u6240\u4ee5\u7528\u53cc\u7ebf\u8fde\u63a5\uff09</p> </li> <li> <p>\u91cd\u590d\u5c5e\u6027\u53ef\u4ee5\u901a\u8fc7relation\u6d88\u9664\u5197\u4f59</p> <p></p> </li> </ul> </li> </ul>"},{"location":"Database/#e-r","title":"\u7279\u6b8a\u7684E-R\u56fe","text":"<ul> <li> <p>\u53ef\u4ee5\u7ee7\u627f\uff08Top-Down \u7279\u5316 / Bottom-Up\u6982\u5316\uff09</p> <p></p> <ul> <li> <p>Overlapping: \u53ef\u91cd\u53e0\uff0c\u5373\u4e00\u4e2a\u5b9e\u4f53\u53ef\u4ee5\u540c\u65f6\u5c5e\u4e8e\u591a\u4e2a\u7c7b\u522b</p> <p>\uff08\u65e2\u662fstudent\uff0c\u4e5f\u662femployee\uff09</p> </li> <li> <p>Disjoint\uff1a\u4e0d\u76f8\u4ea4\uff0c\u5373\u4e00\u4e2a\u5b9e\u4f53\u53ea\u80fd\u5c5e\u4e8e\u4e00\u4e2a\u7c7b\u522b</p> <p>\uff08\u53ea\u80fd\u662finstructor\u6216\u8005secretary\u4e00\u79cd\u8eab\u4efd\uff09</p> </li> </ul> <p>\u51cf\u5c11\u4e86\u5197\u4f59\u4fe1\u606f\uff0c\u4f46\u662f\u589e\u52a0\u4e86\u67e5\u8be2\u7684\u590d\u6742\u5ea6\uff08\u9700\u8981\u591a\u8868\u7684\u7b1b\u5361\u5c14\u79ef\uff09</p> </li> <li> <p>\u53ef\u4ee5\u805a\u5408\uff08Aggregation\uff09</p> <ul> <li>\u5c06\u4e00\u4e2a\u90e8\u5206\u7ec4\u5408\u6210\u4e00\u4e2a\u6574\u4f53\uff0c\u51cf\u5c11\u5173\u7cfb</li> </ul> </li> </ul> <p>\u4e24\u8005\u4e00\u822c\u90fd\u662f\u4e3a\u4e86\u51cf\u5c11\u5197\u4f59\uff0c\u4f46\u8fd9\u90fd\u53ea\u662f\u7279\u6b8a\u903b\u8f91\u5173\u7cfb\u7684\u7b80\u5316\u8868\u8fbe\uff0c\u5e76\u4e0d\u5e38\u89c1\uff0c\u5b8c\u5168\u53ef\u4ee5\u7528\u5e38\u89c4\u7684\u56fe\u4ee3\u66ff</p>"},{"location":"Database/#reduction-to-relational-schemas","title":"Reduction to Relational Schemas","text":"<p>\u6839\u636eE-R\u56fe\u5efa\u7acb\u6570\u636e\u5e93\u8868\u7ed3\u6784\uff0c\u4e0b\u9762\u4e3a\u63a8\u8350\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u4f46\u662f\u9014\u5f84\u5e76\u4e0d\u552f\u4e00\u3002</p> <ul> <li> <p>Entity</p> <ul> <li> <p>\u6bcf\u4e2a\u5b9e\u4f53\u81f3\u5c11\u4e00\u5f20\u8868</p> </li> <li> <p>\u590d\u5408\u5c5e\u6027\u6241\u5e73\u5316(\u9009\u62e9\u7ea7\u522b\u6700\u5e95\u5c42\u7684)</p> </li> <li> <p>\u591a\u503c\u5c5e\u6027\u5355\u72ec\u5efa\u8868\uff0c\u5916\u952e\u8fde\u56de\u53bb</p> </li> </ul> </li> <li> <p>Relationship</p> <ul> <li> <p>\u5e26\u989d\u5916\u5c5e\u6027\u7684Relationship\u5355\u72ec\u5efa\u8868</p> </li> <li> <p>Many to Many\u5fc5\u987b\u5355\u72ec\u5efa\u8868</p> </li> <li> <p>One to Many\u5728Many\u4fa7\u52a0\u4e0aOne\u7684\u4e3b\u952e\uff0c\u5916\u952e\u8fde\u56de\u53bb</p> </li> <li> <p>One to One\u4efb\u9009\u4e00\u4fa7\u4f5c\u4e3a\u4e0a\u9762\u60c5\u51b5\u4e2d\u7684Many\uff0c\u540c\u4e0a</p> </li> </ul> </li> </ul>"},{"location":"Database/#_12","title":"\u7b2c\u4e03\u7ae0 \u6570\u636e\u5e93\u8bbe\u8ba1\u8303\u5f0f\u4e8c","text":"<p>\u5982\u679c\u8bf4\u524d\u4e00\u7ae0\u8282\u63cf\u8ff0\u4e86\u5982\u4f55\u5efa\u7acb\u4e00\u4e2a\u8868\uff0c\u90a3\u4e48\u672c\u7ae0\u5c06\u7740\u91cd\u4e8e\u5982\u4f55\u6839\u636e\u51fd\u6570\u4f9d\u8d56\u5224\u65ad\u4e00\u5f20\u8868\u7684\u597d\u574f\uff0c\u4ee5\u53ca\u5982\u4f55\u62c6\u5206\u4e00\u5f20\u8868</p>"},{"location":"Database/#function-dependency","title":"Function Dependency","text":"<p>\u524d\u9762\u8bf4\u5230\u6d3e\u751f\u5c5e\u6027\u53ef\u4ee5\u7406\u89e3\u4e3a\u51fd\u6570\uff0c\u91cd\u70b9\u5728\u4e8e\u4e00\u5bf9\u4e00\u7684\u6620\u5c04\u5173\u7cfb\u3002\u76f8\u540c\u7684A\u4e00\u5b9a\u6709\u76f8\u540c\u7684B\uff0c\u8bb0\u4e3a\\(A\\rightarrow B\\)\uff0cA\u53ef\u4ee5\u662fB\u7684\u4e00\u4e2a\u4e3b\u7801\uff0cB\u53ef\u4ee5\u89c6\u4e3aA\u7684\u6d3e\u751f\u5c5e\u6027\uff0c\u6216\u8005\u8bf4B\u662fA\u7684\u51fd\u6570\u4f9d\u8d56\u3002</p> \\[tuple \\ t_1, t_2 \\in r, t_1[A] = t_2[A] \\Rightarrow t_1[B] = t_2[B]\\] <p>\u51fd\u6570\u4f9d\u8d56\u53ef\u4ee5\u6839\u636e\u96c6\u5408\u5173\u7cfb\u5206\u4e3a\u4e0b\u97623\u7c7b\uff1a</p> <ul> <li> <p>\u5b8c\u5168\u51fd\u6570\u4f9d\u8d56\uff1a A\u7684\u4efb\u4f55\u4e00\u4e2a\u771f\u5b50\u96c6\uff0c\u6216\u8005\u8bf4\u53bb\u6389\u4efb\u4f55\u4e00\u4e2a\u5217\u4e4b\u540e\uff0c\u5bf9B\u4e0d\u6784\u6210\u51fd\u6570\u4f9d\u8d56\uff0c\u5219\u79f0\u5176\u4e3a\u5b8c\u5168\u51fd\u6570\u4f9d\u8d56\uff0c\u53cd\u4e4b\u4e3a\u90e8\u5206\u51fd\u6570\u4f9d\u8d56\u3002</p> </li> <li> <p>\u4f20\u9012\u51fd\u6570\u4f9d\u8d56\uff1a \u663e\u7136\u51fd\u6570\u4f9d\u8d56\u5177\u6709\u4f20\u9012\u6027\u3002\u901a\u8fc7\u4f20\u9012\u95f4\u63a5\u5f97\u5230\u7684\u4f9d\u8d56\u79f0\u4e3a\u4f20\u9012\u4f9d\u8d56\uff0c\u4f8b\u5982closure\u4e2d\\(A\\rightarrow B\\)\u3002</p> </li> <li> <p>Trival\u5e73\u51e1\u51fd\u6570\u4f9d\u8d56\uff1a     $$     In\\ general,\\ A\\rightarrow B\\ is\\ trival\\ if\\ B\\subseteq A.\\     For\\  example,\\ (ID,\\ name)\\rightarrow name.     $$</p> </li> </ul> <p>\u5bf9\u51fd\u6570\u4f9d\u8d56\u7ec4\u6210\u7684\u96c6\u5408F\uff0c\u82e5\u4e00\u4e2arelation\u6ee1\u8db3F+\u4e2d\u7684\u6240\u6709\u4f9d\u8d56\u5173\u7cfb\uff0c\u79f0\u4e3a\uff1a</p> <ul> <li> <p>R(relation schema) holds on F</p> </li> <li> <p>r(relation instance) satisfyies F</p> </li> </ul> <p>\u5bf9R holds on F\uff0c\u53d6R1\u4e3aR\u7684\u4e00\u4e2a\u5b50\u96c6\uff0cF\u4e2d\u5de6\u53f3\u4e24\u4fa7\u7684\u5c5e\u6027\u90fd\u5728R1\u4e2d\u7684\u51fd\u6570\u4f9d\u8d56\u7ec4\u6210\u7684\u96c6\u5408\u79f0\u4e3aF\u5728R1\u4e0a\u7684\u6295\u5f71\u3002</p>"},{"location":"Database/#closure-of-function","title":"Closure of Function","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u7531\u51fd\u6570\u4f9d\u8d56\u7ec4\u6210\u7684\u96c6\u5408\\(F\\)\uff0c\u5b83\u4e0e\u5b83\u7684\u6240\u6709\u63a8\u8bba\u7ec4\u6210\u7684\u96c6\u5408\u79f0\u4e3aClosure of F\uff0c\u8bb0\u4e3a\\(F^+\\)\uff0c\u4f8b\u5982\uff1a $$ F(A\\rightarrow B,\\ B\\rightarrow C)\\ F^+(A\\rightarrow B,\\ B\\rightarrow C,\\ A\\rightarrow C, AB \\rightarrow C ...) $$</p> <p>\u627e\u51fd\u6570\u95ed\u5305\u4e00\u822c\u662fArmstrong's Axioms\u4e09\u6761\u8f6e\u7740\u5957\uff1a(Sound(\u6709\u6548) &amp; Complete(\u5b8c\u5907))</p> <p>\u4e66\u4e0a\u7b97\u6cd5\uff1a\u5148\u7528\u81ea\u53cd\u5f8b\u548c\u589e\u8865\u5f8b\u6dfb\u52a0\u65b0\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u518d\u7528\u4f20\u9012\u5f8b\u8fde\u63a5</p> <p></p> <p></p>"},{"location":"Database/#closure-of-attribute","title":"Closure of Attribute","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u7531\u5c5e\u6027\u7ec4\u6210\u7684\u96c6\u5408\\(A\\)\uff0c\u5b83\u7531\u51fd\u6570\u96c6\\(F\\)\u4e2d\u7684\u4f9d\u8d56\u5173\u7cfb\u80fd\u591f\u5173\u8054\u7684\u5c5e\u6027\u7ec4\u6210\u7684\u96c6\u5408\u79f0\u4e3aClosure of A under F\uff0c\u8bb0\u4e3a\\(A^+\\)</p> <p>\u7b97\u6cd5\uff1a\u6bcf\u6b21\u679a\u4e3e\u6240\u6709\u4f9d\u8d56\u5173\u7cfb\uff0c\u82e5\u6ee1\u8db3\u5de6\u4fa7\u6761\u4ef6\u5219\u5c06\u53f3\u4fa7\u5c5e\u6027\u52a0\u5165\u95ed\u5305\uff0c\u76f4\u5230\u95ed\u5305\u4e0d\u518d\u589e\u5927</p> <p>\u5c5e\u6027\u7684\u95ed\u5305\u7684\u4f5c\u7528\u6709\uff1a</p> <ul> <li> <p>\u9a8c\u8bc1\u4e00\u7ec4\u5c5e\u6027\u662f\u5426\u662fsuperkey\uff08\u5b83\u7684\u95ed\u5305\u662f\u5426\u5305\u542b\u6240\u6709\u5c5e\u6027\uff09</p> </li> <li> <p>\u9a8c\u8bc1\u4e00\u7ec4\u5c5e\u6027\u662f\u5426\u662fcandidate key\uff08\u5b83\u7684\u771f\u5b50\u96c6\u7684\u95ed\u5305\u662f\u5426\u5305\u542b\u6240\u6709\u5c5e\u6027\uff09</p> </li> <li> <p>\u9a8c\u8bc1\u51fd\u6570\u4f9d\u8d56\u662f\u5426\u6210\u7acb\uff08\u4f9d\u8d56\u5c5e\u6027\u662f\u5426\u5728\u88ab\u4f9d\u8d56\u5c5e\u6027\u7684\u95ed\u5305\u4e2d\uff09</p> </li> <li> <p>\u627e\u51fd\u6570\u7684\u95ed\u5305\uff08\u904d\u5386\u5c5e\u6027\u7684\u5b50\u96c6\uff0c\u6328\u4e2a\u627e\u95ed\u5305\uff0c\u95ed\u5305\u4e2d\u591a\u51fa\u6765\u7684\u5c5e\u6027\u5c31\u5bf9\u539f\u5c5e\u6027\u6784\u6210\u4f9d\u8d56\uff09</p> </li> </ul>"},{"location":"Database/#canonical-cover","title":"Canonical Cover","text":"<ul> <li> <p>Redundancy</p> <ul> <li> <p>\u5728\u4e00\u4e2a\u51fd\u6570\u4f9d\u8d56\u96c6\u4e2d\uff0c\u5982\u679c\u67d0\u4e00\u4e2a\u4f9d\u8d56\u5173\u7cfb\u53ef\u4ee5\u7531\u5176\u4ed6\u4f9d\u8d56\u63a8\u5f97\uff0c\u90a3\u4e48\u4ed6\u5c31\u662f\u5197\u4f59\u7684\u3002</p> </li> <li> <p>\u5728\u5355\u4e2a\u4f9d\u8d56\u5173\u7cfb\u4e2d\uff0c\u5982\u679c\u53bb\u6389\u4e00\u4e2a\u5c5e\u6027\uff08\u5de6\u53f3\u4e24\u4fa7\u81f3\u5c11\u8981\u7559\u4e0b\u4e00\u4e2a\uff09\uff0c\u4ecd\u7136\u53ef\u4ee5\u7531\u5176\u5173\u7cfb\u96c6\u4e2d\u7684\u5176\u4ed6\u4f9d\u8d56\u63a8\u5f97\u539f\u5f0f\uff0c\u90a3\u4e48\u5c31\u79f0\u8fd9\u4e00\u4e2a\u5c5e\u6027\u662f\u5197\u4f59\u7684\u3002\u5197\u4f59\u7684\u5c5e\u6027\u4e5f\u53ef\u4ee5\u7528extraneous\u5f62\u5bb9\uff0c\u76f4\u8bd1\u4e3a\u591a\u4f59\u7684\u3002</p> </li> </ul> <p>\u9700\u8981\u6ce8\u610f\u8fd9\u91cc\u903b\u8f91\u8574\u542b \u201c\\(\\implies\\)\u201d \u7684\u65b9\u5411\u59cb\u7ec8\u4e3a\u5f31\\(\\implies\\)\u5f3a\uff0c\u5de6\u4fa7\u51cf\u5c11\u52a0\u5f3a\uff0c\u53f3\u4fa7\u51cf\u5c11\u524a\u5f31</p> <p>\u5bf9\u5e94\u7684\u68c0\u67e5\u5c31\u662f\u5220\u9664\u6389\u5047\u8bbe\u7684\u65e0\u5173\u5c5e\u6027\u540e\uff0c\u80fd\u5426\u63a8\u51fa\u539f\u6765\u7684\u51fd\u6570\u4f9d\u8d56</p> <p></p> <p></p> </li> <li> <p>\u6b63\u5219\u8986\u76d6</p> <p>\u8bb0\u4e3a\\(F_c\\)\uff0c\u6307\u7ed9\u5b9a\u4e00\u7ec4\u51fd\u6570\u4f9d\u8d56F\uff0c\u53bb\u9664\u6240\u6709\u5197\u4f59\u7684\u51fd\u6570\u4f9d\u8d56\u4e0e\u5c5e\u6027\u540e\u5269\u4f59\u7684\u90e8\u5206\uff0c\u76f8\u5f53\u4e8e\u51fd\u6570\u4f9d\u8d56F\u7684\u5316\u7b80\u96c6\u5408</p> <ul> <li> <p>\u4e0d\u542b\u5197\u4f59\u51fd\u6570\u4f9d\u8d56</p> </li> <li> <p>\u4e0e\u539f\u51fd\u6570\u4f9d\u8d56\u96c6F\u7b49\u4ef7\uff0c\u5373\\(F^+ \\Leftrightarrow F_c^+\\)</p> </li> <li> <p>\u51fd\u6570\u4f9d\u8d56\u7684\u5de6\u4fa7\u5c5e\u6027\u4e0d\u91cd\u590d</p> </li> </ul> <p>\u6c42\u6700\u5c0f\u51fd\u6570\u4f9d\u8d56\u96c6\u7684\u6b65\u9aa4\uff08\u6b63\u5219\u8986\u76d6\u53ef\u80fd\u4e0d\u552f\u4e00\uff09\uff1a</p> <p></p> </li> </ul>"},{"location":"Database/#lossless-join-decomposition","title":"Lossless(-join) Decomposition","text":"<p>\u5047\u8bbe\u8868R\u88ab\u62c6\u5206\u4e3a\u82e5\u5e72\u4e2a\u8868R1\u3001R2\u2026\u2026Rn\uff0c\u5f53\u4e14\u4ec5\u5f53R1 nature join R2\u2026\u2026 nature join Rn\u7b49\u4e8eR\u65f6\uff0c\u79f0\u8fd9\u4e2a\u8fd9\u4e2a\u62c6\u5206\u64cd\u4f5c\u662f\u65e0\u635f\u7684\u3002</p> <ul> <li> <p>\u5f53\u5206\u89e3\u4e3a\u4e24\u4e2a\u8868\u65f6\uff0c\u8bc1\u660e\u65e0\u635f\u62c6\u5206\u5e38\u7528\u7684\u4e00\u4e2a\u5145\u5206\u975e\u5fc5\u8981\u6761\u4ef6\u662f\uff1a</p> <p>\u4e24\u5f20\u62c6\u5f00\u7684\u8868\u53d6\u4ea4\u96c6\uff0c\u4ea4\u96c6\u662f\u81f3\u5c11\u4e00\u5f20\u8868\u7684superkey\uff0c\u6216\u8005\u8bf4\u53ef\u4ee5\u901a\u8fc7F+\u4e2d\u7684\u51fd\u6570\u4f9d\u8d56\u63a8\u5f97\u53d6\u4ea4\u96c6\u4e4b\u524d\u7684\u8868</p> \\[R1\\cap R2 \\rightarrow R1\\ or\\ R2\\] </li> <li> <p>\u5f53\u5206\u89e3\u4e3a\u8d85\u8fc7\u4e24\u4e2a\u8868\u65f6\uff0c\u4f7f\u7528\u5224\u5b9a\u8868\u6cd5\uff1ahttps://blog.csdn.net/weixin_42492218/article/details/106218720</p> </li> </ul>"},{"location":"Database/#dependancy-presevation","title":"Dependancy Presevation","text":"<p>\u5728\u6570\u636e\u5e93\u66f4\u65b0\u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u4f9d\u8d56\u5173\u7cfb\u4e0d\u4f1a\u88ab\u7834\u574f\uff0c\u5373\u4f9d\u8d56\u4fdd\u6301</p> <p>\u5047\u8bbe\u8868R\u88ab\u62c6\u5206\u4e3a\u82e5\u5e72\u4e2a\u8868R1\u3001R2\u2026\u2026Rn\uff0c\u51fd\u6570\u4f9d\u8d56\u96c6F\u4e2d\u5de6\u53f3\u4e24\u4fa7\u7684\u5c5e\u6027\u90fd\u5728R1\u3001R2\u2026\u2026\u4e2d\u7684\u5b50\u96c6\u4e3aF1\u3001F2\u2026\u2026\uff0c\u79f0\u4e3aF\u5728R1\u3001R2\u2026\u2026\u4e0a\u7684\u6295\u5f71(\u4e66\u4e2d\u79f0\u4e3arestriction)\u3002</p> <p>\u5f53\\(F^+=F_1^+\\cup F_2^+\\cup...\\)\u65f6\u79f0\u8fd9\u4e2a\u62c6\u5206\u6ee1\u8db3\u4f9d\u8d56\u4fdd\u6301(\u6ce8\u610f\u8fd9\u4ec5\u4ec5\u662f\u4e2a\u5145\u5206\u6761\u4ef6)</p> <p>\u540c\u6837\u7684\uff0c\u7531\u4e8e\u51fd\u6570\u95ed\u5305\u7684\u8ba1\u7b97\u4ee3\u4ef7\u8fc7\u9ad8\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u5c5e\u6027\u95ed\u5305\u6765\u4ee3\u66ff\u3002\u76f8\u5f53\u4e8e\u6bcf\u6b21\u8ba1\u7b97\u67d0\u6761\u4f9d\u8d56\u9650\u5b9a\u5728 \\(F_i\\) \u4e0a\u7684\u5c5e\u6027\u95ed\u5305\uff0c\u518d\u5408\u5e76\u8d77\u6765\uff0c\u68c0\u67e5\u662f\u5426\u5c06\u8fd9\u6761\u4f9d\u8d56\u4fdd\u6301 </p> <p></p> <p>\u7b2c\u4e09\u8303\u5f0f\u662f\u6ee1\u8db3\u4f9d\u8d56\u4fdd\u6301\u7684\u6700\u9ad8\u8303\u5f0f, BC\u8303\u5f0f\u4e0d\u80fd\u4fdd\u8bc1\u4f9d\u8d56\u4fdd\u6301</p>"},{"location":"Database/#_13","title":"\u7b2c\u4e09\u8303\u5f0f","text":""},{"location":"Database/#_14","title":"\u4e09\u5927\u8303\u5f0f","text":"<ul> <li>\u7b2c\u4e00\u8303\u5f0f</li> </ul> <p>\u8981\u6c42\u6bcf\u4e00\u4e2aattribue\u7684domain\u90fd\u662fatomic\u7684\uff0c\u4e0d\u80fd\u7ee7\u7eed\u5206\u5272\uff08\u5982CS-101\u5373\u53ef\u7ee7\u7eed\u5206\u5272\u6210\u8bfe\u7a0b\u79cd\u7c7b\u548c\u6807\u53f7\uff0c\u7ed9\u66f4\u65b0\u5e26\u6765\u9ebb\u70e6\uff09\uff0c\u540c\u65f6\u6bcf\u4e00\u4e2arelation\u90fd\u5e94\u8be5\u6709primary key\u3002</p> <p>\u8fd9\u662f\u6240\u6709\u5173\u7cfb\u578b\u6570\u636e\u5e93\u6700\u57fa\u7840\u7684\u8303\u5f0f\u8981\u6c42\u3002</p> <ul> <li>\u7b2c\u4e8c\u8303\u5f0f\uff08\u4e0d\u91cd\u8981\uff09</li> </ul> <p>\u5728\u7b2c\u4e00\u8303\u5f0f\u7684\u57fa\u7840\u4e0a\uff0c\u8981\u6c42\u975e\u4e3b\u5c5e\u6027\u5bf9\u6240\u6709candidate key\u4e0d\u80fd\u6709\u90e8\u5206\u4f9d\u8d56\u3002\u4f8b\u5982\u4e0b\u9762\u8fd9\u4e2a\u5173\u7cfb\uff1a</p> <p></p> <p>\uff08\u5b66\u53f7\uff0c\u8bfe\u540d\uff09\u662f\u4e00\u4e2acandidate key\uff0c\u4f46\u662f\u59d3\u540d\u3001\u7cfb\u540d\u90fd\u662f\u5bf9\u5b66\u53f7\u7684\u51fd\u6570\u4f9d\u8d56\uff0c\u5373\u5bf9\u5019\u9009\u952e\u7684\u90e8\u5206\u4f9d\u8d56\uff0c\u6240\u4ee5\u4e0a\u9762\u8fd9\u4e2a\u6570\u636e\u5e93\u4e0d\u6ee1\u8db3\u7b2c\u4e8c\u8303\u5f0f\uff0c\u4f46\u662f\u6ee1\u8db3\u7b2c\u4e00\u8303\u5f0f\u3002</p> <ul> <li>\u7b2c\u4e09\u8303\u5f0f</li> </ul> <p>\u5728\u7b2c\u4e8c\u8303\u5f0f\u7684\u57fa\u7840\u4e0a\uff0c\u8981\u6c42\u975e\u4e3b\u5c5e\u6027\u5bf9\u6240\u6709\u5019\u9009\u952e\u4e0d\u80fd\u6709\u4f20\u9012\u4f9d\u8d56\u3002\u4f8b\u5982\u4e0b\u9762\u8fd9\u4e2a\u5173\u7cfb\uff1a</p> <p></p> <p>\u5b66\u53f7-&gt;\u7cfb\u540d-&gt;\u7cfb\u4e3b\u4efb\u662f\u4e00\u4e2a\u4f20\u9012\u4f9d\u8d56\u5173\u7cfb\uff0c\u6240\u4ee5\u4e0a\u9762\u8fd9\u4e2a\u6570\u636e\u5e93\u4e0d\u6ee1\u8db3\u7b2c\u4e09\u8303\u5f0f\u4f46\u662f\u6ee1\u8db3\u7b2c\u4e8c\u8303\u5f0f\u3002</p>"},{"location":"Database/#_15","title":"\u5b9a\u4e49\uff1a","text":""},{"location":"Database/#3nf","title":"3NF \u68c0\u67e5","text":"<p>\u53ea\u9700\u8981\u6839\u636e\u5b9a\u4e49\uff0c\u5229\u7528\u5c5e\u6027\u95ed\u5305\u68c0\u67e5 F \u4e2d\u7684\u51fd\u6570\u4f9d\u8d56\u5173\u7cfb</p>"},{"location":"Database/#3nf_1","title":"\u5206\u89e3\u4e3a3NF","text":"<p>Lossless decomposition &amp; Dependence preservation</p> <p>3NF synthesis algorithm</p> <p></p>"},{"location":"Database/#bcnfboyce-codd-normal-form","title":"BCNF(Boyce-Codd Normal Form)","text":"<p>\u5728\u7b2c\u4e09\u8303\u5f0f\u7684\u57fa\u7840\u4e0a\uff0c\u8981\u6c42\u4e3b\u5c5e\u6027\u5bf9\u6240\u6709\u5019\u9009\u952e\u4e0d\u80fd\u6709\u90e8\u5206\u4f9d\u8d56\uff0c\u6216\u8005\u901a\u4fd7\u5730\u8bf4\uff0c\u5bf9F+\u4e2d\u7684\u4efb\u610f\u4e00\u7ec4\u4f9d\u8d56\u5173\u7cfb\\(X\\rightarrow Y\\)\uff0cX\u4e00\u5b9a\u662fcandidate key\u4e4b\u4e00\u3002</p> <p>\u5bf9\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff1a</p> <ul> <li> <p>\u5173\u7cfb\u6a21\u5f0f\uff1a\u4ed3\u5e93\uff08\u4ed3\u5e93\u540d\uff0c\u7ba1\u7406\u5458\uff0c\u7269\u54c1\u540d\uff0c\u6570\u91cf\uff09</p> </li> <li> <p>\u5df2\u77e5\u51fd\u6570\u4f9d\u8d56\uff1a</p> <ul> <li> <p>\u4ed3\u5e93\u540d-&gt;\u7ba1\u7406\u5458</p> </li> <li> <p>\u7ba1\u7406\u5458-&gt;\u4ed3\u5e93\u540d \uff08\u4e00\u4e2a\u4ed3\u5e93\u53ea\u6709\u4e00\u540d\u7ba1\u7406\u5458\uff0c\u4e00\u540d\u7ba1\u7406\u5458\u53ea\u80fd\u8d1f\u8d23\u4e00\u4e2a\u4ed3\u5e93\uff09</p> </li> <li> <p>\uff08\u4ed3\u5e93\u540d\uff0c\u7269\u54c1\u540d\uff09-&gt;\u6570\u91cf</p> </li> <li> <p>\uff08\u7ba1\u7406\u5458\uff0c\u7269\u54c1\u540d\uff09-&gt;\u6570\u91cf</p> </li> </ul> </li> <li> <p>candidate key\u6709\uff1a</p> <ul> <li> <p>\uff08\u4ed3\u5e93\u540d\uff0c\u7269\u54c1\u540d\uff09</p> </li> <li> <p>\uff08\u7ba1\u7406\u5458\uff0c\u7269\u54c1\u540d\uff09</p> </li> </ul> </li> <li> <p>\u6240\u4ee5\u4e3b\u5c5e\u6027\u6709\uff1a\u4ed3\u5e93\u540d\uff0c\u7269\u54c1\u540d\uff0c\u7ba1\u7406\u5458</p> </li> </ul> <p>\u8fd9\u4e2a\u5173\u7cfb\u6ee1\u8db33NF\uff0c\u4f46\u662f\u6ce8\u610f\u5230\u5b58\u5728 \u4ed3\u5e93\u540d-&gt;\u7ba1\u7406\u5458 \u4f9d\u8d56\uff0c\u8fd9\u662f\u4e3b\u5c5e\u6027\u5bf9\u5019\u9009\u952e\u7684\u90e8\u5206\u4f9d\u8d56\uff0c\u6216\u8005\u8bf4\u4ed3\u5e93\u540d\uff08X\uff09\u4e0d\u662fcandidate key\uff0c\u6240\u4ee5\u8fd9\u4e2a\u4f8b\u5b50\u4e0d\u6ee1\u8db3BCNF\u3002\u6ee1\u8db3BCNF\u7684\u5206\u89e3\u662f\uff1a</p> <ul> <li> <p>\u7ba1\u7406\uff08\u4ed3\u5e93\u540d\uff0c \u7ba1\u7406\u5458\uff09</p> </li> <li> <p>\u50a8\u5b58\uff08\u4ed3\u5e93\u540d\uff0c\u7269\u54c1\u540d\uff0c\u6570\u91cf\uff09</p> </li> </ul>"},{"location":"Database/#bcnf","title":"\u68c0\u67e5BCNF","text":"<ul> <li> <p>\u5bf9\u4e8e\u4e00\u4e2a\u51fd\u6570\u4f9d\u8d56\u96c6F\u7684\u68c0\u67e5\uff1a</p> <p>\u68c0\u67e5 F\uff08\u4e0d\u9700\u8981F+\uff09\u5185\u6240\u6709\u975e\u5e73\u51e1\u7684\u51fd\u6570\u4f9d\u8d56\uff0c\u8ba1\u7b97\u5de6\u4fa7\u5c5e\u6027\u7684\u95ed\u5305\uff0c\u5982\u679c\u95ed\u5305\u5305\u542b\u6240\u6709\u5c5e\u6027\uff0c\u5c31\u8bf4\u660e\u8fd9\u4e2a\u4f9d\u8d56\u6ee1\u8db3BCNF</p> </li> <li> <p>\u5bf9\u4e8e\u5206\u89e3\u540e\u7684\u5173\u7cfb\u7684\u68c0\u67e5\uff1a</p> <p>\u6b64\u65f6\u4e0a\u4e00\u79cd\u60c5\u51b5\u7684\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u5fc5\u987b\u68c0\u67e5 F+ \u4e2d\u6240\u6709\u7684\u975e\u5e73\u51e1\u7684\u51fd\u6570\u4f9d\u8d56</p> </li> <li> <p>\u53e6\u4e00\u79cd\u901a\u7528\u65b9\u6cd5\uff1a</p> <p>\u5bf9\u4e8e\u67d0\u4e2a\u5206\u89e3\u540e\u7684\u5173\u7cfb \\(R_i\\) \u7684\u6bcf\u4e2a\u5b50\u96c6 \\(\\alpha\\)\uff0c\u786e\u4fdd \\(\\alpha ^+\\) \u8981\u4e48\u5305\u542b \\(R_i\\) \u7684\u6240\u6709\u5c5e\u6027\uff0c\u8981\u4e48\u4e0d\u5305\u542b \\(R_i - \\alpha\\) \u7684\u4efb\u4f55\u5c5e\u6027</p> <p>\u5426\u5219\uff0c\u51fd\u6570\u4f9d\u8d56 \\(\\alpha \\rightarrow (\\alpha^+ - \\alpha) \\cap R_i\\) \u8fdd\u53cd\u4e86BCNF</p> </li> </ul>"},{"location":"Database/#bcnf_1","title":"\u5206\u89e3\u4e3aBCNF","text":"<p>Lossless decomposition but may not dependence preservation</p> <p>\u672c\u8d28\u4e0a\uff0c\u5c31\u662f\u5c06\u4e00\u4e2a\u4e0d\u6ee1\u8db3BCNF\u7684\u5173\u7cfb\u4ece\u8868\u4e2d\u62c6\u51fa\u53bb\uff0c\u5355\u72ec\u5efa\u8868</p> <p>\u5176\u4e2d \\(\\alpha \\cap \\beta = \\emptyset\\) \u7684\u6761\u4ef6\u5f88\u91cd\u8981\uff0c\u5426\u5219 \\(R_i - \\beta\\) \u4f1a\u5c06 \\(\\alpha \\cap \\beta\\) \u90e8\u5206\u7684\u5c5e\u6027\u62c6\u51fa\u53bb\uff0c\u7834\u574f\u4e86 \\(\\alpha \\rightarrow \\beta\\) \u7684\u51fd\u6570\u4f9d\u8d56</p> <p></p>"},{"location":"Database/#4nf","title":"\u591a\u503c\u4f9d\u8d56 &amp; 4NF","text":""},{"location":"Database/#_16","title":"\u591a\u503c\u4f9d\u8d56","text":"<p>\\(\\alpha \\rightarrow \\rightarrow \\beta\\) \u8868\u660e \\(\\alpha\\) \u7684\u6bcf\u4e2a\u503c\u90fd\u5bf9\u5e94\u4e8e \\(\\beta\\) \u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u503c\uff0c\u53e6\u4e00\u79cd\u8bf4\u6cd5\u662f \\(\\alpha\\) \u4e0e \\(\\beta\\) \u4e4b\u95f4\u7684\u8054\u7cfb\u662f\u4e00\u5bf9\u591a\u4e14\u72ec\u7acb\u4e8e\u5176\u4ed6\u5c5e\u6027\u7684\u3002</p> <p>\uff08\u56e0\u6b64\u51fd\u6570\u4f9d\u8d56\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u591a\u503c\u4f9d\u8d56\uff0c\u591a\u503c\u4f9d\u8d56\u7684\u5904\u7406\u65b9\u6cd5\u548c\u51fd\u6570\u4f9d\u8d56\u4e5f\u57fa\u672c\u4e00\u81f4\uff09</p> <p>\u82e5\u5173\u7cfbr\u4e0d\u6ee1\u8db3\u7ed9\u5b9a\u7684\u591a\u503c\u4f9d\u8d56\uff0c\u53ef\u4ee5\u901a\u8fc7\u5411r\u4e2d\u589e\u52a0\u5143\u7ec4\u6765\u5f97\u5230\u4e00\u4e2a\u6ee1\u8db3\u591a\u503c\u4f9d\u8d56\u7684\u5173\u7cfb</p> <p>\u51fd\u6570\u4f9d\u8d56&amp;\u591a\u503c\u4f9d\u8d56\u7684\u95ed\u5305 D+\uff1a</p> <ul> <li> <p>\\(\\alpha \\rightarrow \\beta \\implies \\alpha \\rightarrow \\rightarrow \\beta\\)</p> </li> <li> <p>\\(\\alpha \\rightarrow \\rightarrow \\beta \\implies \\alpha \\rightarrow \\rightarrow R - \\alpha - \\beta\\)</p> </li> </ul>"},{"location":"Database/#4nf_1","title":"4NF","text":"<ul> <li> <p>\u5b9a\u4e49     4NF \u4e00\u5b9a\u662f BCNF\uff0c\u4f46\u662f\u53cd\u4e4b\u4e0d\u4e00\u5b9a\u6210\u7acb</p> <p></p> </li> <li> <p>\u68c0\u67e5</p> <p></p> </li> <li> <p>\u5206\u89e3</p> <p></p> </li> </ul>"},{"location":"Database/#more","title":"More","text":""},{"location":"Database/#more-nfs","title":"More NFs","text":"<ul> <li> <p>5NF(Project-Join Normal Form)</p> </li> <li> <p>DKNF(Domain-Key Normal Form) </p> </li> </ul>"},{"location":"Database/#temporal-data","title":"Temporal data","text":"<ul> <li> <p>Temporal functional dependency: \u5728\u4efb\u610f\u65f6\u95f4\u5feb\u7167\u4e0a\u6ee1\u8db3\u7684\u51fd\u6570\u4f9d\u8d56</p> </li> <li> <p>\u5b9e\u9645\u64cd\u4f5c\uff1a\u7ed9\u6570\u636e\u52a0\u4e0astart time\u548cend time\uff0c\u7136\u540e\u7528\u65f6\u95f4\u6233\u6765\u67e5\u8be2</p> </li> </ul>"},{"location":"Database/#how-to-find-candidate-key","title":"How to Find Candidate Key","text":"<ul> <li> <p>Primary Attribute</p> <p>\u51fa\u73b0\u5728\u81f3\u5c11\u4e00\u4e2acandidate key\u4e2d\u7684\u5c5e\u6027\u79f0\u4e3a\u4e3b\u5c5e\u6027\u3002\u53cd\u4e4b\u4e3a\u975e\u4e3b\u5c5e\u6027\u3002</p> </li> <li> <p>\u7b2c\u4e00\u6b65-\u5148\u627e\u4e3b\u5c5e\u6027</p> <p>\u5148\u627e\u51fa\\(F_c\\)\u6216\\(F_m\\)\uff0c\u7136\u540e\u5c06\u6240\u6709\u5c5e\u6027\u5206\u4e3a\u4ee5\u4e0b\u56db\u7c7b\uff1a</p> <ul> <li> <p>L\u7c7b\uff1a\u4ec5\u5b58\u5728\u4e8e\u4f9d\u8d56\u5de6\u4fa7\uff0c\u4e00\u5b9a\u662f\u4e3b\u5c5e\u6027</p> </li> <li> <p>R\u7c7b\uff1a\u4ec5\u5b58\u5728\u4e8e\u4f9d\u8d56\u53f3\u4fa7\uff0c\u4e00\u5b9a\u4e0d\u662f\u4e3b\u5c5e\u6027</p> </li> <li> <p>N\u7c7b\uff1a\u6ca1\u6709\u5728\u4efb\u4f55\u51fd\u6570\u4f9d\u8d56\u4e2d\u51fa\u73b0\u8fc7\uff0c\u4e00\u5b9a\u662f\u4e3b\u5c5e\u6027\uff0c\u4e14\u5b58\u5728\u4e8e\u4efb\u4f55\u4e00\u4e2a\u5019\u9009\u7801\u4e2d</p> </li> <li> <p>LR\u7c7b\uff1a\u540c\u65f6\u51fa\u73b0\u5728\u4e86\u4f9d\u8d56\u4e24\u4fa7\uff0c\u5f85\u5b9a</p> </li> </ul> </li> <li> <p>\u7b2c\u4e8c\u6b65-\u627eCandidate Key</p> <p>\u8fd9\u91cc\u662f\u6839\u636e\\(F_c\\ or\\ F_m\\)\u5206\u7c7b\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06L\u7c7b\u548cN\u7c7b\u5c5e\u6027\u5408\u5e76\uff0c\u68c0\u67e5\u5176\u662f\u4e0d\u662fcandidate key\u3002\u5982\u679c\u662f\u6839\u636e\u539f\u59cb\u5173\u7cfb\u96c6F\u5206\u7c7b\uff0c\u90a3\u4e48\u8fd8\u9700\u8981\u9010\u4e00\u5bf9N\u7c7b\u5c5e\u6027\u4e0eL\u7c7b\u7684\u6240\u6709\u5b50\u96c6\u7684\u5e76\u96c6\u68c0\u67e5\u662f\u4e0d\u662fcandidate key\uff0c\u5e76\u4e0d\u5efa\u8bae\u8fd9\u4e48\u505a\u3002</p> <ul> <li> <p>\u5982\u679c\u4ec5\u9760L\u7c7b\u548cN\u7c7b\u5c31\u53ef\u4ee5\u786e\u5b9acandidate key\uff0c\u5219\u4e0d\u9700\u8981\u8003\u8651LR\u7c7b\u3002</p> </li> <li> <p>\u5982\u679cL\u7c7b\u4e0eN\u7c7b\u7684\u5e76\u96c6\u4e0d\u662fcandidate key\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5e76\u96c6\u4e0eLR\u7c7b\u7684\u6240\u6709\u5b50\u96c6\u9010\u4e00\u53d6\u5e76\u96c6\u68c0\u67e5\u662f\u4e0d\u662fcandidate key\u3002\u786e\u5b9a\u4e00\u4e2acandidate key\u540e\uff0c\u771f\u5305\u542b\u5b83\u7684\u6240\u6709\u96c6\u5408\u90fd\u4e0d\u662fcandidate key\uff0c\u53ef\u4ee5\u51cf\u5c11\u4e00\u4e9b\u8fd0\u7b97\u91cf\u3002</p> </li> </ul> </li> </ul>"},{"location":"Database/#design-guidelines","title":"Design Guidelines","text":"<ul> <li> <p>Nice E-R design -&gt; Good relational schema -&gt; Less normalization</p> </li> <li> <p>Duplicated name &amp; relation if properties have some relation</p> </li> <li> <p>Allowing some redundancy for performance(denormalization &amp; materialized view)</p> </li> </ul>"},{"location":"Database/#_17","title":"\u5341\u4e8c\u7ae0 \u7269\u7406\u50a8\u5b58\u4ecb\u8d28","text":""},{"location":"Database/#_18","title":"\u50a8\u5b58\u7684\u8bc4\u4ef7","text":""},{"location":"Database/#_19","title":"\u50a8\u5b58\u7684\u5206\u7c7b","text":"<ul> <li> <p>\u50a8\u5b58\u53ef\u4ee5\u6839\u636e\u6613\u5931\u6027\u5206\u4e3a\uff1a</p> <ul> <li> <p>volatile \u6389\u7535\u5931\u53bb\u6570\u636e\uff0c\u4e00\u822c\u5bb9\u91cf\u5c0f\u901f\u5ea6\u5feb</p> </li> <li> <p>non-volatile \u6389\u7535\u4e0d\u4f1a\u5931\u53bb\u6570\u636e\uff0c\u76f8\u5bf9\u5bb9\u91cf\u5927\u901f\u5ea6\u6162</p> </li> </ul> </li> <li> <p>\u4e5f\u53ef\u4ee5\u6839\u636e\u5c42\u7ea7\u5206\u7c7b\uff1a</p> <ul> <li> <p>primary storage \u6700\u5feb\u3001\u4e00\u822c\u7528volatile\u4ecb\u8d28\u5b9e\u73b0</p> </li> <li> <p>secondary storage \u8f83\u5feb\u3001\u975e\u6613\u5931</p> <ul> <li>\u4e5f\u53ebon-line storage\uff0c\u5e38\u89c1\u7684flash memory\u3001magnetic disks\u90fd\u5c5e\u4e8e\u6b64\u7c7b</li> </ul> </li> <li> <p>teriay storage \u6162\u3001\u975e\u6613\u5931</p> <ul> <li>\u4e5f\u53eboff-line storage\uff0cmagnetic tape\u3001optical storage\u5c5e\u4e8e\u6b64\u7c7b</li> </ul> </li> </ul> </li> <li> <p>\u4e5f\u53ef\u4ee5\u6839\u636e\u539f\u7406\u5206\u7c7b\uff1a</p> <p></p> </li> <li> <p>Measures</p> <ul> <li> <p>Disk block: logical unit for storage allocation and retrieval</p> <ul> <li> <p>Too small : more transfer</p> </li> <li> <p>Too large : space wasted </p> </li> </ul> </li> <li> <p>Sequential access pattern: seek required only for first block</p> </li> <li> <p>Random access pattern: each access require a seek</p> </li> <li> <p>I/O opeartions per second(IOPS)    </p> </li> </ul> </li> </ul>"},{"location":"Database/#_20","title":"\u78c1\u76d8\u6027\u80fd\u8bc4\u4ef7","text":"<p>\u78c1\u76d8\u6027\u80fd\u4ece\u4ee5\u4e0b\u7ef4\u5ea6\u8bc4\u4ef7\uff1a</p> <ul> <li> <p>Access time \u8bbf\u95ee\u65f6\u95f4</p> <ul> <li>\u5bf9HDD\u53c8\u53ef\u4ee5\u7ec6\u5206\u4e3aSeek time\u5bfb\u9053\u65f6\u95f4(4 ~ 10 milliseconds)\u548cRotation latency\u65cb\u8f6c\u5ef6\u8fdf(5 ~ 20 milliseconds)</li> </ul> </li> <li> <p>Data-transfer rate \u6570\u636e\u4f20\u8f93\u901f\u7387(25 ~ 200 MBps)</p> </li> <li> <p>IOPS \u6bcf\u79d2I/O\u64cd\u4f5c\u6570</p> </li> <li> <p>Mean time of failure \u5e73\u5747\u6545\u969c\u65f6\u95f4(MTTF, 3 ~ 5 years)</p> </li> </ul> <p>\u6839\u636e\u6240\u8bbf\u95ee\u6570\u636e\u7684\u50a8\u5b58\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u5c06\u8bbf\u95ee\u5206\u4e3a\u968f\u673a\u8bbf\u95ee\u548c\u987a\u5e8f\u8bbf\u95ee\u3002\u987a\u5e8f\u8bbf\u95ee\u7684\u4e0a\u9650\u4e3b\u8981\u7531\u4f20\u8f93\u901f\u7387\u51b3\u5b9a\uff1b\u968f\u673a\u8bbf\u95ee\u7684\u4e0a\u9650\u4e3b\u8981\u7531IOPS\u51b3\u5b9a\uff0cIOPS\u53c8\u4e3b\u8981\u7531\u8bbf\u95ee\u65f6\u95f4\u51b3\u5b9a\u3002</p> <p>\u4f18\u5316\u78c1\u76d8\u6027\u80fd\u7684\u5e38\u89c1\u65b9\u5f0f\uff1a</p> <ul> <li> <p>Buffering \u7f13\u51b2\u533a\uff0c\u907f\u514d\u91cd\u590d\u8bfb\u5199\u76f8\u540c\u6570\u636e</p> </li> <li> <p>Read-ahead \u9884\u8bfb\u53d6</p> </li> <li> <p>Disk-arm-scheduling \u9488\u5bf9HDD\uff0c\u76f8\u6bd4\u8ba9\u78c1\u5934\u6765\u56de\u6a2a\u8df3\uff0c\u9002\u5f53\u91cd\u6392IO\u8bf7\u6c42,\u50cf\u7535\u68af\u4e00\u6837\uff0c\u4f7f\u78c1\u5934\u6709\u5e8f\u79fb\u52a8\u80fd\u51cf\u5c11\u5e73\u5747\u5bfb\u9053\u65f6\u95f4</p> </li> <li> <p>File Organization \u9488\u5bf9HDD\uff0c\u6587\u4ef6\u6574\u7406\uff0c\u4f7f\u6570\u636e\u5206\u5e03\u5c3d\u53ef\u80fd\u6709\u5e8f</p> </li> <li> <p>Wear Leveling \u9488\u5bf9NVM\u548cSSD\uff0c\u56e0\u4e3a\u64e6\u5199\u5bff\u547d\u76f8\u5bf9\u6709\u9650\uff0c\u9700\u8981\u5b9e\u73b0\u8d1f\u8f7d\u5747\u8861</p> </li> <li> <p>Non-volatile write buffers \u5ef6\u8fdf\u540e\u5927\u6279\u91cf\u4e00\u540c\u5199\u5165</p> </li> <li> <p>Effective query processing algorithm (high-level optimization)</p> </li> </ul>"},{"location":"Database/#_21","title":"\u5341\u4e09\u7ae0 \u6570\u636e\u50a8\u5b58\u7ed3\u6784","text":"<p>\u4e00\u65b9\u9762\uff0c\u4f60\u5982\u4f55\u50a8\u5b58\u4e00\u4e2a\u6570\u636e\u5e93\uff0c\u662f\u6bcf\u4e00\u5f20\u8868\u5bf9\u5e94\u4e00\u4e2a\u6587\u4ef6\uff0c\u8fd8\u662f\u4e00\u4e2a\u6570\u636e\u5e93\u5bf9\u5e94\u4e00\u4e2a\u5927\u6587\u4ef6\uff0c\u8fd8\u662f\u5176\u4ed6\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1f\u5728\u7279\u5b9a\u5b9e\u73b0\u65b9\u5f0f\u4e0a\u600e\u4e48\u4f18\u5316\u589e\u5220\u67e5\u6539\uff1f</p> <p>\u53e6\u4e00\u65b9\u9762\u4f60\u7684\u6570\u636e\u7ed3\u6784\u600e\u4e48\u4e0e\u50a8\u5b58\u4ecb\u8d28\u76f8\u914d\u5408\u4f18\u5316\uff0c\u6bd4\u5982\u6700\u91cd\u8981\u7684\u600e\u4e48\u4ee5\u6247\u533a\u4e3a\u5355\u4f4d\u5927\u5c0f\u8bfb\u5199\uff1f</p>"},{"location":"Database/#_22","title":"\u5355\u6761\u8bb0\u5f55","text":""},{"location":"Database/#_23","title":"\u5b9a\u957f\u6570\u636e","text":"<p>\u6309\u884c\u5b58\u653e\uff08Row-Oriented Storage\uff09\u7684\u5b9a\u957f\u6570\u636e\u7684\u589e\u67e5\u6539\u90fd\u5bb9\u6613\u5b9e\u73b0\uff08\u4e00\u822c\u4e0d\u5141\u8bb8\u8de8block\u5b58\u50a8\uff09\uff0c\u5220\u9664\u4e00\u822c\u6709\u4e09\u79cd\u65b9\u5f0f\uff1a</p> <ul> <li> <p>\u5220\u9664\u540e\u5c06\u540e\u9762\u7684\u6570\u636e\u524d\u79fb\uff08\u53ef\u4ee5\u4fdd\u6301\u67d0\u4e9b\u952e\u7684\u987a\u5e8f\uff09</p> </li> <li> <p>\u5220\u9664\u540e\u7684\u7a7a\u4f4d\u7528\u94fe\u8868\uff08free list\uff09\u4e32\u8054\u4f9b\u4e0b\u6b21\u63d2\u5165\u7528</p> </li> <li> <p>\u5220\u9664\u540e\u5c06\u6700\u4e0b\u9762\u7684\u4e00\u4e2a\u6570\u636e\u79fb\u5230\u5220\u9664\u540e\u7684\u7a7a\u4f4d</p> </li> </ul> <p>\u4f46\u662f\u6570\u636e\u8fd8\u53ef\u4ee5\u6309\u5217\u5b58\u653e\uff0c\u79f0\u4e3aColumnar Representation\u6216Column-Oriented Storage\uff1a</p> <ul> <li> <p>\u589e\u5220\u67e5\u6539\u7684\u5b9e\u73b0\u4e0e\u4e0a\u9762\u7c7b\u4f3c</p> </li> <li> <p>\u6309\u5217\u5b58\u653e\u66f4\u6709\u5229\u4e8e\u5411\u91cf\u8fd0\u7b97\u4ee5\u53ca\u6570\u636e\u5206\u6790\u3001\u8fd0\u7b97\u3001\u538b\u7f29\u7b49\u64cd\u4f5c</p> </li> <li> <p>\u5982\u679c\u6309\u5c5e\u6027\u8bbf\u95ee\u591a\u4e8e\u6309tuple\u8bbf\u95ee\uff0c\u8fd9\u79cd\u50a8\u5b58\u65b9\u5f0f\u4f1a\u66f4\u5feb</p> </li> </ul>"},{"location":"Database/#_24","title":"\u4e0d\u5b9a\u957f\u6570\u636e","text":"<ul> <li> <p>\u7528null-bit map\u89e3\u51b3\u5141\u8bb8\u4e3aNULL\u7684\u6570\u636e\u50a8\u5b58\u3002n\u4e2a\u5141\u8bb8\u4e3a\u7a7a\u7684\u5c5e\u6027\u9700\u8981n\u4e2abit\u7684\u7a7a\u4f4d\u56fe\uff0c\u7a7a\u4f4d\u56fe\u4e2d\u67d0\u4e00bit\u4e3a0/1\u610f\u5473\u7740\u5bf9\u5e94\u7684\u5c5e\u6027\u4e0d\u662f/\u662f\u7a7a\u7684\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662fmemory\u4e00\u822c\u4e0d\u5141\u8bb8\u4ee5bit\u4e3a\u5355\u4f4d\u7684\u8bfb\u5199\uff0c\u9700\u8981\u7528n\u4e0d\u80fd\u88ab8\u6574\u9664\u65f6\u9700\u8981\u8865\u9f50\u52308\u7684\u6574\u500d\u6570\u4ee5\u5b9e\u73b0Byte\u4e3a\u5355\u4f4d\u7684\u8bfb\u5199\u3002</p> </li> <li> <p>\u7528\u5b9a\u957f\u7684\u6570\u636e\uff0c\u5982\u957f\u5ea6\u6216\u8005\u504f\u79fb\u91cf\uff0c\u95f4\u63a5\u8868\u8fbe\u957f\u5ea6\u4e0d\u5b9a\u7684\u6570\u636e\uff0c\u800c\u5c06\u5177\u4f53\u7684\u6570\u636e\u5b58\u5728\u5b9a\u957f\u7684\u5c5e\u6027\u503c\u7684\u540e\u9762\u3002</p> </li> </ul> <p>\u6700\u5e38\u89c1\u7684\u7ed3\u6784\u5982\u56fe\u6240\u793a\uff1a</p> <ul> <li> <p>\u5b9a\u957f\u7684\u6570\u636e\u548c\u4e0d\u5b9a\u957f\u6570\u636e\u7684\u5b9a\u957f\u8868\u793a\u653e\u524d\u9762</p> </li> <li> <p>\u7a7a\u4f4d\u56fe\u653e\u4e2d\u95f4</p> </li> <li> <p>\u4e0d\u5b9a\u957f\u6570\u636e\u7684\u672c\u4f53\u653e\u540e\u9762</p> </li> </ul> <p>\u4f8b\u5982\u56fe\u4e2d(21, 5)\u8868\u8fbe\u4e86\u4e00\u4e2a\u53d8\u957f\u5c5e\u6027\u7684\u4ece21\u53f7bit\u5f00\u59cb\u4e14\u957f\u5ea6\u4e3a5\u3002\uff0865000\u4e3a\u4e00\u4e2a\u5b9a\u957f\u7684\u5c5e\u6027\uff0c\u653e\u5728\u524d\u9762\uff09</p> <p></p>"},{"location":"Database/#_25","title":"\u6570\u636e\u9875","text":"<p>\u5b9a\u957f\u6570\u636e\u975e\u5e38\u5bb9\u6613\u6784\u5efa\u6570\u636e\u9875\u3002</p> <p>\u4e0d\u5b9a\u957f\u6570\u636e\u7684\u6570\u636e\u9875\u4e00\u822c\u91c7\u7528\u4e24\u5934\u5939\u51fb\u7684\u7ed3\u6784\u4fbf\u4e8e\u5bf9\u9f50\u3002\u6700\u5e38\u89c1\u7684\u5b9e\u73b0\u65b9\u5f0f\u5982\u56fe\uff0cSlotted page\uff08\u5206\u69fd\u9875\uff09 Header\u5305\u542b\u672c\u9875\u4e2drecords\u76f8\u5173\u4fe1\u606f\uff1a</p> <ul> <li> <p>record\u6570\u91cf\uff0c\u65b9\u4fbf\u4e0b\u4e00\u6b21\u63d2\u5165record\u6307\u9488\uff0c\u9632\u6b62\u5c06free space\u4e2d\u7684\u6570\u636e\u89c6\u4e3arecord\u6307\u9488</p> </li> <li> <p>free space\u672b\u5c3e\u4f4d\u7f6e\uff0c\u65b9\u4fbf\u4e0b\u4e00\u6b21\u63d2\u5165record</p> </li> <li> <p>\u6307\u5411\u5404record\u7684\u6307\u9488\uff08\u4e00\u822c\u662f\u504f\u79fb\u91cf\u5f62\u5f0f\uff09</p> </li> </ul> <p></p>"},{"location":"Database/#_26","title":"\u6587\u4ef6\u7ec4\u7ec7","text":"<p>\u9700\u8981\u8bbe\u8ba1\u5355\u6761\u6570\u636e\u548c\u6570\u636e\u9875\u5982\u4f55\u5206\u5e03\u5728\u6587\u4ef6\u5185\u90e8\u3002\u4e0b\u56fe\u662f\u51e0\u79cd\u5e38\u89c1\u7684\u7ed3\u6784\uff1a</p> <p></p>"},{"location":"Database/#heap","title":"Heap","text":"<p>Heap\u5e38\u7528\u7684\u4f18\u5316\u65b9\u5f0f\u662fFree-space map\uff0c\u5269\u4f59\u7a7a\u95f4\u56fe\u4e2d\u7684\u5143\u7d20\u8868\u793a\u5bf9\u5e94\u7684block\u4e2d\u5269\u4f59\u7a7a\u95f4\u7684\u6bd4\u4f8b\uff0c\u5373\\(\\frac{x}{2^{bit}}\\)\u7684\u90e8\u5206\u4e3a\u7a7a\u95f2\u7684</p> <p>\u5f53\u6570\u636e\u9875\u6bd4\u8f83\u591a\u65f6\uff0c\u53ef\u4ee5\u5c06\u8fde\u7eedK\u4e2amap\u7684\u6700\u5927\u503c\u4f5c\u4e3a\u952e\u503c\uff0c\u5efa\u7acb\u8d77\u4e8c\u7ea7\u7d22\u5f15\uff0c\u4ee5\u52a0\u5feb\u67e5\u627e\u901f\u5ea6</p> <p></p>"},{"location":"Database/#sequential","title":"Sequential","text":"<p>\u8fd9\u91cc\u7684Sequential\u4e0d\u662f\u6307\u50a8\u5b58\u7a7a\u95f4\u4e0a\u6709\u5e8f\uff0c\u800c\u662f\u6307\u6bcf\u4e00\u6761\u6570\u636e\u903b\u8f91\u5173\u7cfb\uff08\u5373\u641c\u7d22\u7801\uff09\u4e0a\u6709\u5e8f\u3002\u5728\u6570\u636e\u7ecf\u5e38\u6309\u67d0\u79cd\u6392\u5e8f\u5148\u540e\u53d6\u7528\u65f6\uff0c\u53ef\u4ee5\u8003\u8651\u987a\u5e8f\u6587\u4ef6\u7cfb\u7edf\u3002</p> <p>\u5148\u540e\u903b\u8f91\u4e00\u822c\u7528\u7c7b\u4f3c\u6307\u9488\u7684\u7ed3\u6784\u5b9e\u73b0\uff0c\u4f46\u662f\u4f1a\u5bfc\u81f4\u6570\u636e\u903b\u8f91\u5b58\u50a8\u987a\u5e8f\u548c\u7269\u7406\u5b58\u50a8\u987a\u5e8f\u4e0d\u4e00\u81f4\uff0c\u6548\u7387\u4f4e\u4e0b\uff0c\u56e0\u6b64\u9700\u8981\u9002\u65f6Reorganize\u3002</p> <ul> <li> <p>\u63d2\u5165\uff1a\u5148\u5b9a\u4f4d\u5230\u5bf9\u5e94\u63d2\u5165\u4f4d\u7f6e\uff0c\u82e5\u5f53\u524dblock\u5185\u6709\u5269\u4f59\u7a7a\u95f4\u53ef\u4ee5\u76f4\u63a5\u63d2\u5165\uff0c\u5426\u5219\u5c06\u6570\u636e\u5b58\u5165\u201c\u6ea2\u51fa\u5757\u201d\u4e2d\uff0c\u5229\u7528\u6307\u9488\u7ed3\u6784\u8fde\u63a5\u8d77\u6765\u3002</p> </li> <li> <p>\u5220\u9664\uff1a\u6539\u53d8\u6307\u9488\u6307\u5411\u4ee5\u6539\u53d8\u903b\u8f91\u5148\u540e\u5173\u7cfb\u3002\u7a7a\u4f59\u4f4d\u7f6e\u7684\u5904\u7406\u89c6\u5355\u6761\u6570\u636e\u7684\u7ed3\u6784\u800c\u5b9a\u3002</p> </li> </ul>"},{"location":"Database/#multitable-clustering","title":"Multitable Clustering","text":"<p>\u540c\u4e00\u4e2a\u6587\u4ef6\u9875\u4e2d\u5b58\u50a8\u4e0d\u540c\u7684\u6570\u636e\u8868\uff0c\u53ef\u4ee5\u5229\u7528\u94fe\u8868\u7ed3\u6784\u8fde\u63a5\u8d77\u6765\uff0c\u4ee5\u52a0\u5feb\u5355\u8868\u67e5\u8be2\u901f\u5ea6\u3002</p> <ul> <li> <p>\u4f18\u70b9\uff1a</p> <p>\u52a0\u5feb\u4e86\u591a\u8868\u67e5\u8be2\uff0c\u7279\u522b\u662fjoin\u64cd\u4f5c</p> </li> <li> <p>\u7f3a\u70b9\uff1a</p> <p>\u4e0d\u540c\u7684\u6570\u636e\u683c\u5f0f\uff0c\u964d\u4f4e\u4e86\u5b58\u50a8\u6548\u7387\uff0c\u5e76\u4e14\u8bbf\u95ee\u5355\u8868\u65f6\u9700\u8981\u8bfb\u53d6\u66f4\u591a\u7684block</p> <p>\u4e00\u65e6\u6709\u4e00\u5f20\u8868\u9700\u8981\u66f4\u65b0\uff0c\u6574\u4e2a\u6587\u4ef6\u9875\u90fd\u9700\u8981\u66f4\u65b0\uff0c\u5bfc\u81f4\u4e86\u5927\u91cf\u7684I/O\u64cd\u4f5c</p> </li> </ul>"},{"location":"Database/#table-partitioning","title":"Table Partitioning","text":"<p>\u67d0\u4e00\u4e9b\u8868\u53ef\u4ee5\u4ece\u7269\u7406\u4e0a\u5206\u4e3a\u591a\u4e2a\u6587\u4ef6\u4ee5\u914d\u5408\u5b9e\u9645\u4f7f\u7528\u60c5\u51b5\uff0c\u964d\u4f4e\u8868\u7684\u5927\u5c0f\uff0c\u63d0\u9ad8\u6570\u636e\u5e93\u6548\u7387\u3002</p> <p>Example</p> <p>\u4f8b\u5982\u9009\u8bfe\u4fe1\u606f\u8868\uff0c\u867d\u7136\u4ece\u903b\u8f91\u4e0a\u6240\u6709\u5b66\u5e74\u7684\u9009\u8bfe\u4fe1\u606f\u90fd\u5728\u540c\u4e00\u5f20\u8868\u4e0a\uff0c\u4f46\u662f\u56e0\u4e3a\u5f80\u5e74\u7684\u6570\u636e\u51e0\u4e4e\u4e0d\u9700\u8981\u589e\u5220\u67e5\u6539\uff0c\u6570\u636e\u64cd\u4f5c\u96c6\u4e2d\u4e8e\u5f53\u524d\u5b66\u5e74\uff0c\u6240\u4ee5\u53ef\u4ee5\u8fdb\u884c\u62c6\u5206\uff0c\u5c06\u5386\u53f2\u4fe1\u606f\u5b58\u50a8\u5230\u78c1\u76d8\u4e2d\uff0c\u53ea\u4fdd\u7559\u5f53\u524d\u5b66\u5e74\u7684\u6570\u636e\u5728\u5185\u5b58\u4e2d\uff0c\u4ece\u800c\u52a0\u901f\u67e5\u8be2\u3002</p>"},{"location":"Database/#b-tree-file-index","title":"B+ Tree File Index","text":"<p>B+\u6811\u4e0d\u4ec5\u53ef\u4ee5\u4f5c\u4e3a\u7d22\u5f15\u7684\u7ed3\u6784\uff0c\u8fd8\u53ef\u4ee5\u76f4\u63a5\u4f5c\u4e3a\u6587\u4ef6\u7ec4\u7ec7\u7684\u7ed3\u6784\u3002\u5728\u4e0b\u4e00\u7ae0\u4e2d\u4f1a\u8fdb\u884c\u8be6\u7ec6\u4ecb\u7ecd\u3002</p>"},{"location":"Database/#data-dictionarysystem-catalog-storage","title":"Data Dictionary\uff08System Catalog\uff09 Storage","text":"<p>\u4e0a\u9762\u7684\u4e09\u7c7b\u6587\u4ef6\u7ec4\u7ec7\u90fd\u662f\u5bf9\u5e93\u4e2d\u7684\u5b9e\u4f8b\u800c\u8a00\u7684\uff0c\u4f46\u662f\u6570\u636e\u5e93\u8fd8\u6709\u4e00\u4e9b\u6846\u67b6\u6027\u7684\u5168\u5c40\u7684\u4fe1\u606f\u9700\u8981\u50a8\u5b58\uff0c\u6211\u4eec\u79f0\u4e3a\u5143\u6570\u636eMetadata\u3002</p> <p></p> <p>\u4e3a\u4e86\u7b80\u5316\u7cfb\u7edf\u7684\u8bbe\u8ba1\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u524d\u9762\u7684\u6587\u4ef6\u7ec4\u7ec7\u7ed3\u6784\uff0c\u4f7f\u7528\u6570\u636e\u8868\u7684\u65b9\u5f0f\u50a8\u5b58\u5143\u6570\u636e\u3002</p>"},{"location":"Database/#buffer-management","title":"Buffer Management","text":"<p>\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u4e00\u4e2a\u91cd\u8981\u76ee\u6807\u5c31\u662f \u51cf\u5c11\u5185\u5b58\u548c\u78c1\u76d8\u4e4b\u95f4\u7684I/O\u64cd\u4f5c\uff0c\u8fd9\u5c31\u9700\u8981\u4e00\u4e2a\u7f13\u51b2\u533a\u7ba1\u7406\u5668\u3002</p>"},{"location":"Database/#pin","title":"Pin","text":"<p>\u9489\u4f4f\u6b63\u5728\u8bfb\u5199\u7684\u6570\u636e\u5757\u76f4\u5230\u64cd\u4f5c\u5b8c\u6210\uff0c\u9632\u6b62\u88ab\u66ff\u6362\u51fa\u53bb\u5f71\u54cd\u6570\u636e\u7684\u4e00\u81f4\u6027\u3002</p> <p>\u5b9e\u73b0\u65f6\u53ef\u4ee5\u7528\u4e00\u4e2apin count\u6765\u8bb0\u5f55\u5f53\u524d\u88ab\u9489\u4f4f\u7684\u6b21\u6570\u4e5f\u5373\u627f\u8f7d\u7684\u64cd\u4f5c\u6570\uff0c\u5f53pin count\u4e3a0\u65f6\uff0c\u53ef\u4ee5\u88ab\u66ff\u6362\u51fa\u53bb\u3002</p>"},{"location":"Database/#lock","title":"Lock","text":"<ul> <li> <p>Exclusive Lock</p> <p>\u4e00\u822c\u7528\u4e8e\u5199\u64cd\u4f5c\uff0c\u9632\u6b62\u5176\u4ed6\u4e8b\u52a1\u8bfb\u5199\u8be5\u6570\u636e\u5757\uff0c\u56e0\u6b64\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u6709\u4e00\u4e2a\u4e8b\u52a1\u5bf9\u8be5\u6570\u636e\u5757\u52a0\u4e0aExclusive Lock\u3002</p> </li> <li> <p>Shared Lock</p> <p>\u4e00\u822c\u7528\u4e8e\u8bfb\u64cd\u4f5c\uff0c\u9632\u6b62\u5176\u4ed6\u4e8b\u52a1\u5199\u8be5\u6570\u636e\u5757\u800c\u5f71\u54cd\u6570\u636e\u8bfb\u53d6\uff0c\u56e0\u6b64\u540c\u4e00\u65f6\u95f4\u53ef\u4ee5\u6709\u591a\u4e2a\u4e8b\u52a1\u5bf9\u8be5\u6570\u636e\u5757\u52a0\u4e0aShared Lock</p> </li> </ul>"},{"location":"Database/#buffer-replacement","title":"Buffer Replacement","text":"<p>\u6bcf\u6b21\u5411\u7f13\u5b58\u8bf7\u6c42\u6570\u636e\u65f6\uff0c\u82e5\u8be5\u6570\u636e\u5df2\u5728\u7f13\u5b58\u4e2d\uff0c\u76f4\u63a5\u8fd4\u56de\uff1b\u82e5\u4e0d\u5728\u7f13\u5b58\u4e2d\uff0c\u9700\u8981\u66ff\u6362\u4e00\u4e2a\u6570\u636e\u5757\u6765\u5b58\u653e\u65b0\u6570\u636e\uff0c\u5373\u5c06\u4e00\u4e2a\u6570\u636e\u5757\u5199\u56de\u78c1\u76d8\uff0c\u518d\u5c06\u65b0\u6570\u636e\u5757\u8bfb\u5165\u7f13\u5b58\u3002</p> <p>\u64cd\u4f5c\u7cfb\u7edf\u6700\u5e38\u7528\u7684\u662fLUR\u7b56\u7565\uff0c\uff08L.east R.ecently U.sed Stratergy\uff09\uff0c\u5373\u6839\u636e\u201c\u6700\u8fd1\u8bbf\u95ee\u8fc7\u7684\u5185\u5bb9\u66f4\u6709\u53ef\u80fd\u518d\u6b21\u88ab\u8bbf\u95ee\u201d\u7684\u539f\u5219\u7ba1\u7406\u7f13\u5b58\u5185\u5bb9\uff0c\u5c06\u6700\u4e45\u672a\u4f7f\u7528\u7684\u6570\u636e\u5757\u66ff\u6362\u51fa\u53bb\u3002</p> <p>\u4f46\u6570\u636e\u5e93\u7cfb\u7edf\u4e00\u822c\u57fa\u4e8e\u5386\u53f2\u4fe1\u606f\u548c\u6570\u636e\u60c5\u51b5\u8fdb\u884c\u9884\u6d4b\uff0c\u4f7f\u7528\u66f4\u590d\u6742\u66f4\u9ad8\u6548\u7684\u6df7\u5408\u7b56\u7565</p> <ul> <li>\u5176\u4ed6\u7b56\u7565\u3001</li> </ul> <p></p>"},{"location":"Database/#force-output","title":"Force Output","text":"<p>\u4e00\u822c\u7528\u4e8e\u5904\u7406\u7cfb\u7edf\u5d29\u6e83\u65f6\u7684\u6570\u636e\u4e00\u81f4\u6027\u95ee\u9898</p> <p></p>"},{"location":"Database/#_27","title":"\u5341\u56db\u7ae0 \u7d22\u5f15","text":"<p>\u7d22\u5f15\u662f\u6570\u636e\u5e93\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u6982\u5ff5\uff0c\u5b83\u53ef\u4ee5\u52a0\u901f\u6570\u636e\u5e93\u7684\u64cd\u4f5c\uff0c\u63d0\u9ad8\u6570\u636e\u5e93\u7684\u6027\u80fd\u3002</p> <p>\u4f46\u662f\u7d22\u5f15\u4f1a\u589e\u52a0\u6570\u636e\u5e93\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u5e76\u4e14\u9700\u8981\u5b9e\u65f6\u7ef4\u62a4\u3002</p>"},{"location":"Database/#_28","title":"\u987a\u5e8f/\u65e0\u5e8f\u7d22\u5f15","text":"<p>\u6307key\u6709\u4e00\u5b9a\u987a\u5e8f\u7684\u7d22\u5f15\u3002\u4e0e\u4e4b\u5bf9\u5e94\u7684\uff0c\u5178\u578b\u7684\u975e\u987a\u5e8f\u4f5c\u5f15\u4f8b\u5982\u54c8\u5e0c\u7d22\u5f15\u3002\u987a\u5e8f\u7d22\u5f15\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u7684\u6392\u5e8f\u89c4\u5219\u8fdb\u4e00\u6b65\u5206\u7c7b\uff1a</p> <ul> <li> <p>Primary Index (clustering index):</p> <p>\u7d22\u5f15\u7684\u987a\u5e8f\u4e0e\u7269\u7406\u50a8\u5b58\u7684\u987a\u5e8f\u5bf9\u5e94\u3002\uff08\u7269\u7406\u50a8\u5b58\u987a\u5e8f\u5f80\u5f80\u662f\u6839\u636ePrimary key\uff0c\u5f53\u7136\u8fd9\u91cc\u7684search key\u4e0d\u4e00\u5b9a\u8981\u6c42\u662fprimary key\uff09</p> </li> <li> <p>Secondary Index (non-clustering index):</p> <p>\u7d22\u5f15\u987a\u5e8f\u4e0e\u7269\u7406\u50a8\u5b58\u987a\u5e8f\u4e0d\u540c\uff0c\u6839\u636e\u4f7f\u7528\u9700\u6c42\u8bbe\u8ba1\u3002</p> <p>\u7531\u5b9a\u4e49\u53ef\u4ee5\u77e5\u9053\uff0c\u8f85\u52a9\u7d22\u5f15\u4e00\u5b9a\u662f\u4e0b\u9762\u63d0\u5230\u7684\u7a20\u5bc6\u7d22\u5f15\uff0c\u56e0\u4e3a\u4ed6\u65e0\u6cd5\u901a\u8fc7\u7269\u7406\u5b58\u50a8\u987a\u5e8f\u8fdb\u884c\u68c0\u7d22\u6570\u636e\u3002</p> </li> </ul> <p>Note</p> <p>\u53ef\u4ee5\u770b\u51fa\uff0c\u5f53\u9700\u8981\u7ebf\u6027\u626b\u63cf\u65f6\uff0cPrimary Index\u7684\u6548\u7387\u66f4\u9ad8\uff0c\u56e0\u4e3a\u5b83\u7684\u987a\u5e8f\u4e0e\u7269\u7406\u5b58\u50a8\u987a\u5e8f\u4e00\u81f4\uff1b\u800c\u8f85\u52a9\u7d22\u5f15\u53ef\u80fd\u9700\u8981\u5728\u591a\u4e2a\u6570\u636e\u5757\u95f4\u8df3\u8dc3</p>"},{"location":"Database/#_29","title":"\u7a20\u5bc6/\u7a00\u758f\u7d22\u5f15","text":"<ul> <li> <p>Dence Index \u7a20\u5bc6\u7d22\u5f15</p> <p>\u6307\u6bcf\u4e00\u4e2asearch key\u7684\u503c\u90fd\u5728\u7d22\u5f15\u5217\u8868\u4e2d\u51fa\u73b0</p> <ul> <li> <p>\u63d2\u5165</p> <ul> <li> <p>\u82e5\u63d2\u5165\u7684key\u503c\u5728\u7d22\u5f15\u4e2d\u4e0d\u5b58\u5728\uff0c\u76f4\u63a5\u63d2\u5165\u5230\u5408\u9002\u7684\u4f4d\u7f6e</p> </li> <li> <p>\u82e5\u63d2\u5165\u7684key\u503c\u5728\u7d22\u5f15\u4e2d\u5b58\u5728\uff0c\u6839\u636e\u7d22\u5f15\u60c5\u51b5\u5224\u65ad\uff1a</p> <ul> <li> <p>\u82e5\u7d22\u5f15\u5b58\u50a8\u6240\u6709\u8bb0\u5f55\u7684\u6307\u9488\uff0c\u76f4\u63a5\u63d2\u5165\u5230\u5408\u9002\u7684\u4f4d\u7f6e</p> </li> <li> <p>\u82e5\u7d22\u5f15\u4ec5\u5b58\u50a8\u76f8\u540c\u641c\u7d22\u7801\u503c\u7684\u7b2c\u4e00\u4e2a\u8bb0\u5f55\u7684\u6307\u9488\uff0c\u5219\u628a\u63d2\u5165\u7684\u8bb0\u5f55\u63d2\u5165\u5230\u8be5\u7ec4\u8bb0\u5f55\u7684\u540e\u9762</p> </li> </ul> </li> </ul> </li> <li> <p>\u5220\u9664</p> <ul> <li> <p>\u82e5\u5220\u9664\u7684\u7d22\u5f15\u552f\u4e00\uff0c\u76f4\u63a5\u5220\u9664</p> </li> <li> <p>\u540c\u6837\u8003\u8651\u7d22\u5f15\u5b58\u50a8\u60c5\u51b5</p> <ul> <li> <p>\u82e5\u7d22\u5f15\u5b58\u50a8\u6240\u6709\u8bb0\u5f55\u7684\u6307\u9488\uff0c\u76f4\u63a5\u5220\u9664\uff1b</p> </li> <li> <p>\u82e5\u7d22\u5f15\u4ec5\u5b58\u50a8\u76f8\u540c\u641c\u7d22\u7801\u503c\u7684\u7b2c\u4e00\u4e2a\u8bb0\u5f55\u7684\u6307\u9488\uff0c\u76f4\u63a5\u5220\u9664\u8bb0\u5f55\uff0c\u82e5\u6070\u597d\u4e3a\u7b2c\u4e00\u4e2a\u8bb0\u5f55\uff0c\u5219\u5220\u9664\u540e\u5c06\u6307\u9488\u6307\u5411\u4e0b\u4e00\u4e2a\u8bb0\u5f55</p> </li> </ul> </li> </ul> </li> </ul> </li> <li> <p>Sparse Index \u7a00\u758f\u7d22\u5f15</p> <p>\u6307\u53ea\u6709\u90e8\u5206search key\u7684\u503c\u5728\u7d22\u5f15\u5217\u8868\u4e2d\u51fa\u73b0</p> <ul> <li> <p>\u63d2\u5165</p> <ul> <li>\u76f4\u63a5\u5c06\u8bb0\u5f55\u63d2\u5165\u5230\u5408\u9002\u7684\u4f4d\u7f6e\uff0c\u82e5\u6070\u597d\u4e3a\u5f53\u524d\u5757\u7684\u7b2c\u4e00\u6761\uff0c\u5219\u66f4\u65b0\u7d22\u5f15</li> </ul> </li> <li> <p>\u5220\u9664</p> <ul> <li> <p>\u76f4\u63a5\u5220\u9664\u8bb0\u5f55</p> </li> <li> <p>\u82e5\u8be5\u8bb0\u5f55\u6709\u7d22\u5f15\u6307\u5411\uff1a</p> <ul> <li> <p>\u82e5\u8be5\u8bb0\u5f55\u7684\u641c\u7d22\u7801\u503c\u552f\u4e00\uff0c\u5219\u7528\u4e0b\u4e00\u4e2a\u641c\u7d22\u7801\u503c\u7684\u6307\u9488\u66ff\u4ee3\uff08\u82e5\u4e0b\u4e00\u4e2a\u641c\u7d22\u7801\u503c\u5df2\u7ecf\u5b58\u5728\u7d22\u5f15\u4e2d\uff0c\u5219\u76f4\u63a5\u5220\u9664\u5f53\u524d\u7d22\u5f15\uff09 </p> </li> <li> <p>\u82e5\u8be5\u8bb0\u5f55\u7684\u641c\u7d22\u7801\u503c\u4e0d\u552f\u4e00\uff0c\u5219\u5c06\u7d22\u5f15\u6307\u5411\u4e0b\u4e00\u4e2a\u8bb0\u5f55</p> </li> </ul> </li> </ul> </li> </ul> </li> </ul> <p>\u7a00\u758f\u7d22\u5f15\u53ef\u4ee5\u591a\u7ea7\u5d4c\u5957\uff0c\u914d\u5408\u987a\u5e8f\u7d22\u5f15\u5c31\u662fB+\u6811\uff08\u5f53\u7136\u8fd8\u8981\u9644\u52a0\u5176\u4ed6\u4e00\u4e9b\u7ea6\u675f\uff09</p>"},{"location":"Database/#composite-search-key","title":"\u591a\u503c\u7d22\u5f15\uff08Composite Search Key\uff09","text":"<p>\u4e00\u822c\u6309\u7167\u7c7b\u4f3c\u5b57\u5178\u5e8f\u7684\u65b9\u5f0f\u8fdb\u884c\u6392\u5e8f</p>"},{"location":"Database/#b","title":"B+\u6811\u7d22\u5f15","text":"<p>\u548cADS\u8bfe\u4e0a\u7684\u7248\u672c\u7565\u6709\u4e0d\u540c\uff0c\u8981\u975e\u5e38\u5c0f\u5fc3</p> <p></p> <p>Note</p> <p>\u6839\u8282\u70b9\uff1a\\([2, n]\\) \u4e2a\u5b69\u5b50\u6307\u9488</p> <p>\u5185\u90e8\u8282\u70b9\uff1a\\([\\lceil \\frac{n}{2} \\rceil, n-1]\\) \u4e2a\u5b69\u5b50\u6307\u9488</p> <p>\u53f6\u5b50\u8282\u70b9\uff1a\\([\\lceil \\frac{n-1}{2} \\rceil, n-1]\\) \u4e2a\u8bb0\u5f55\u5bf9\uff08\u641c\u7d22\u7801+\u8bb0\u5f55\u6307\u9488\uff09\uff0c\u6700\u540e\u4e00\u4e2a\u6307\u5411\u4e0b\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u4ece\u800c\u5c06\u5e95\u5c42\u8bb0\u5f55\u4e32\u8054\u6210\u7ebf\u6027\u8868</p> <p>\u4e00\u4e2a\u9875\u4e2d\u53ef\u4ee5\u5b58\u653e\u7684B+\u6811\u7d22\u5f15\u4e2a\u6570\u4e3a\uff1a $$ \u5355\u9875\u4e2d\u7d22\u5f15\u4e2a\u6570n=\\frac{\u9875\u5927\u5c0f-\u6307\u9488\u5927\u5c0f}{\u7d22\u5f15\u6570\u636e\u5927\u5c0f+\u6307\u9488\u5927\u5c0f}+1 $$</p> <p>\u6811\u7684\u9ad8\u5ea6</p> \\[h \\leq \\lceil \\log_{\\lceil \\frac{n}{2} \\rceil} K \\rceil\\] \u8ba1\u7b97 <p></p> <ul> <li> <p>Operations</p> <p>\u4e0eADS\u8bfe\u4e0a\u6240\u5b66\u57fa\u672c\u4e00\u81f4\uff0c\u7565</p> </li> <li> <p>Extensions</p> <ul> <li> <p>\u5bf9\u4e8eNon-Unique\u7684\u641c\u7d22\u7801\uff0c\u53ef\u4ee5\u9644\u52a0\u8bb0\u5f55\u7684\u4e3b\u952e\u5c06\u5176\u7ec4\u6210\u4e00\u4e2a\u590d\u5408\u641c\u7d22\u7801\uff0c\u4ece\u800c\u5b9e\u73b0Unique\u7d22\u5f15\u3002</p> </li> <li> <p>B+\u6811\u6587\u4ef6\u7ed3\u6784\uff0c\u53f6\u8282\u70b9\u4e0d\u662f\u6307\u9488\u800c\u662f\u8bb0\u5f55\u672c\u8eab\u5373\u53ef</p> </li> <li> <p>**\u8f85\u52a9\u7d22\u5f15\u7684\u8bb0\u5f55\u91cd\u5b9a\u4f4d\u4ee3\u4ef7\u8f83\u9ad8\uff0c\u53ef\u4ee5\u8ba9\u8f85\u52a9\u7d22\u5f15\u7684\u53f6\u7ed3\u70b9\u76f4\u63a5\u5b58\u50a8\u641c\u7d22\u7801\u800c\u4e0d\u662f\u8bb0\u5f55\u6307\u9488\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u91cd\u5b9a\u4f4d\u4ee3\u4ef7</p> </li> <li> <p>\u5b57\u7b26\u4e32\u7d22\u5f15\uff0c\u8fdb\u884c\u524d\u7f00\u538b\u7f29\uff0c\u4ece\u800c\u51cf\u5c11\u7d22\u5f15\u7684\u5927\u5c0f</p> </li> <li> <p>\u591a\u7801\u8bbf\u95ee</p> <ul> <li> <p>\u591a\u4e2a\u5355\u7801\u7d22\u5f15</p> </li> <li> <p>\u4f7f\u7528\u591a\u503c\u7d22\u5f15</p> </li> <li> <p>\u8986\u76d6\u7d22\u5f15\uff0c\u5373\u5728\u7d22\u5f15\u4e2d\u76f4\u63a5\u5b58\u50a8\u4e00\u4e9b\u6570\u636e\uff0c\u8fd9\u6837\u76f4\u63a5\u67e5\u8be2\u7d22\u5f15\u5373\u53ef\uff0c\u4e0d\u9700\u8981\u518d\u53bb\u67e5\u8be2\u6570\u636e\u8868</p> </li> </ul> </li> </ul> </li> </ul>"},{"location":"Database/#_30","title":"\u76f8\u5173\u4f18\u5316","text":"<ul> <li> <p>\u6279\u91cf\u63d2\u5165BULK LOADING\uff1a</p> <ul> <li> <p>\u4e00\u4e2a\u4e00\u4e2a\u63d2\u5165\u663e\u7136\u4ee3\u4ef7\u8fc7\u9ad8</p> </li> <li> <p>\u63d2\u5165\u4e4b\u524d\u5148\u8fdb\u884c\u6392\u5e8f\uff0c\u6bd4\u4e71\u5e8f\u63d2\u5165\u66f4\u65b0\u7d22\u5f15\u7684\u4ee3\u4ef7\u5c0f\uff0c\u5c24\u5176\u5bf9\u4e8eB+\u6811\u7d22\u5f15\u800c\u8a00\u3002</p> </li> <li> <p>\u5bf9B+\u6811\uff0c\u6279\u91cf\u63d2\u5165\u8fd8\u53ef\u4ee5\u76f4\u63a5\u5efa\u53f6\u8282\u70b9\uff0c\u7136\u540e\u81ea\u53f6\u5411\u6839Bottom-up\u63d2\u5165\uff0c\u51cf\u5c11\u4e86\u63d2\u5165\u65f6\u7684IO\u64cd\u4f5c</p> </li> </ul> </li> <li> <p>\u5185\u5b58\u7d22\u5f15\uff1a</p> <ul> <li> <p>\u5bf9disk\u800c\u8a00\uff0c\u4e0e\u78c1\u76d8\u9875\u5927\u5c0f\u76f8\u5339\u914d\u7684size\u7684\u7d22\u5f15\u66f4\u5feb\uff0c\u56e0\u4e3a\u78c1\u76d8IO\u7684\u6700\u5c0f\u5355\u4f4d\u662f\u6247\u533a</p> </li> <li> <p>\u800c\u5bf9mem\u548ccache\u800c\u8a00\uff0c\u5c0f\u8282\u70b9size\u66f4\u5feb\u56e0\u4e3a\u968f\u673a\u8bbf\u95ee\u6027\u80fd\u9ad8\u5f97\u591a\u5e76\u4e14\u6ca1\u6709\u6247\u533a\u5927\u5c0f\u9650\u5236</p> </li> </ul> </li> <li> <p>\u5199\u4f18\u5316 - LSM-Tree(Log Structured Merge Tree)\uff1a</p> <ul> <li> <p>\u591a\u7ea7\u6811\u578b\u7d22\u5f15\u5206\u522b\u653e\u5728\u4e0d\u540c\u5c42\u6b21\u7684\u50a8\u5b58\u4e0a</p> <p></p> <ul> <li> <p>\u4fdd\u8bc1\u4e86\u5199\u5165\u7684\u901f\u5ea6\uff0c\u5e76\u5145\u5206\u5229\u7528\u4e86\u7a7a\u95f4\uff08\u5148\u5f80\u66f4\u5feb\u7684mem\u5199\uff0c\u5199\u6ee1\u540e\u518d\u4e00\u6b21\u6027\u5411\u4e0b\u5408\u5e76\u5b8c\u6210\u5199\u5165\uff09</p> </li> <li> <p>\u51cf\u5c11\u4e86\u78c1\u76d8\u7684\u5199\u5165\u91cf\uff08\u56e0\u4e3a\u78c1\u76d8IO\u7684\u6700\u5c0f\u5355\u4f4d\u662f\u6247\u533a\uff0c\u5355\u6b21\u5927\u91cf\u5199\u5165\u5bf9\u78c1\u76d8\u7684\u6d88\u8017\u8fdc\u5c0f\u4e8e\u591a\u6b21\u5c11\u91cf\u5199\u5165\uff09</p> </li> <li> <p>\u4f46\u662f\u635f\u5931\u4e86\u67e5\u8be2\u7684\u901f\u5ea6\uff08\u8981\u5728\u591a\u68f5\u6811\u91cc\u627e\uff09\uff0c\u5e76\u4e14\u540c\u4e00\u6570\u636e\u53ef\u80fd\u5728\u591a\u68f5\u6811\u4e2d\u88ab\u62f7\u8d1d</p> </li> </ul> </li> <li> <p>\u5982\u679c\u6bcf\u4e00\u5c42\u7ea7\u5141\u8bb8\u540c\u65f6\u5b58\u5728\u591a\u68f5\u6811\uff0c\u79f0\u4e3aSetpped-merge index\u3002\u8fdb\u4e00\u6b65\u7528\u7f16\u7a0b\u96be\u5ea6\u3001\u7a7a\u95f4\u590d\u6742\u5ea6\u548c\u67e5\u8be2\u901f\u5ea6\u6362\u5199\u901f\u5ea6\u3002</p> </li> <li> <p>\u5176\u4ed6\u64cd\u4f5c\uff1a</p> <ul> <li> <p>\u5220\u9664\uff1a \u91c7\u7528\u6253\u6807\u8bb0\u7684\u61d2\u60f0\u5220\u9664\uff0c\u53ea\u6709\u5728\u5408\u5e76\u65f6\u624d\u771f\u6b63\u5220\u9664</p> </li> <li> <p>\u66f4\u65b0\uff1a \u91c7\u7528\u63d2\u5165\u65b0\u503c+\u5220\u9664\u65e7\u503c\u7684\u65b9\u5f0f</p> </li> </ul> </li> </ul> </li> <li> <p>\u5199\u4f18\u5316 - Buffer Tree</p> <ul> <li> <p>\u4e0eLSM-Tree\u6709\u4e9b\u7c7b\u4f3c\uff0c\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u90fd\u6709\u4e00\u4e2abuffer\uff0c\u7528\u4e8e\u7f13\u5b58\u5199\u5165\u7684\u6570\u636e\uff0c\u5f53buffer\u6ee1\u4e86\u4e4b\u540e\u7ee7\u7eed\u5411\u4e0b\u5199\u5165</p> <p></p> </li> <li> <p>\u540c\u6837\u53ef\u4ee5\u5b9e\u73b0\u5927\u89c4\u6a21\u5199\u5165\u4f18\u5316\uff0c\u5e76\u4e14\u67e5\u8be2\u901f\u5ea6\u4e5f\u4e0d\u4f1a\u53d7\u5230\u592a\u5927\u5f71\u54cd</p> </li> <li> <p>\u4f46\u662f\u76f8\u6bd4LSM-Tree\uff0cBuffer Tree\u7684Random I/O\u8fd8\u662f\u4f1a\u76f8\u5bf9\u591a\u4e00\u4e9b\uff0c\u56e0\u4e3a\u6ca1\u6709\u4e25\u683c\u4fdd\u6301\u6709\u5e8f </p> </li> </ul> </li> </ul>"},{"location":"Database/#hash","title":"Hash\u7d22\u5f15","text":"<ul> <li> <p>\u9759\u6001\u6563\u5217</p> <ul> <li> <p>\u4f7f\u7528\u6ea2\u51fa\u6876\u6765\u89e3\u51b3\u6876\u6ea2\u51fa\uff08\u6876\u4e0d\u8db3\u3001\u504f\u659c\uff09</p> </li> <li> <p>\u89e3\u51b3\u51b2\u7a81\u53ef\u4ee5\u7528\u94fe\u8868\u3001\u5f00\u653e\u5bfb\u5740\u6cd5\u7b49</p> </li> <li> <p>\u53ef\u4ee5\u5468\u671f\u6027rehash, \u76f8\u5f53\u4e8e\u91cd\u5efa\u6574\u4e2a\u54c8\u5e0c\u8868\uff0c\u4f46\u662f\u4ee3\u4ef7\u8f83\u9ad8 </p> </li> </ul> </li> <li> <p>\u52a8\u6001\u6563\u5217</p> <ul> <li> <p>Periodic ReHashing\uff0c\u5468\u671f\u6027\u7ffb\u500d</p> </li> <li> <p>Linear Hashing\uff0c \u589e\u5927rehash\u7684\u6761\u4ef6</p> </li> <li> <p>Extendable Hashing\uff0c\u751f\u6210\u7684\u54c8\u5e0c\u503c\u4e3a\u591a\u4f4d\uff0c\u4f46\u4f7f\u7528\u7684\u504f\u79fb\u5730\u5740\u7684\u4f4d\u6570\u662f\u9010\u6e10\u589e\u52a0\u7684</p> </li> </ul> </li> </ul>"},{"location":"Database/#bitmap","title":"Bitmap\u7d22\u5f15","text":"<ul> <li> <p>\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u6570\u7ec4\uff0c\u9002\u7528\u4e8e\u6570\u636e\u91cf\u5927\uff0c\u53d6\u503c\u8303\u56f4\u5c0f\u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u53ef\u4ee5\u964d\u4f4e\u7d22\u5f15\u7684\u7a7a\u95f4\u4ee3\u4ef7</p> </li> <li> <p>\u6838\u5fc3\u4f18\u52bf\u5728\u4e8e\u4f4d\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5feb\u901f\u8fdb\u884c\u4f4d\u8fd0\u7b97\uff0c\u5982AND\u3001OR\u3001NOT\u7b49\uff0c\u56e0\u6b64\u9002\u7528\u4e8e\u591a\u503c\u67e5\u8be2\uff0c\u5982\u591a\u503c\u67e5\u8be2\u3001\u8303\u56f4\u67e5\u8be2\u7b49</p> </li> </ul>"},{"location":"Database/#_31","title":"\u5341\u4e94\u7ae0 \u67e5\u8be2\u64cd\u4f5c","text":"<p>\u5bf9\u6570\u636e\u5e93\u7684\u4efb\u4f55\u4e00\u4e2a\u67e5\u8be2\u64cd\u4f5c\u90fd\u5927\u81f4\u53ef\u4ee5\u5206\u4e3a\u4e00\u4e0b\u4e09\u4e2a\u6b65\u9aa4\uff1a</p> <ol> <li>\u89e3\u6790\u548c\u7ffb\u8bd1\uff1a\u68c0\u67e5\u6240\u8f93\u5165\u8bed\u53e5\u7684\u8bed\u6cd5\u6b63\u786e\u6027\uff0c\u5e76\u5c06\u5176\u7ffb\u8bd1\u6210\u673a\u5668\u80fd\u591f\u8bfb\u61c2\u7684\u5f62\u5f0f\u3002</li> <li>\u4f18\u5316\uff1a\u4ece\u4f17\u591a\u53ef\u9009\u7684\u6267\u884c\u65b9\u6cd5\u4e2d\u9009\u62e9\u6700\u4f18\u7684\u4e00\u79cd\u65b9\u6cd5\u3002</li> <li>\u6267\u884c\uff1a\u6309\u7167\u524d\u4e00\u6b65\u51b3\u5b9a\u7684\u65b9\u6cd5\u6267\u884c\u5e76\u8fd4\u56de\u7ed3\u679c\u3002</li> </ol> <p>\u672c\u7ae0\u7684\u76ee\u7684\u662f\u4ecb\u7ecd\u4e09\u79cd\u6700\u5e38\u7528\u7684\u67e5\u8be2\u8bed\u53e5\u5185\u90e8\u53ef\u4f9b\u9009\u62e9\u7684\u5b9e\u73b0\u65b9\u6cd5\uff0c\u4ee5\u53ca\u5bf9\u5e94\u7684\u590d\u6742\u5ea6\u8ba1\u7b97\uff0c\u6700\u540e\u7b80\u8981\u4ecb\u7ecd\u8bed\u53e5\u5b58\u5728\u590d\u6742\u5d4c\u5957\u65f6\u7684\u6d41\u6c34\u7ebf\u6267\u884c\u65b9\u6cd5\u3002</p>"},{"location":"Database/#seek","title":"Seek","text":"<p>Seek\u65f6\u95f4\u5305\u542b\u78c1\u76d8\u5bfb\u9053\uff08ts\uff09\u548c\u6570\u636e\u8bfb\u53d6\uff08tr\uff09\u4e24\u90e8\u5206\u5f00\u9500\u3002\u6839\u636e\u7ecf\u9a8c\uff0c\u5bf9HDD\uff0c\u4e00\u6b21\u5bfb\u9053\u6240\u9700\u7684\u65f6\u95f4\u7ea6\u7b49\u4e8e40\u5355\u4f4d\u6570\u636e\u8bfb\u53d6\u6240\u9700\u7684\u65f6\u95f4\uff0c\u800c\u5bf9SSD\u8fd9\u4e2a\u6570\u5b57\u5927\u7ea6\u662f10\u3002</p> <p>\u672c\u8282\u4e2dseek\u4e13\u6ce8\u4e8e\u78c1\u76d8\u5f00\u9500\uff0c\u4e0d\u8003\u8651CPU\u7b49\u5468\u8fb9\u8bbe\u5907\u3002</p> <p></p> <p>\u4ee5\u4e0b\u662f\u4e00\u56fe\u6d41\u6d53\u7f29\u7248\u3002</p> <p></p>"},{"location":"Database/#_32","title":"\u8be6\u89e3","text":""},{"location":"Database/#a1-linear-scan","title":"A1 (Linear Scan)","text":"<p>\u5373\u7ebf\u6027\u641c\u7d22\uff0c\u6bcf\u4e00\u6b21seek\u6240\u9700\u7684\u6700\u574f\u65f6\u95f4\u662f\\(b_r\\times t_r+t_s\\)\uff0c\u5176\u4e2dbr\u662f\u603b\u6570\u636e\u91cf\u3002</p> <p>\u610f\u4e49\u662f\uff0c\u5982\u679c\u5047\u5b9a\u6240\u6709\u6570\u636e\u987a\u5e8f\u5b58\u653e\uff0c\u987a\u5e8f\u67e5\u627e\u53ea\u9700\u8981\u4e00\u6b21\u5bfb\u9053\uff0c\u4f46\u662f\u53ef\u80fd\u9700\u8981\u5b8c\u6574\u8bfb\u53d6\u6240\u6709\u6570\u636e\u624d\u80fd\u627e\u5230\u6240\u67e5\u627e\u7684\u91cf\u3002</p>"},{"location":"Database/#a2a3-primary-index-scan","title":"A2/A3 (Primary Index Scan)","text":"<p>\u672c\u8282\u8ba8\u8bba\u67e5\u8be2\u7684\u6761\u4ef6\u5305\u542b\u4e3b\u952e\u7684\u60c5\u51b5\u3002</p> <ul> <li>\u5229\u7528\u7a20\u5bc6\u7684\u4e3b\u7d22\u5f15\u8fdb\u884c\u641c\u7d22\uff0c\u6bcf\u4e00\u6b21seek\u6240\u9700\u7684\u6700\u574f\u65f6\u95f4\u662f\\((h_i+1)\\times (t_r+t_s)\\)\uff0c\u5176\u4e2dhi\u662f\u7d22\u5f15\u7684\u5c42\u6570\u3002\u4ee5B+\u6811\u7d22\u5f15\u4e3a\u4f8b\uff1a</li> </ul> <p></p> <ul> <li>\u5229\u7528\u7a00\u758f\u7684\u4e3b\u7d22\u5f15\u8fdb\u884c\u641c\u7d22\uff0c\u4e0eA2\u7684\u533a\u522b\u662f\u6700\u540e\u4e00\u5c42\u5bf9\u5e94\u7684\u6570\u636e\u5757\u4e2d\u53ef\u80fd\u6709\u591a\u4e2a\u6570\u636e\uff0c\u4e0b\u9762\u7528b\u8868\u793a\u3002</li> </ul> <p></p>"},{"location":"Database/#a4-secondary-index-scan","title":"A4 (Secondary Index scan)","text":"<p>\u5229\u7528\u8f85\u52a9\u7d22\u5f15\u8fdb\u884c\u641c\u7d22\u3002</p> <ul> <li> <p>\u5f53\u67e5\u8be2\u7684\u503c\u5305\u542b\u7f16\u5236\u8f85\u52a9\u7d22\u5f15\u7684\u503c\u65f6A4\u4e0eA2\u3001A3\u6ca1\u6709\u533a\u522b\u3002</p> </li> <li> <p>\u5f53\u67e5\u8be2\u7684\u503c\u4e0d\u5305\u542b\u7f16\u5236\u8f85\u52a9\u7d22\u5f15\u7684\u503c\u65f6\uff08\u4e60\u60ef\u8bb0\u4e3aA4\u2018\uff09\uff0c\u53ef\u4ee5\u9002\u5f53\u6539\u8fdb\u7d22\u5f15\u7684\u7ed3\u6784\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u4e86\u89e3\u5373\u53ef\uff1a</p> <p></p> </li> </ul>"},{"location":"Database/#a5a6-scan-with-comparison","title":"A5/A6 (Scan With Comparison)","text":"<p>\u672c\u8282\u8ba8\u8bba\u7684\u662f\u542b\u5355\u4e00\u6bd4\u8f83\u6761\u4ef6\u7684\u67e5\u8be2\u3002</p> <ul> <li> <p>\u5982\u679c\u5b58\u5728\u6839\u636e\u67e5\u8be2\u9879\u76ee\u7f16\u5236\u7684\u7d22\u5f15\uff0c\u60c5\u51b5\u53ef\u4ee5\u89c6\u4e3aA3\u7684\u53d8\u79cd\u3002</p> <p></p> </li> <li> <p>\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u60c5\u51b5\u89c6\u4e3aA4\u2019\u7684\u53d8\u79cd\uff0c\u4e86\u89e3\u5373\u53ef\u3002</p> <p></p> </li> </ul>"},{"location":"Database/#a7a8a9-scan-with-complex-comparisons","title":"A7/A8/A9 (Scan With Complex Comparisons)","text":"<p>\u672c\u8282\u8ba8\u8bba\u7684\u662f\u6bd4\u8f83\u6761\u4ef6\u8f83\u4e3a\u590d\u6742\u65f6\u7684\u505a\u6cd5\uff0c\u4e86\u89e3\u5373\u53ef\u3002</p> <p></p>"},{"location":"Database/#sort","title":"Sort","text":"<p>\u5f52\u5e76\u6392\u5e8f\u662fDBMS\u4e2d\u6700\u5e38\u7528\u7684\u6392\u5e8f\u65b9\u6cd5\uff0c\u5b83\u5206\u7ec4\u8fdb\u884c\u3001\u5e76\u884c\u6027\u597d\u7684\u7279\u6027\u975e\u5e38\u9002\u5408\u6570\u636e\u91cf\u5f88\u5927\u7684\u573a\u5408\u3002\u672c\u8282\u7740\u91cd\u8ba8\u8bba\u5f52\u5e76\u6392\u5e8f\u7684\u5f00\u9500\u3002</p> <p>\u5f52\u5e76\u6392\u5e8f\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3aN+1\uff0c\u8fc7\u7a0b\u5982\u56fe\u3002\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u5355\u4e2a\u7f13\u51b2\u5757\u7684\u7ed3\u6784\uff0c\u591a\u4e2a\u7f13\u51b2\u5757\u7684\u590d\u6742\u5ea6\u5206\u6790\u8bf7\u81ea\u884c\u5b8c\u6210\uff08\u53ef\u4ee5\u53c2\u8003Merge Join\u4e00\u8282\uff09\u3002</p> <p></p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u5206\u6790\u5982\u4e0b\uff0c\u6ce8\u610f\u5757\u4f20\u8f93\u91cf\u590d\u6742\u5ea6\u548cseek\u5f00\u9500\u590d\u6742\u5ea6\u542b\u4e49\u533a\u522b\u3002</p> <p></p> <p></p>"},{"location":"Database/#join_1","title":"Join","text":""},{"location":"Database/#nested-loop-join","title":"Nested-Loop Join","text":"<p>\u4ee5tuple\u4e3a\u5916\u5173\u7cfb\u7684\u5355\u4f4d\u8fdb\u884cJoin</p> <p></p> <p></p>"},{"location":"Database/#block-nested-loop-join","title":"Block Nested-Loop Join","text":"<p>\u4ecd\u7136\u662f\u5faa\u73af\u7ed3\u6784\uff0c\u4f46\u662f\u4ee5block\u4e3a\u5916\u5173\u7cfb\u7684\u5355\u4f4d\u3002</p> <p></p> <p></p> <p>\u5982\u679c\u7a7a\u95f4\u5141\u8bb8\u591a\u4e2ablock\u3002</p> <p></p>"},{"location":"Database/#indexed-nested-loop-join","title":"Indexed Nested-Loop Join","text":"<p>join\u9700\u8981\u5339\u914d\u7684\u91cf\u5982\u679c\u7f16\u5236\u4e86\u7d22\u5f15\uff0cjoin\u7684\u505a\u6cd5\u53ef\u4ee5\u4ece\u904d\u5386\u53d8\u4e3a\u67e5\u627e\u3002\u5229\u7528\u7d22\u5f15\u8fdb\u884cjoin\u7684\u590d\u6742\u5ea6\u4e3b\u8981\u53d6\u51b3\u4e8enr\u7684\u5927\u5c0f\u3002</p> <p></p> <p>\u5176\u4e2dc\u6307\u5229\u7528\u7d22\u5f15seek\u7684\u5f00\u9500\uff0c\u89c6\u7d22\u5f15\u7684\u79cd\u7c7b\u800c\u5b9a\u3002</p>"},{"location":"Database/#merge-join","title":"Merge Join","text":"<p>\u7528\u7c7b\u4f3c\u5f52\u5e76\u6392\u5e8f\u7684\u65b9\u6cd5\u8fdb\u884cjoin\uff0c\u6ce8\u610f\u8fd9\u91cc\u8ba8\u8bba\u7684\u662f\u4e24\u5f20\u8868\u4e2d\u6309\u9700\u8981\u5339\u914d\u7684\u5217\u987a\u5e8f\u5b58\u653e\u7684\u60c5\u51b5\uff0c\u5982\u679c\u4e0d\u662f\u5219\u8fd8\u8981\u5148\u6392\u5e8f\u3002\u5176\u4e2dbb\u662f\u5404\u81ea\u4f7f\u7528\u7684\u7f13\u51b2\u5757\u7684\u6570\u91cf\uff0c\u5b9e\u9645join\u53cc\u65b9\u4f7f\u7528\u7684\u7f13\u51b2\u5757\u6570\u91cf\u53ef\u4ee5\u4e0d\u76f8\u7b49\u3002</p> <p></p>"},{"location":"Database/#hash-join","title":"Hash Join","text":"<p>\u54c8\u5e0cjoin\u662f\u4e3ajoin\u4e2d\u9700\u8981\u5339\u914d\u7684\u5c5e\u6027\u7f16\u5236\u54c8\u5e0c\u8868\uff0c\u7136\u540e\u9010\u54c8\u5e0c\u8868\u5206\u5757\u8fdb\u884c\u3002\u6bd4\u8f83\u7279\u522b\u7684\u662f\uff0c\u54c8\u5e0c\u5206\u5757\u7684\u5927\u5c0f\u548cblock\u5927\u5c0f\u4e0d\u4e00\u5b9a\u5339\u914d\uff0c\u4f1a\u6709\u7a7a\u95f4\u7684\u6d6a\u8d39\uff0c\u56e0\u6b64\u8ba1\u7b97\u5206\u5757\u6570\u91cf\u65f6\u9700\u8981\u8865\u4e00\u4e2a\u4fee\u6b63\u56e0\u5b50\u3002</p> <p></p> <p></p> <p>\u5982\u679chash\u8868\u5bf9\u5e94\u7684\u5206\u5757\u8fd8\u662f\u8fc7\u5927\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5206\u5757\u4ee5\u9002\u5e94\u5185\u5b58\uff0c\u79f0\u4e3aRecursive Partition\u3002</p> <p></p> <p>\u6240\u4ee5\u590d\u6742\u5ea6\u4e3a\u3002</p> <p></p> <p></p>"},{"location":"Database/#pipeline","title":"Pipeline","text":"<p>\u6d41\u6c34\u7ebf\u662f\u6bcf\u4e00\u6761\u67e5\u8be2\u64cd\u4f5c\u5185\u90e8\u7684\u62bd\u8c61\u5b9e\u73b0\u65b9\u5f0f\u3002</p> <p>\u4ece\u63a8\u52a8\u903b\u8f91\u53ef\u4ee5\u5212\u5206\u4e3a\u4e24\u7c7b\u3002</p> <p></p> <p>\u6bcf\u4e00\u4e2a\u73af\u8282\u53c8\u53ef\u4ee5\u5212\u5206\u6210\u4e09\u4e2a\u9636\u6bb5\uff0c\u4e0b\u9762\u4ee5demand-driven pipeline\u4e3a\u4f8b\u3002</p> <p></p>"},{"location":"Database/#_33","title":"\u5341\u516d\u7ae0 \u67e5\u8be2\u4f18\u5316","text":"<p>\u5bf9\u6570\u636e\u5e93\u7684\u4efb\u4f55\u4e00\u4e2a\u67e5\u8be2\u64cd\u4f5c\u90fd\u5927\u81f4\u53ef\u4ee5\u5206\u4e3a\u4e00\u4e0b\u4e09\u4e2a\u6b65\u9aa4\uff1a</p> <ol> <li>\u89e3\u6790\u548c\u7ffb\u8bd1\uff1a\u68c0\u67e5\u6240\u8f93\u5165\u8bed\u53e5\u7684\u8bed\u6cd5\u6b63\u786e\u6027\uff0c\u5e76\u5c06\u5176\u7ffb\u8bd1\u6210\u673a\u5668\u80fd\u591f\u8bfb\u61c2\u7684\u5f62\u5f0f\u3002</li> <li>\u4f18\u5316\uff1a\u4ece\u4f17\u591a\u53ef\u9009\u7684\u6267\u884c\u65b9\u6cd5\u4e2d\u9009\u62e9\u6700\u4f18\u7684\u4e00\u79cd\u65b9\u6cd5\u3002</li> <li>\u6267\u884c\uff1a\u6309\u7167\u524d\u4e00\u6b65\u51b3\u5b9a\u7684\u65b9\u6cd5\u6267\u884c\u5e76\u8fd4\u56de\u7ed3\u679c\u3002</li> </ol> <p>\u672c\u7ae0\u7684\u76ee\u7684\u662f\u5177\u4f53\u5b9e\u73b0\u5982\u4f55\u9009\u62e9\u6267\u884c\u8bed\u53e5\u7684\u6700\u4f18\u65b9\u6848\uff0c\u5927\u81f4\u53c8\u53ef\u4ee5\u5206\u4e3a\u4e24\u6b65\uff1a</p> <ol> <li> <p>\u5217\u51fa\u4e0e\u5f53\u524d\u8bed\u53e5\u7b49\u4ef7\u7684\u5185\u90e8\u6267\u884c\u65b9\u6848</p> <p>\u8fd9\u91cc\u7684\u6267\u884c\u65b9\u6848\u65e2\u5305\u62ec\u4f8b\u5982\u4ea4\u6362\u7ed3\u5408\u7b49\u903b\u8f91\u5c42\u9762\u7684\u5185\u5bb9\uff0c\u4e5f\u5305\u62ec\u5177\u4f53\u4f7f\u7528\u54ea\u4e00\u79cd\u7d22\u5f15\u65b9\u6cd5\u7b49\u5b9e\u73b0\u5c42\u9762\u7684\u5185\u5bb9\u3002</p> </li> <li> <p>\u5feb\u901f\u4f30\u7b97\u6bcf\u4e00\u79cd\u6267\u884c\u65b9\u6848\u7684\u590d\u6742\u5ea6\u5e76\u9009\u5176\u4e2d\u6700\u4f18\u7684\u4e00\u79cd</p> </li> </ol>"},{"location":"Database/#equivalence-rules","title":"Equivalence Rules","text":"<p>\u5e38\u7528\u7684\u903b\u8f91\u5c42\u9762\u7684\u7b49\u4ef7\u5173\u7cfb\u6709\uff1a</p> <ul> <li> <p>\\(\\sigma\\)\u6761\u4ef6\u7684\u5206\u89e3\u548c\u4ea4\u6362     $$     \\sigma_{\\theta_1 \\wedge \\theta_2}(E) = \\sigma_{\\theta_1}(\\sigma_{\\theta_2}(E)) =  \\sigma_{\\theta_2}(\\sigma_{\\theta_1}(E))     $$</p> </li> <li> <p>\\(\\sigma\\)\u9009\u62e9\u7b1b\u5361\u5c14\u79ef\u7b49\u4ef7\u4e8e\u6761\u4ef6\u8fde\u63a5\uff08\u540e\u8005\u4e00\u822c\u66f4\u5feb\uff09     $$     \\begin{aligned}     \\sigma_\\theta(E_1\\times E_2) &amp; =E_1\\Join_\\theta E_2     \\end{aligned}     $$</p> </li> <li> <p>\\(\\sigma\\)\u7684\u6761\u4ef6\u53ef\u4ee5\u548c\u6761\u4ef6\u8fde\u63a5\u5408\u5e76\uff0c\u6709\u65f6\u4e5f\u53ef\u4ee5\u5206\u914d\u7ed9\u8fde\u63a5\u7684\u5bf9\u8c61     $$     \\sigma_{\\theta_1}(E_1\\Join_{\\theta_2} E_2) = E_1 \\Join_{\\theta_1 \\wedge \\theta_2}E_2\\     \\     \\sigma_{\\theta_1 \\wedge \\theta_2}(E_1 \\Join_\\theta E_2)=(\\sigma_{\\theta_1}(E_1))\\Join_\\theta(\\sigma_{\\theta_2}(E_2))\\     when\\ \\theta_1,\\theta_2\\ involve\\ attributes\\ only\\ in\\ E_1, E_2\\ perspectively.     $$</p> </li> <li> <p>\u4e0d\u5206\u5185\u5916\u5173\u7cfb\u7684\u8fde\u63a5\u53ef\u4ea4\u6362     $$     E_1 \\Join_{(\\theta)}E_2 = E_2 \\Join_{(\\theta)}E_1     $$</p> </li> <li> <p>\u81ea\u7136\u8fde\u63a5\u53ef\u7ed3\u5408\uff0c\u6761\u4ef6\u8fde\u63a5\u6709\u65f6\u53ef\u7ed3\u5408     $$     (E_1 \\Join E_2) \\Join E_3 = E_1 \\Join (E_2 \\Join E_3)\\     \\     (E_1 \\Join_{\\theta_1} E_2)\\Join_{\\theta_2 \\wedge \\theta_3} E_3 =          E_1 \\Join_{\\theta_1 \\wedge \\theta_3} (E_2 \\Join_{\\theta_2} E_3)\\     when\\ \\theta_2\\ involves\\ attributes\\ only\\ in\\ E_2\\ and\\ E_3     $$</p> </li> <li> <p>\\(\\Pi\\)\u6761\u4ef6\u53ef\u5206\u914d     $$     \\Pi_{L_1 \\cup L_2}(E_1 \\Join_{(\\theta)}E_2)=(\\Pi_{L_1}(E_1))\\Join_{(\\theta)}(\\Pi_{L_2}(E_2))\\     when\\ L_1, L_2\\ involve\\ attributes\\ only\\ in\\ E_1,E_2\\ perspectively.     $$</p> </li> <li> <p>\\(\\Pi\\)\u6761\u4ef6\u53ef\u5408\u5e76     $$     \\Pi_{\\theta_1}(\\Pi_{\\theta_2}(\\Pi_{\\theta_3}...(\\Pi_{\\theta_n}(E)))) = \\Pi_{\\theta_{commom}}(E)\\     \\theta_{commom}\u662f\\theta_1\u5230\\theta_n\u7684\u4ea4\u96c6     $$</p> </li> <li> <p>\u8fd8\u6709\u5404\u79cd\u96c6\u5408\u7684\u8fd0\u7b97\u5f8b\u63a8\u5e7f</p> <p></p> <p></p> </li> </ul> <p>\u5e38\u7528\u7684\u5957\u8def\u6709</p> <ul> <li>\u9009\u62e9\u63d0\u524d\u505a\uff0c\u51cf\u5c11\u4e0d\u9700\u8981\u7684\u5217</li> <li>\u8fde\u7eed\u7684join\u5148\u505a\u7ed3\u679c\u8f83\u5c11\u7684\uff0c\u51cf\u5c11\u4e2d\u95f4\u7ed3\u679c\u9700\u8981\u7684\u7a7a\u95f4</li> </ul> <p>\u5b9e\u9645\u4f7f\u7528\u4e2d\u5f80\u5f80\u662f\u5f15\u7528\u7ecf\u9a8c\u5f0f\u7684\u89c4\u5219\uff0c\u60f3\u8981\u5217\u51fa\u6240\u6709\u53ef\u80fd\u7684\u5b9e\u73b0\u903b\u8f91\u4e00\u822c\u662f\u4e0d\u53ef\u80fd\u7684\u3002</p>"},{"location":"Database/#statistical-cost-estimation","title":"Statistical Cost Estimation","text":"<p>\u4ee5\u4e0b\u662f\u5e38\u7528\u7684\u7528\u4e8e\u4f30\u7b97\u590d\u6742\u5ea6\u7684\u8868\u4fe1\u606f\uff0c\u5bf9\u6570\u636e\u5e93\u4e2d\u7684\u8868\u8fd9\u4e9b\u6570\u636e\u5f80\u5f80\u662f\u73b0\u6210\u5e76\u4e14\u5b9a\u671f\u66f4\u65b0\u7684\uff0c\u96be\u70b9\u5728\u4e8e\u4e2d\u95f4\u7ed3\u679c\u7684\u4fe1\u606f\u4f30\u7b97\u3002</p> <p></p>"},{"location":"Database/#selection-size-estimation","title":"Selection Size Estimation","text":"<ul> <li>\u5355\u4e2a\u5c5e\u6027\u9009\u62e9\u8ba4\u4e3a\u6570\u636e\u5747\u5300\u5206\u5e03\uff1a<ul> <li>\u7b49\u4e8e\u6761\u4ef6\u67e5\u8be2\uff0c\\(\\frac{\u8fd4\u56deSize}{\u6574\u4e2a\u8868Size}=\\frac{1}{\u67e5\u8be2\u6761\u4ef6\u603b\u6570}\\)</li> <li>\u8303\u56f4\u6761\u4ef6\u67e5\u8be2\uff0c\\(\\frac{\u8fd4\u56deSize}{\u6574\u4e2a\u8868Size}=\\frac{\u67e5\u8be2\u7684\u8303\u56f4}{\u603b\u8303\u56f4\u5373max-min}\\)</li> </ul> </li> <li>\u591a\u4e2a\u5c5e\u6027\u9009\u62e9\u65f6\u8ba4\u4e3a\u5c5e\u6027\u4e4b\u95f4\u72ec\u7acb\u5206\u5e03\uff1a</li> </ul>"},{"location":"Database/#join-size-estimation","title":"Join Size Estimation","text":"<ul> <li> <p>\u4e24\u5f20\u8868\u6ca1\u6709\u7528\u4e8e\u5339\u914d\u7684\u5217\u65f6\uff0c\u8fd4\u56de\u5927\u5c0f\u662f\u4e24\u8005\u5927\u5c0f\u4e4b\u79ef</p> </li> <li> <p>\u4e00\u822c\u60c5\u51b5\u4e0b\u4f30\u7b97\u5982\u4e0b</p> <p></p> </li> <li> <p>\u4e24\u5f20\u8868\u5b58\u5728\u5916\u952e\u7ea6\u675f\u65f6\uff0c\u8fd4\u56de\u503c\u4e0d\u5927\u4e8e\u88ab\u7ea6\u675f\u7684\u8868\u7684\u5927\u5c0f</p> </li> <li> <p>\u4e24\u5f20\u8868\u7528\u4e8e\u5339\u914d\u7684\u5217\u662f\u5176\u4e00\u7684Key\u65f6\uff0c\u8fd4\u56de\u503c\u4e0d\u5927\u4e8e\u53e6\u4e00\u5f20\u8868\u7684\u5927\u5c0f</p> </li> </ul>"},{"location":"Database/#other-estimations","title":"Other Estimations","text":""},{"location":"Database/#estimation-of-distinct-value","title":"Estimation of Distinct Value","text":""},{"location":"Database/#cost-base-optimize","title":"Cost Base Optimize","text":"<p>\u4e3b\u8981\u601d\u60f3\u5982\u4e0b\uff1a</p> <ol> <li>\u5c40\u90e8\u6700\u4f18\u89e3\u4e0d\u4e00\u5b9a\u662f\u6574\u4f53\u6700\u4f18\u89e3<ul> <li>hash-join\u4e00\u822c\u66f4\u5feb\uff0c\u4f46merge-join\u5f97\u5230\u7684\u7ed3\u679c\u662f\u6709\u5e8f\u7684</li> <li>\u5d4c\u5957\u7684\u8bed\u53e5\u8ba1\u7b97\u91cf\u4e0d\u4e00\u5b9a\u6700\u5c0f\uff0c\u4f46\u662f\u53ef\u4ee5\u914d\u5408\u6d41\u6c34\u7ebf\u63d0\u9ad8\u6267\u884c\u6548\u7387\uff0c\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6\u53cd\u800c\u5c0f</li> </ul> </li> <li>\u9002\u5f53\u7684\u9009\u62e9\u8ba1\u5212\u9014\u5f84\uff0c\u53ef\u4ee5\u5217\u51fa\u6240\u6709\u9009\u9879\u8fd8\u662f\u4f7f\u7528\u542f\u53d1\u5f0f\u641c\u7d22</li> </ol> <p></p>"},{"location":"Database/#join-order-selection","title":"Join-Order Selection","text":"<p>\u8fde\u7eedJoin\u7684\u987a\u5e8f\u9009\u62e9\u662f\u6700\u7ecf\u5178\u7684\u4e00\u7c7b\u4f18\u5316\u95ee\u9898\u3002</p> <p></p> <p>\u5f80\u5f80\u91c7\u7528\u52a8\u6001\u89c4\u5212\u65b9\u6cd5\uff0c\u4f2a\u4ee3\u7801\u8981\u4f1a\uff1a</p> <p></p> <p></p> <p></p> <p>\u4e0b\u9762\u662f\u4e00\u4e9b\u5df2\u7ecf\u8bc1\u660e\u7684\u590d\u6742\u5ea6\u7ed3\u8bba\u3002</p> <p></p>"},{"location":"Database/#heuristic-optimize","title":"Heuristic Optimize","text":"<p>\u4f7f\u7528\u4e00\u822c\u6027\u7684\u7ecf\u9a8c\u505a\u542f\u53d1\u6027\u7684\u4f18\u5316\uff0c\u672c\u8282\u4e86\u89e3\u5e38\u89c1\u7684\u4f18\u5316\u4e60\u60ef\u5373\u53ef\u3002</p> <p></p>"},{"location":"Database/#nested-subqueries-optimize","title":"Nested Subqueries Optimize","text":"<p>\u9996\u5148\u4e86\u89e3\u76f8\u5173\u53d8\u91cf\u548c\u76f8\u5173\u6267\u884c\u4e24\u4e2a\u8bcd\u7684\u542b\u4e49\uff1a</p> <p></p> <p>\u5bf9\u5d4c\u5957\u67e5\u8be2\u8bed\u53e5\u4f18\u5316\uff0c\u9700\u8981\u5b66\u4e60\u534a\u8fde\u63a5\u7684\u7528\u6cd5\uff1a</p> <ul> <li>\u68c0\u67e5\u4e00\u4e2a\u7ed3\u679c\u96c6\uff08\u5916\u8868\uff09\u7684\u8bb0\u5f55\u662f\u5426\u5728\u53e6\u5916\u4e00\u4e2a\u7ed3\u679c\u96c6\uff08\u5b57\u8868\uff09\u4e2d\u5b58\u5728\u5339\u914d\u8bb0\u5f55\uff0c\u534a\u8fde\u63a5\u4ec5\u5173\u6ce8\u201d\u5b50\u8868\u662f\u5426\u5b58\u5728\u5339\u914d\u8bb0\u5f55\u201d\uff0c\u800c\u5e76\u4e0d\u8003\u8651\u201d\u5b50\u8868\u5b58\u5728\u591a\u5c11\u6761\u5339\u914d\u8bb0\u5f55\u201d\uff0c\u534a\u8fde\u63a5\u7684\u8fd4\u56de\u7ed3\u679c\u96c6\u4ec5\u4f7f\u7528\u5916\u8868\u7684\u6570\u636e\u96c6\uff0c\u67e5\u8be2\u8bed\u53e5\u4e2dIN\u6216EXISTS\u8bed\u53e5\u5e38\u4f7f\u7528\u534a\u8fde\u63a5\u6765\u5904\u7406\u3002</li> <li>\u4e0e\u4e4b\u5bf9\u5e94\u7684\u8fd8\u6709\u53cd\u534a\u8fde\u63a5\uff0c\u68c0\u67e5\u4e00\u4e2a\u7ed3\u679c\u96c6\uff08\u5916\u8868\uff09\u7684\u8bb0\u5f55\u662f\u5426\u5728\u53e6\u5916\u4e00\u4e2a\u7ed3\u679c\u96c6\uff08\u5b57\u8868\uff09\u4e2d\u5b58\u5728\u5339\u914d\u8bb0\u5f55\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b57\u8868\u4e2d\u6ca1\u6709\u5339\u914d\u8bb0\u5f55\u65f6\u5728\u8fd4\u56de\u7ed3\u679c\u96c6\u4e2d\u5305\u542b\u4ec5\u4f7f\u7528\u5916\u8868\u7684\u6570\u636e\u96c6\u3002</li> </ul> <p>\u501f\u534a\u8fde\u63a5\u5373\u53ef\u5c06\u5d4c\u5957\u5b50\u67e5\u8be2\u62c6\u6210\u5355\u7ea7\u7684\u7ed3\u6784\uff0c\u56de\u5230\u4e00\u822c\u7684\u4f18\u5316\u95ee\u9898\u3002</p> <p></p> <p></p>"},{"location":"Database/#materialized-view-maintainance","title":"Materialized View Maintainance","text":"<p>\u5dee\u5206\u7ef4\u62a4\uff1a\u53ea\u9700\u8981\u5904\u7406\u66f4\u65b0\u7684tuple\u4e0e\u5176\u4ed6\u8868\u7684\u6570\u636e\u5173\u7cfb\u5373\u53ef\uff0c\u4e0d\u9700\u8981\u5168\u4f53\u91cd\u65b0\u8ba1\u7b97\u3002\u4e0b\u56fe\u4e2dir\u3001dr\u6307\u65b0\u52a0\u5165\u3001\u65b0\u5220\u9664\u7684tuple\uff0c\u6709\u5176\u4ed6\u5173\u7cfb\u4ee3\u6570\u7684view\u5904\u7406\u903b\u8f91\u4e5f\u662f\u76f8\u540c\u7684\uff0c\u5728\u6b64\u4ec5\u7528\u6700\u7b80\u5355\u7684Join\u505a\u4f8b\u5b50\u3002</p> <p></p> <p>\u7ef4\u62a4\u542bAggregate Operation\u7684view\u6ce8\u610f\u6709\u65f6\u9700\u8981\u989d\u5916\u7ef4\u62a4\u8fc7\u7a0b\u91cf\uff0c\u4f8b\u5982view\u4e2d\u6709\u5e73\u5747\u503c\u65f6\u53ef\u4ee5\u989d\u5916\u7ef4\u62a4sum\u548ccount\u4fbf\u4e8e\u540e\u7eed\u6709\u63d2\u5165\u548c\u5220\u9664\u65f6\u80fd\u591f\u5dee\u5206\u66f4\u65b0\u800c\u4e0d\u9700\u8981\u5168\u8868\u91cd\u65b0\u7edf\u8ba1\u3002</p>"},{"location":"Database/#transaction","title":"\u5341\u4e03\u7ae0 Transaction","text":"<p>Transaction\u76f4\u8bd1\u4e3a\u4e8b\u7269\uff0c\u662f\u4e00\u6b21\u6570\u636e\u5e93\u64cd\u4f5c\u82e5\u5e72\u6267\u884c\u64cd\u4f5c\u7ec4\u6210\u7684\u62bd\u8c61\u6982\u5ff5\u3002Transaction\u7684\u63d0\u51fa\u662f\u4e3a\u4e86\u7ef4\u62a4\u6570\u636e\u7684\u5b8c\u6574\u6027\u3002</p>"},{"location":"Database/#acid","title":"ACID","text":"<p>Transation\u7684\u5b9e\u73b0\u8981\u6c42\u56db\u4e2a\u7279\u6027ACID\uff1a</p> <ul> <li>Automicity\u539f\u5b50\u6027\uff1a\u8981\u4e48Transaction\u5185\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u6210\u529f\u8981\u4e48\u90fd\u5931\u8d25\u56de\u6eda\uff0c\u4e0d\u5141\u8bb8\u90e8\u5206\u6210\u529f\u90e8\u5206\u5931\u8d25\u3002</li> <li>Consistency\u4e00\u81f4\u6027\uff1aTransaction\u7684\u53d1\u751f\u524d\u540e\u5e94\u8be5\u4fdd\u8bc1\u6570\u636e\u4e0e\u64cd\u4f5c\u903b\u8f91\u4e00\u81f4\u3002</li> <li>Isolation\u9694\u79bb\u6027\uff1aTransaction\u5e94\u8be5\u5bf9\u4e0a\u5c42\u9690\u85cf\u5e76\u53d1\u5b9e\u73b0\uff0c\u65e0\u8bba\u5e76\u53d1\u7684Transaction\u5728\u5185\u90e8\u4ee5\u4ec0\u4e48\u987a\u5e8f\u6267\u884c\uff0c\u90fd\u8981\u4fdd\u8bc1\u8fd4\u56de\u7684\u7ed3\u679c\u6b63\u786e\u4e14\u5177\u4f53\u5b9e\u73b0\u8fc7\u7a0b\u548c\u5e76\u53d1\u4fe1\u606f\u4e0e\u4e0a\u5c42\u9694\u79bb\uff0c\u64cd\u4f5c\u7684\u4e2d\u95f4\u7ed3\u679c\u5bf9\u4e0a\u5c42\u4e5f\u662f\u9690\u85cf\u7684\u3002</li> <li>Durability\u6301\u4e45\u6027\uff1a\u6570\u636e\u5fc5\u987b\u88ab\u5b89\u5168\u7684\u4fdd\u5b58\u540eTransaction\u624d\u80fd\u7ed3\u675f\uff0c\u4f8b\u5982\u65ad\u7535\u7b49\u7b49\u610f\u5916\u4e0d\u80fd\u5bf9\u5df2\u7ed3\u675f\u7684Transaction\u7684\u7ed3\u679c\u6570\u636e\u9020\u6210\u4efb\u4f55\u5f71\u54cd\u3002</li> </ul> <p>\u4e3a\u4e86\u5b9e\u73b0ACID\uff0c\u6211\u4eec\u4e3aTransaction\u5b9a\u4e49\u4e86\u591a\u79cd\u72b6\u6001\uff1a</p> <ul> <li>Active\uff1a\u6b63\u5728\u6267\u884c</li> <li>Failed\uff1a\u51fa\u73b0\u9519\u8bef\uff0c\u7ec8\u6b62</li> <li>Aborted\uff1a\u53d1\u751f\u9519\u8bef\u4e4b\u540e\uff0c\u6b63\u5728\u5c1d\u8bd5\u5584\u540e<ul> <li>\u53ef\u80fd\u662frestart\uff0c\u4f8b\u5982\u8bfb\u5199\u7684\u6570\u636e\u9875\u548c\u5176\u4ed6Transaction\u51b2\u7a81</li> <li>\u53ef\u80fd\u662fkill\uff0c\u4f8b\u5982\u8fd9\u4e2aTransaction\u672c\u8eab\u4e0d\u6ee1\u8db3\u4e00\u4e9b\u8981\u6c42\uff0c\u4e0d\u53ef\u80fd\u88ab\u987a\u5229\u6267\u884c</li> <li>\u4e24\u79cd\u53ef\u80fd\u7684\u64cd\u4f5c\u5728\u4e0b\u56fe\u4e2d\u672a\u753b\u51fa</li> </ul> </li> <li>Partially Committed\uff1a\u903b\u8f91\u64cd\u4f5c\u5df2\u7ecf\u6267\u884c\u5b8c\u6bd5\uff0c\u4f46\u662f\u76f8\u5173\u6570\u636e\u53ef\u80fd\u8fd8\u5728buffer\u6216\u8005\u6b63\u5728\u8fdb\u884c\u5199\u56de</li> <li>Committed\uff1a\u6570\u636e\u5b8c\u6574\u5199\u56de\uff0cTransaction\u6b63\u5f0f\u7ed3\u675f</li> </ul> <p></p> <p>ACID\u4e2d\u6700\u96be\u5b9e\u73b0\u7684\u662f\u5e76\u53d1\u63a7\u5236\uff0c\u8fd9\u4e5f\u662f\u672c\u7ae0\u7684\u91cd\u70b9\u5185\u5bb9\u3002</p>"},{"location":"Database/#_34","title":"\u5e76\u53d1\u63a7\u5236","text":"<p>\u9996\u5148\u5f15\u5165Schedule\u7684\u6982\u5ff5\uff1a\u6307\u5e76\u53d1Transaction\u7684\u5404\u4e2a\u5b50\u64cd\u4f5c\u5728DBMS\u5185\u90e8\u7684\u5177\u4f53\u6267\u884c\u6b65\u9aa4\u3002</p> <p>\u73b0\u5728\u7ed9\u51fa\u4e24\u4e2a\u5e76\u53d1\u7684\u64cd\u4f5c\uff1aLet T1 transfer $50 from A to B, and T2 transfer 10% of the balance from A to B\uff0c\u53ef\u80fd\u7684Schedule\u6709\uff1a</p> <ul> <li> <p>\u4e32\u884c\u8c03\u5ea6\uff1a\u51e0\u4e2a\u4e00\u8d77\u6765\u6211\u90fd\u4e00\u4e2a\u4e00\u4e2a\u6267\u884c\uff0c\u975e\u5e38\u5bb9\u6613\u4fdd\u8bc1\u6570\u636e\u4e00\u81f4\u4f46\u662f\u6027\u80fd\u4f4e\u4e0b\u3002\u6ce8\u610f\u5728\u4e25\u683c\u7684\u5e76\u53d1\u8bed\u5883\u4e0b\uff0c\u53ea\u8981\u6ca1\u6709\u7834\u574f\u6570\u636e\u4e00\u81f4\u6027\uff0c\u4e24\u4e2a\u64cd\u4f5c\u65e0\u8bba\u5148\u6267\u884c\u54ea\u4e00\u4e2a\u90fd\u53ef\u4ee5\u8ba4\u4e3a\u662f\u6b63\u786e\u7684\u3002</p> <p></p> </li> <li> <p>\u5e76\u884c\u8c03\u5ea6\uff1a\u5b9e\u9645\u5185\u90e8\u5e76\u4e0d\u662f\u5148\u5b8c\u6574\u6267\u884c\u4e00\u4e2a\u518d\u53e6\u4e00\u4e2a\uff0c\u6027\u80fd\u4e0a\u9650\u9ad8\u4f46\u662f\u6570\u636e\u5f88\u5bb9\u6613\u4e0d\u4e00\u81f4\u3002\u4f8b\u5982\u4e0b\u56fe\u4e2dS3\u662f\u4e00\u4e2a\u597d\u7684\u5e76\u884c\u8c03\u5ea6\u4f46\u662fS4\u4e0d\u662f\uff0c\u5b83\u7834\u574f\u4e86\u4e00\u81f4\u6027\u3002</p> <ul> <li>\u597d\u7684\u5e76\u884c\u8c03\u5ea6\u4e0e\u4e32\u884c\u8c03\u5ea6\u7684\u7ed3\u679c\u5e94\u8be5\u76f8\u540c\uff08S3\u4e0eS1\uff09\uff0c\u610f\u5473\u7740\u4e0a\u5c42\u59cb\u7ec8\u53ef\u4ee5\u6309\u7167\u4e25\u683c\u4e32\u884c\u6765\u7406\u89e3\u548c\u8c03\u7528\u6570\u636e\u5e93\u5373\u4f7f\u5176\u5185\u90e8\u5e76\u4e0d\u4e00\u5b9a\u662f\u4e32\u884c\u8c03\u5ea6\u3002\u8fd9\u5c31\u662fIsolation\u3002</li> </ul> <p></p> </li> </ul>"},{"location":"Database/#schedule-serialize","title":"Schedule Serialize","text":"<p>\u672c\u4e66\u5e76\u4e0d\u8003\u8651\u591a\u6761\u6307\u4ee4\u5e76\u53d1\u7684\u201c\u771f\u00b7\u5e76\u884c\u8c03\u5ea6\u201d\uff0c\u53ea\u5173\u6ce8\u6211\u4eec\u4ee5\u4ec0\u4e48\u7b56\u7565\u6765\u751f\u6210\u5355\u6761\u6267\u884c\u5e8f\u5217\u3002</p> <p>\u6bcf\u4e2aTransaction\u53ef\u4ee5\u5206\u4e3a\u82e5\u5e72\u6b21\u8bfb\u3001\u8fd0\u7b97\u3001\u5199\uff0c\u5176\u4e2d\u4f1a\u53d1\u751f\u6570\u636e\u4e0d\u4e00\u81f4\uff08Conflict\uff09\u7684\u53ea\u6709\u591a\u4e2aTransaction\u5e76\u53d1\u8bfb\u5199\u540c\u4e00\u4e2a\u6570\u636e\u8fd9\u4e00\u79cd\u60c5\u51b5\uff08\u5168\u90e8\u53ea\u8bfb\u4e0d\u4f1a\u53d1\u751f\u51b2\u7a81\uff0c\u8fd0\u7b97\u7531CPU\u800c\u4e0d\u662fDBMS\u8d1f\u8d23\uff09\u3002\u6240\u4ee5\u4e0b\u9762\u6211\u4eec\u53ea\u5173\u6ce8\u6709\u8bfb\u6709\u5199\u8fd9\u4e00\u79cd\u60c5\u51b5\u3002</p> <p></p>"},{"location":"Database/#conflict-serializability","title":"Conflict Serializability","text":"<ul> <li> <p>\u5982\u679cS\u53ef\u4ee5\u901a\u8fc7\u4ea4\u6362\u76f8\u4e92\u4e0d\u51b2\u7a81\u7684\u8bed\u53e5\u8f6c\u6362\u4e3aS\u2018\uff0c\u6216\u8005\u8bf4S\u4e0eS\u2018\u6240\u6709\u76f8\u4e92\u51b2\u7a81\u7684Instructions\u4ee5\u76f8\u540c\u7684\u987a\u5e8f\u6392\u5217\uff0c\u79f0S\u548cS\u2018\u662f\u51b2\u7a81\u7b49\u4ef7\uff08conflict equivalent\uff09\u7684\u3002</p> </li> <li> <p>\u5982\u679cS\u51b2\u7a81\u7b49\u4ef7\u4e8e\u4e00\u4e2a\u4e32\u884c\u8c03\u5ea6\u5e8f\u5217\uff0c\u79f0S\u662f\u51b2\u7a81\u53ef\u4e32\u884c\u7684\uff08conflict serializable\uff09\u3002</p> <p></p> </li> <li> <p>\u5982\u679c\u5e76\u53d1\u8c03\u5ea6\u4e0b\u67d0\u4e00\u4e2aTransaction\u5931\u8d25\u9700\u8981\u56de\u6eda\u4f1a\u5e26\u52a8\u5176\u4ed6Transaction\u4e00\u8d77\u56de\u6eda\uff0c\u79f0\u4e3a\u7ea7\u8054\u56de\u6eda\uff08cascading rollback\uff09\uff0c\u5982\u679c\u4e00\u4e2a\u8c03\u5ea6\u5e8f\u5217\u4e0d\u4f1a\u5f15\u8d77\u4efb\u4f55\u7ea7\u8054\u56de\u6eda\uff0c\u79f0\u5b83\u662f\u975e\u7ea7\u8054\u5e8f\u5217\uff08cascadeless schedule\uff09\u3002\u4e0b\u56fe\u4e2d\u662f\u4e00\u4e2a\u53cd\u9762\u4f8b\u5b50\uff0c\u8fd9\u6837\u7684\u5e8f\u5217\u88ab\u8ba4\u4e3a\u662f\u4e0d\u597d\u7684\u3002</p> <ul> <li>\u5b9e\u73b0\u975e\u7ea7\u8054\u5e8f\u5217\u7684\u5177\u4f53\u8981\u6c42\u662f\uff0c\u5e76\u53d1Transaction\u4eec\u5bf9\u540c\u4e00\u4e2a\u6570\u636e\u6709\u8bfb\u6709\u5199\u65f6\uff0c\u4efb\u610f\u505a\u4e86\u5199\u5165\u7684Transaction\u5fc5\u987bcommit\uff0c\u4e0b\u4e00\u4e2aTransaction\u624d\u80fd\u4ece\u4e2d\u8bfb\u3002\u4f8b\u5982\u4e0b\u56fe\u5e8f\u5217\u6709\u5199\u4f46\u662f\u6ca1\u6709commit\uff0c\u6240\u4ee5\u4e0d\u6ee1\u8db3cascadelessness\u3002</li> </ul> <p></p> </li> <li> <p>\u5f53\u4ee5\u4e00\u4e2a\u5e76\u53d1\u8c03\u5ea6\u5e8f\u5217\u4e2d\uff0c\u5982\u679c\u4e00\u4e2atxn\u4ece\u53e6\u5916\u4e00\u4e2a\u8c03txn\u7684\u7ed3\u679c\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u90a3\u4e48\u5b83\u5e94\u8be5\u5728\u53e6\u5916txn\u7684commit\u4e4b\u540ecommit\u3002\u6ee1\u8db3\u8fd9\u4e00\u6761\u4ef6\u7684\u8c03\u5ea6\u79f0\u4e3aRecoverable\u53ef\u6062\u590d\u7684\u3002</p> </li> </ul>"},{"location":"Database/#precedence-graph","title":"Precedence Graph","text":"<p>\u5f53\u4e14\u4ec5\u5f53Precidence\u56fe\u4e2d\u65e0\u73af\uff08\u6ce8\u610f\u8fd9\u662f\u6709\u5411\u56fe\u7684\u73af\uff09\u65f6\uff0c\u67d0\u4e2aschedule\u662f\u51b2\u7a81\u53ef\u4e32\u7684\u3002</p> <p></p> <p></p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\uff1a</p> <p></p>"},{"location":"Database/#trade-off","title":"Trade Off","text":"<p>\u7b2c\u4e00\u8282\u4e2d\u5c31\u63d0\u5230\u4e86\uff0c\u4e32\u884c\u8c03\u5ea6\u6570\u636e\u5b89\u5168\u6027\u5f3a\u800c\u6027\u80fd\u5f31\uff0c\u5e76\u884c\u8c03\u5ea6\u53cd\u4e4b\u3002\u5b9e\u9645\u4f7f\u7528\u4e2d\u8fd9\u5f80\u5f80\u4e0d\u662f\u4e00\u4e2a\u9009\u62e9\u9898\uff0c\u800c\u662f\u53d6\u6298\u4e2d\u7684\u95ee\u9898\u3002\u4e0b\u9762\u5217\u51fa\u4e86\u5e38\u89c1\u7684\u56db\u79cd\u5e76\u884c\u5316\u7684\u5c42\u6b21\u3002</p> <p></p>"},{"location":"Database/#_35","title":"\u5341\u516b\u7ae0 \u5e76\u53d1\u63a7\u5236","text":"<p>\u524d\u4e00\u7ae0\u4ece\u8c03\u5ea6\u539f\u7406\u4e0a\u4ecb\u7ecd\u4e86\u5e76\u53d1\u63a7\u5236\uff0c\u800c\u672c\u7ae0\u662f\u8bb2\u89e3\u5176\u5177\u4f53\u7684\u5b9e\u73b0\u6b65\u9aa4\u3002</p>"},{"location":"Database/#lock-based-protocols","title":"Lock-Based Protocols","text":"<p>\u9501\u662fTransaction\u5bf9\u67d0\u4e2a\u6570\u636e\u7684\u6743\u9650\u7533\u8bf7\uff0c\u7531\u5e76\u53d1\u7ba1\u7406\u5668\u63a7\u5236\u3002</p> <ul> <li>exclusive (X) mode: Data item can be both read as well as written. X-lock is requested using  lock-X instruction.</li> <li>shared (S) mode: Data item can only be read. S-lock is requested using  lock-S instruction.</li> </ul> <p>\u6839\u636e\u4e0a\u8ff0\u903b\u8f91\uff0c\u5bf9\u67d0\u4e00\u5757\u6570\u636e\uff0c\u6ca1\u6709X\u9501\u65f6\u53ef\u4ee5\u5206\u4eab\u591a\u628aS\u9501\u7ed9\u4e0d\u540cTransaction\uff0c\u4f46\u662f\u5b58\u5728\u4e00\u628aX\u9501\u540e\u5c31\u4e0d\u80fd\u518d\u6709\u4efb\u4f55\u5176\u4ed6\u9501\u3002\u8fd9\u79cd\u505a\u6cd5\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u907f\u514d\u4e86\u6df7\u4e71\u7684\u8bfb\u5199\u3002</p>"},{"location":"Database/#_36","title":"\u5185\u90e8\u5b9e\u73b0","text":"<p>\u9501\u7b56\u7565\u4e00\u822c\u7684\u662fLock Table\u5b9e\u73b0\uff0c\u7528\u54c8\u5e0c\u8868\u5f52\u7c7b\u6570\u636e\uff0c\u6bcf\u4e2a\u6570\u636e\u4e0b\u8f96\u94fe\u8868\u50a8\u5b58\u5f53\u524d\u9501\u7684\u60c5\u51b5\u3002\u4f8b\u5982\u4e0b\u56fe\u4e2d17\u6570\u636e\u6d3e\u9501\u7ed9T23\uff0c123\u6570\u636e\u6d3e\u9501\u7ed9T1\u3001T8\u800cT2\u5728\u7b49\u5f85\u3002</p> <p></p>"},{"location":"Database/#_37","title":"\u5e38\u89c1\u95ee\u9898","text":"<ul> <li> <p>Dead Lock\uff1a\u9501\u534f\u8bae\u6700\u5927\u7684\u95ee\u9898\u662f\u6b7b\u9501\u4e0d\u80fd\u88ab\u5b8c\u5168\u907f\u514d\u3002</p> <p></p> </li> <li> <p>Startvation\uff1a\u53e6\u4e00\u79cd\u5e38\u89c1\u7684\u60c5\u51b5\u662f\uff0c\u6d3e\u51fa\u4e86\u8fc7\u591a\u7684S\u9501\uff0c\u5bfc\u81f4\u51fa\u73b0\u4e00\u4e2aX\u9501\u8bf7\u6c42\u65f6\uff0c\u5fc5\u987b\u7b49\u5f85\u6b64\u524dS\u9501\u5168\u90e8\u6536\u56de\uff0c\u9020\u6210\u65f6\u95f4\u6d6a\u8d39\u3002</p> </li> </ul>"},{"location":"Database/#two-phase-lock-protocols","title":"Two-phase Lock Protocols","text":"<p>\u4e3a\u4e86\u89e3\u51b3\u5404\u4e2aTransaction\u5728\u4efb\u610f\u65f6\u523b\u968f\u610f\u52a0\u9501\u89e3\u9501\u5e26\u6765\u524d\u4e00\u8282\u4e2d\u63d0\u5230\u7684\u95ee\u9898\uff0c\u51fa\u73b0\u4e86\u4e8c\u9636\u6bb5\u7684\u9501\u7b56\u7565\uff1a</p> <ul> <li>\u4e8c\u9636\u6bb5\u9501\u7b56\u75652PL\u662f\u5bf9\u5355\u4e2aTransaction\u800c\u8a00\u7684</li> <li>\u4e24\u9636\u6bb5\u9501\u5f3a\u8c03\u7684\u662f\u52a0\u9501\uff08\u589e\u957f\u9636\u6bb5\uff0cgrowing phase\uff09\u548c\u89e3\u9501\uff08\u7f29\u51cf\u9636\u6bb5\uff0cshrinking phase\uff09\u8fd9\u4e24\u9879\u64cd\u4f5c\uff0c\u4e14\u6bcf\u9879\u64cd\u4f5c\u5404\u81ea\u4e3a\u4e00\u4e2a\u9636\u6bb5\u3002<ul> <li>\u4e0d\u7ba1\u540c\u4e00\u4e2a\u4e8b\u52a1\u5185\u9700\u8981\u5728\u591a\u5c11\u4e2a\u6570\u636e\u9879\u4e0a\u52a0\u9501\uff0c\u6240\u6709\u7684\u52a0\u9501\u64cd\u4f5c\u90fd\u53ea\u80fd\u5728\u540c\u4e00\u4e2a\u9636\u6bb5\u5b8c\u6210\uff0c\u5728\u8fd9\u4e2a\u9636\u6bb5\u5185\uff0c\u4e0d\u5141\u8bb8\u5bf9\u5df2\u7ecf\u52a0\u9501\u7684\u6570\u636e\u9879\u8fdb\u884c\u89e3\u9501\u64cd\u4f5c\u3002</li> <li>\u53cd\u4e4b\uff0c\u4efb\u4f55\u4e00\u6b21\u89e3\u9501\u5373\u89c6\u4e3a\u8fd9\u4e2aTransaction\u8fdb\u5165\u89e3\u9501\u671f\uff0c\u6b64\u540e\u4e0d\u5141\u8bb8\u8be5Transaction\u65b0\u52a0\u4efb\u4f55\u9501\u3002</li> </ul> </li> </ul> <p></p> <p>\u53c8\u56e0\u4e3a\u9501\u662f\u5bf9\u5355\u4e2a\u6570\u636e\u800c\u8a00\u7684\uff0c\u8fd9\u79cd\u7b56\u7565\u4fdd\u8bc1\u4e86schedule serializability\uff0c\u4f8b\u5982\u4e0b\u56fe\u4e2d\uff1a</p> <ul> <li>Transaction1\u5bf9\u6570\u636eB\u6709\u8bfb\u6709\u5199\uff0c\u56e0\u6b64\u5728\u7b2c2\u6761\u64cd\u4f5c\u65f6T1\u4f1a\u7533\u8bf7X\u9501\u3002</li> <li>Transaction2\u5bf9\u6570\u636eB\u4e5f\u6709\u8bfb\u6709\u5199\uff0c\u4f46\u662f\u56e0\u4e3aX\u9501\u4e0d\u80fd\u5171\u5b58\uff0c\u6240\u4ee5\u5728T1\u5b8c\u6210\u5bf9B\u7684\u6240\u6709\u64cd\u4f5c\u5e76\u4e3b\u52a8\u89e3\u9501B\u4e4b\u524d\uff0cT2\u65e0\u6cd5\u7533\u8bf7\u5230\u5bf9B\u7684\u9501\uff0c\u4e5f\u5c31\u65e0\u6cd5\u8fdb\u884c\u5bf9B\u7684\u64cd\u4f5c\u3002</li> <li>\u6240\u4ee5\u4e0b\u56fe\u4e2dT1\u3001T2\u5bf9B\u7684\u73af\u5f62\u5173\u7cfb\u57282PL\u4e2d\u662f\u4e0d\u5b58\u5728\u7684\uff0c\u53732PL\u4fdd\u8bc1\u4e86Conflict Serializable\u3002</li> </ul> <p></p> <p>\u4e8c\u9636\u6bb5\u9501\u7b56\u7565\u4fdd\u8bc1\u4e86\u51b2\u7a81\u53ef\u4e32\u884c\u6027\uff0c\u4f46\u662f\u4e0d\u80fd\u4fdd\u8bc1\u5f97\u5230\u7684\u5e8f\u5217\u662f\u975e\u7ea7\u8054\u56de\u6eda\u7684\uff0c\u56e0\u6b64\u6709\u4e86\u4e24\u79cd\u884d\u751f\u7b56\u7565\uff1a</p> <ul> <li>\u9ed8\u8ba42PL\uff1a\u53ea\u8981Transaction\u4e0d\u9700\u8981\u518d\u7533\u8bf7\u65b0\u9501\uff0c\u5e76\u4e14\u5bf9\u67d0\u4e2a\u6570\u636e\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u5df2\u7ecf\u5b8c\u6210\uff0c\u90a3\u4e48\u5bf9\u8fd9\u4e2a\u6570\u636e\u7684\u9501\u5c31\u53ef\u4ee5\u88ab\u91ca\u653e\uff0c\u5373\u4f7f\u6b64\u65f6Transaction\u5185\u8fd8\u6709\u5176\u4ed6\u64cd\u4f5c\u6ca1\u6709\u8fdb\u884c\u3002</li> <li> <p>Strict Two-phase Locking\uff1a\u4e00\u4e2aTransaction\u4f1a\u4fdd\u7559\u5b83\u7684X\u9501\u76f4\u5230commit/abort\u4e4b\u524d\u3002</p> </li> <li> <p>Rigorous Two-phase Locking\uff1a\u4e00\u4e2aTransaction\u4f1a\u4fdd\u7559\u5b83\u7684\u6240\u6709\u9501\u76f4\u5230commit/abort\u4e4b\u524d\u3002 </p> </li> </ul>"},{"location":"Database/#tree-based-protocol","title":"Tree-Based Protocol","text":"<p>\u6811\u534f\u8bae\u7684\u8981\u6c42\u662f\uff1a</p> <ul> <li>Transaction\u53ea\u80fd\u7533\u8bf7X\u9501\uff0c\u5e76\u4e14\u5bf9\u4e00\u4e2a\u6570\u636e\u53ea\u80fd\u7533\u9501\u4e00\u6b21\u3002</li> <li>Transaction\u7684\u7b2c\u4e00\u628a\u9501\u53ef\u4ee5\u662f\u4efb\u4f55\u6570\u636e\u9879\u7684\uff1b\u63a5\u4e0b\u6765\uff0c\u53ea\u6709\u8be5\u4e8b\u52a1\u6301\u6709\u4e86\u6570\u636e\u9879\u7684\u7236\u8282\u70b9\u7684\u9501\uff0c\u624d\u53ef\u4ee5\u7ed9\u6570\u636e\u9879\u52a0\u9501\u3002</li> <li>\u6570\u636e\u9879\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u5019\u89e3\u9501\u3002</li> </ul> <p>\u4e0b\u56fe\u662f\u4e00\u4e2a\u6570\u636e\u6811\u7684\u4f8b\u5b50\u3002</p> <p></p> <p>\u7279\u6027\uff1a</p> <ul> <li>\u4fdd\u8bc1\u51b2\u7a81\u53ef\u4e32\u884c\u5316</li> <li>\u4fdd\u8bc1\u65e0\u6b7b\u9501\uff08\u4f18\u4e8e2PL\uff09</li> <li>\u4e0d\u4fdd\u8bc1\u65e0\u8054\u7ea7\u56de\u6eda\uff0c\u4f46\u53ef\u901a\u8fc7\u589e\u52a0\u9650\u5236\u201c\u6392\u4ed6\u9501\u53ea\u6709\u5230\u4e8b\u52a1\u7ed3\u675f\u65f6\u624d\u53ef\u4ee5\u91ca\u653e\u201d\u6765\u5b9e\u73b0</li> <li>\u76f8\u6bd4\u4e8c\u9636\u6bb5\u9501\u534f\u8bae\u89e3\u9501\u65f6\u95f4\u81ea\u7531</li> </ul> <p>\u95ee\u9898\uff1a</p> <ul> <li>\u6709\u65f6\u4f1a\u7ed9\u4e0d\u9700\u8981\u8bbf\u95ee\u7684\u6570\u636e\u9879\u52a0\u9501\uff08\u8981\u6c42\u5148\u7ed9\u7236\u8282\u70b9\u52a0\u9501\uff09\uff0c\u4f1a\u589e\u52a0\u9501\u5f00\u9500</li> </ul>"},{"location":"Database/#multiple-granularity","title":"Multiple Granularity","text":"<p>Granularity\u8bd1\u4e3a\u7c92\u5ea6\u3002\u9501\u534f\u8bae\u76f8\u5173\u5185\u5bb9\u4e2d\uff0c\u6211\u4eec\u5c06\u52a0\u9501\u7684\u5bf9\u8c61\u6cdb\u6307\u4e3a\u201c\u6570\u636e\u201d\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u201c\u6570\u636e\u201c\u6307\u4ee3\u7684\u5185\u5bb9\u91cf\u53ef\u5927\u53ef\u5c0f\uff0c\u4e0b\u56fe\u4fbf\u662f\u4e00\u4e2a\u4f8b\u5b50\uff0c\u4ece\u6574\u4e2a\u6570\u636e\u5e93\u5230\u6bcf\u4e00\u4e2atuple\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u6811\u578b\u7ed3\u6784\u8868\u793a\u3002\u5176\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u53ef\u4ee5\u89c6\u4e3a\u201c\u6570\u636e\u201d\u3002</p> <p></p> <p>\u5bf9\u201c\u6570\u636e\u201d\u52a0\u9501\u65f6\u5e94\u8be5\u9075\u5faa\u5982\u4e0b\u539f\u5219\uff1a</p> <ul> <li>\u5bf9\u67d0\u8282\u70b9\u52a0\u6216\u89e3S/X\u9501\u65f6\uff0c\u81ea\u4e0a\u800c\u4e0b\u7684<ul> <li>\u5bf9\u5b83\u7684\u6240\u6709\u5b69\u5b50\u8282\u70b9\u52a0\u6216\u89e3S/X\u9501</li> <li>\u5bf9\u5b83\u7684\u6240\u6709\u7956\u5148\u8282\u70b9\u52a0\u6216\u89e3IS/IX\u9501\uff08Intention Share/eXclusive \u610f\u5411\u9501 \u7528\u4e8e\u6807\u8bc6\uff09</li> </ul> </li> <li>\u52a0\u89e3\u9501\u9075\u5faa2PL\u539f\u5219\u3002</li> <li>\u4e0d\u540c\u9501\u4e4b\u95f4\u7684\u5171\u5b58\u5173\u7cfb\u5982\u4e0b\u56fe<ul> <li>IS/IX\u53ef\u4ee5\u5171\u5b58\u3002\u67d0\u6570\u636e\u4e0aIS\u3001IX\u4e24\u628a\u9501\u90fd\u5b58\u5728\u65f6\uff0c\u4e60\u60ef\u4e0a\u5408\u5e76\u5199\u4e3aSIX</li> <li></li> </ul> </li> </ul>"},{"location":"Database/#handling-deadlock","title":"Handling Deadlock","text":"<p>\u6b7b\u9501\u662f\u9501\u534f\u8bae\u5fc5\u987b\u8981\u89e3\u51b3\u7684\u95ee\u9898\u3002\u89e3\u51b3\u601d\u8def\u4e00\u822c\u6709\uff1a</p> <ul> <li>\u4e00\u6b21\u6027\u7533\u8bf7Transaction\u9700\u8981\u7684\u6240\u6709\u9501\uff0c\u5168\u90e8\u7533\u8bf7\u5b8c\u6210\u540e\u518d\u6267\u884c<ul> <li>\u6548\u7387\u4f4e\u4e0b\uff0c\u4e00\u822c\u4e0d\u7528</li> </ul> </li> <li>\u4f7f\u7528\u6811\u7b56\u7565\u8fdb\u884c\u52a0\u89e3\u9501<ul> <li>\u524d\u4e00\u8282\u4e2d\u5df2\u7ecf\u63d0\u5230</li> </ul> </li> <li> <p>Timeout-Based Scheme\uff1a\u7b49\u5f85\u52a0\u9501\u8fbe\u5230\u4e00\u5b9a\u65f6\u957f\u540e\u6574\u4e2a\u4e8b\u52a1\u56de\u6eda\uff0c\u4ece\u5934\u6765\u8fc7</p> </li> <li> <p>Wait-die Scheme\uff1a\u4e24\u4e2a\u4e8b\u52a1\u76f8\u4e92\u6b7b\u9501\uff0c\u540e\u5f00\u59cb\u7684\u56de\u6eda\u7ed9\u5148\u5f00\u59cb\u7684\u8ba9\u8def</p> <ul> <li>\u7f3a\u70b9\u662f\u56de\u6eda\u540e\u91cd\u65b0\u8ba1\u5148\u540e\uff0c\u4e8e\u662f\u540e\u5f00\u59cb\u7684\u56de\u6eda\u540e\u4ecd\u7136\u662f\u540e\u5f00\u59cb\u7684\uff0c\u8fd9\u6709\u53ef\u80fd\u5bfc\u81f4\u67d0\u4e2a\u4e8b\u52a1\u4e00\u76f4\u5f97\u4e0d\u5230\u6267\u884c</li> </ul> </li> <li>Wound-wait Scheme\uff1a\u4e24\u4e2a\u4e8b\u52a1\u76f8\u4e92\u6b7b\u9501\uff0c\u5148\u5f00\u59cb\u7684\u56de\u6eda\u7ed9\u540e\u5f00\u59cb\u7684\u8ba9\u8def<ul> <li>\u7f3a\u70b9\u662f\u5148\u5f00\u59cb\u4e00\u822c\u610f\u5473\u7740\u5df2\u7ecf\u6267\u884c\u7684\u64cd\u4f5c\u66f4\u591a\uff0c\u6240\u4ee5\u56de\u6eda\u7684\u6210\u672c\u66f4\u9ad8</li> </ul> </li> </ul>"},{"location":"Database/#_38","title":"\u68c0\u6d4b\u6b7b\u9501","text":"<p>\u7528\u7c7b\u4f3c\u524d\u5e8f\u56fe\u7684\u7b49\u5f85\u56fe\u5173\u8054\u5404\u4e2a\u4e8b\u52a1\u3002\u7bad\u5934\u4eceTi\u6307\u5411Tj\u610f\u5473\u7740Ti\u6b63\u5728\u7b49\u5f85Tj\u89e3\u9501\u67d0\u4e2a\u6570\u636e\uff0c\u81ea\u5df1\u624d\u80fd\u52a0\u9501\u4ee5\u7ee7\u7eed\u6267\u884c\u64cd\u4f5c\u3002\u6ce8\u610f\u4e0e\u524d\u5e8f\u56fe\u4e0d\u540c\u7684\u662f\uff0c\u524d\u5e8f\u56fe\u968fSchedule\u7684\u786e\u5b9a\u800c\u786e\u5b9a\uff0c\u6267\u884c\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u53d8\u5316\uff1b\u800c\u7b49\u5f85\u56fe\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u65f6\u65f6\u53ef\u80fd\u6539\u52a8\u3002</p> <p></p>"},{"location":"Database/#_39","title":"\u5341\u4e5d\u7ae0 \u9519\u8bef\u6062\u590d","text":""},{"location":"Database/#_40","title":"\u65e5\u5fd7","text":"<p>\u5bf9\u6bcf\u4e00\u4e2a\u4e8b\u52a1\u7684\u6bcf\u4e00\u4e2awrite\u505a\u8bb0\u5f55\uff1a</p> <ul> <li>Transaction\u5f00\u59cb\u65f6\uff0c\u8bb0\u5f55\uff08Ti start\uff09</li> <li>\u5bf9\u6bcf\u4e00\u4e2a\u5199\u64cd\u4f5c\uff0c\u8bb0\u5f55\uff08\u4e8b\u52a1\u7f16\u53f7Ti\uff0c\u5199\u6570\u636e\u7684\u4f4d\u7f6eD\uff0c\u539f\u503cV0\uff0c\u65b0\u503cV1\uff09</li> <li>\u63d0\u4ea4\u65f6\uff0c\u8bb0\u5f55\uff08T1 commit/abort\uff09</li> </ul> <p>\u5728\u66f4\u65b0\u65f6\u673a\u4e0a\u53c8\u6709\u4e24\u79cd\u9009\u62e9\uff1a</p> <ul> <li>deferred-modification\uff1a<ul> <li>\u5199\u64cd\u4f5c\u5728commit\u4ee5\u524d\u90fd\u662f\u5728\u4e34\u65f6\u53d8\u91cf\u4e2d\u505a\uff0ccommit\u540e\u4e00\u6b21\u5199\u5165buff/disk</li> </ul> </li> <li>immediate-modification\uff1a<ul> <li>\u5141\u8bb8\u5728commit\u4e4b\u524d\u5c06\u503c\u5199\u5165buff/disk</li> <li>\u6ce8\u610f\u5199log\u4e00\u5b9a\u8981\u5728\u5199buff/disk\u4e4b\u524d\u8fdb\u884c</li> </ul> </li> </ul> <p>\u672c\u4e66\u4e2d\u6211\u4eec\u53ea\u8ba8\u8bbaimmediate\u7684\u505a\u6cd5\u3002</p>"},{"location":"Database/#_41","title":"\u65e5\u5fd7\u6062\u590d","text":"<ul> <li> <p>Undo\uff1a\u6307Transaction\u672aCommit\u65f6\u7684\u56de\u6eda\uff0c\u9700\u8981\u5bf9\u6bcf\u4e00\u4e2a\u5199\u64cd\u4f5c\u5229\u7528\u4e0a\u9762\u7684\u56db\u5143\u7ec4\u505a\u56de\u6eda\uff0c\u5b83\u4fdd\u8bc1\u4e86\u6570\u636e\u5e93\u7684\u539f\u5b50\u6027\u3002</p> <ul> <li>Undo\u6309\u65f6\u95f4\u5012\u5e8f\u505a</li> <li>Commit\u4e4b\u540e\u76f8\u5173\u65e5\u5fd7\u5373\u53ef\u4eceUndo List\u4e2d\u79fb\u9664</li> </ul> </li> <li> <p>Redo\uff1a\u6307Commit\u4e4b\u540e\u7684\u91cd\u505a\u3002\u4f8b\u5982Commit\u5373\u8ba4\u4e3a\u6570\u636e\u5e94\u8be5\u88ab\u6301\u4e45\u7684\u4fdd\u5b58\u4e86\uff0c\u4f46Commit\u540e\u4e00\u6bb5\u65f6\u95f4\u91cc\u65b0\u6570\u636e\u53ef\u80fd\u8fd8\u5728buff\u91cc\u6ca1\u6709\u5199\u5165Disk\uff0c\u8fd9\u65f6\u5982\u679c\u53d1\u751f\u65ad\u7535\u5c31\u9700\u8981\u5229\u7528Redo Log\u6765\u4fdd\u969c\u6570\u636e\u6301\u4e45\u6027\u3002</p> <ul> <li>Redo\u6309\u65f6\u95f4\u987a\u5e8f\u505a</li> <li>Commit\u540e\u4e8b\u52a1\u76f8\u5173\u8bb0\u5f55\u8fdb\u5165Redo List</li> <li>Redo\u53ea\u6709Physical\u7684</li> </ul> </li> <li> <p>WAL (Write-Ahead Logging Rule)\uff1a\u4e3a\u4e86\u4fdd\u8bc1\u53ef\u6062\u590d\uff0cLog\u5fc5\u987b\u6bd4Data\u5148\u5199\u78c1\u76d8\u3002</p> <ul> <li>Schedule\u4e2d\u5fc5\u987b\u5148\u5199Log\u5230Disk\u518d\u6539\u52a8\u6570\u636e</li> <li>Commit\u540e\u6570\u636e\u53ef\u4ee5\u5728buff\u4e2d\u505c\u7559\u4f46\u662fLog\u5fc5\u987b\u7acb\u523b\u8fdb\u5165Disk</li> </ul> </li> <li> <p>Compensate Log\uff1aUndo\u548cRedo\u4e5f\u662f\u5199\u64cd\u4f5c\uff0c\u4e3a\u4e86\u9632\u6b62\u201c\u6062\u590d\u65f6\u51fa\u9519\uff0c\u9700\u8981\u4ece\u6062\u590d\u4e2d\u6062\u590d\u201d\u7684\u5957\u5a03\u60c5\u51b5\uff0cUndo/Redo\u4e5f\u9700\u8981\u5199Log\uff0c\u8fd9\u79cdLog\u79f0\u4e3a\u8865\u507f\u65e5\u5fd7\u3002</p> <ul> <li>\u4e00\u822c\u53ea\u9700\u8981\uff08\u4e8b\u52a1\u7f16\u53f7Ti\uff0c\u5199\u6570\u636e\u7684\u4f4d\u7f6eD\uff0c\u6062\u590d\u503cV\uff09\u4e09\u4e2a\u4fe1\u606f</li> <li>\u540c\u65f6\u6062\u590d\u7684\u6062\u590d\u5e94\u8be5\u5177\u6709\u5e42\u7b49\u6027\uff0c\u4fdd\u8bc1\u5728\u5957\u5a03\u6062\u590d\u65f6\u53ef\u4ee5\u5f97\u5230\u6b63\u786e\u7684\u7ed3\u679c<ul> <li>A\u4ece950\u6062\u590d\u52301000\u3002\u8fd9\u662f\u5e42\u7b49\u7684\uff0c\u65e0\u8bba\u6062\u590d\u591a\u5c11\u6b21\u7ed3\u679c\u90fd\u662f1000\uff0c\u56e0\u6b64\u662f\u5408\u9002\u7684\u6062\u590d\u7b56\u7565\u3002</li> <li>A\u52a050\u3002\u8fd9\u4e0d\u662f\u5e42\u7b49\u7684\uff0c\u591a\u6b21\u6062\u590d\u53ef\u80fd\u5bfc\u81f4A\u7684\u503c\u53cd\u590d\u76f8\u52a0\u3002\u8fd9\u662f\u4e0d\u597d\u7684\u6062\u590d\u7b56\u7565\u3002</li> </ul> </li> </ul> </li> </ul> <p>\u591a\u4e2aTransaction\u540c\u65f6\u56de\u6eda\u65f6\u5148\u5c06\u672a\u5b8c\u6210\u7684Undo\u518d\u5c06\u5df2\u5b8c\u6210\u7684Redo\u3002</p>"},{"location":"Database/#check-point","title":"Check Point","text":"<p>\u4e0a\u9762\u8bf4\u5230\uff0c\u4e00\u79cd\u9700\u8981Redo\u7684\u5178\u578b\u573a\u666f\u662fCommit\u540e\u4e00\u6bb5\u65f6\u95f4\u91cc\u65b0\u6570\u636e\u53ef\u80fd\u8fd8\u5728buff\u91cc\u6ca1\u6709\u5199\u5165Disk\uff0c\u8fd9\u65f6\u5982\u679c\u53d1\u751f\u65ad\u7535\u5c31\u9700\u8981\u5229\u7528Redo Log\u6765\u4fdd\u969c\u6570\u636e\u6301\u4e45\u6027\u3002\u4f46\u662f\u8fd9\u4e5f\u5e26\u6765\u4e00\u4e2a\u95ee\u9898\uff0c\u6570\u636e\u5728buff\u4e2d\u7684\u65f6\u95f4\u662f\u6709\u9650\u7684\uff0c\u8fdf\u65e9\u4f1a\u8fdb\u5165\u975e\u6613\u5931\u7684\u5b58\u50a8\u5668\u4e2d\uff0cRedo\u5df2\u7ecf\u8fdb\u5165Disk\u7684\u4e8b\u52a1\u662f\u6d6a\u8d39\u3002</p> <p>\u6240\u4ee5\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\uff0c\u6211\u4eec\u505c\u6b62schedule\u5e76\u5f3a\u5236\u5c06buff\u4e2d\u7684\u6240\u6709\u5185\u5bb9\u5199\u5165disk\uff0c\u5e76\u5728Log\u4e2d\u7559\u4e0b\u4e00\u6761\u8bb0\u5f55\u3002\u8bb0\u5f55\u7684\u5185\u5bb9\u662f\u5f53\u65f6\u8fd8\u6ca1\u6709Commit\u7684\u4e8b\u52a1\u7f16\u53f7\uff08\u5df2\u7ecfCommit\u7684\u4e8b\u52a1\u518d\u6b64\u4e4b\u524d\u90fd\u4fdd\u8bc1\u88ab\u5199\u5165disk\u4e86\uff09\u3002\u4e0b\u56fe\u4e2d\u5047\u8bbe\u5728\u6267\u884c\u7b2c18\u884c\u524d\u53d1\u751f\u4e86\u65ad\u7535\u9700\u8981\u56de\u6eda\uff1a</p> <ul> <li>\u753112\u884c\u7684checkpoint\u4fe1\u606f\u786e\u5b9a\u51faT1\u3001T3\u5df2\u7ecf\u88ab\u6301\u4e45\u4fdd\u5b58\uff0c\u56e0\u6b64Redo\u53ea\u9700\u8981\u4ece12\u884c\u5f00\u59cb</li> <li>\u753114-16\u884c\u7684\u8865\u507f\u65e5\u5fd7\u5224\u65adT2\u53d1\u751f\u4e86\u56de\u6eda\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u518d\u6b21Undo</li> <li>\u6240\u4ee5Undo List\u4e2d\u53ea\u6709T4</li> </ul> <p></p>"},{"location":"Database/#fuzzy-check-point","title":"Fuzzy Check Point","text":"<p>\u5e38\u89c4Check Point\u5199disk\u65f6\u4f1a\u505c\u6b62Schedule\u9020\u6210\u6027\u80fd\u6d6a\u8d39\uff0c\u56e0\u6b64\u6709\u4e86Fuzzy Checkpoint\u8fd9\u4e00\u6539\u8fdb\u7b56\u7565\uff1a</p> <ol> <li>\u505c\u6b62Schedule</li> <li>\u5199Checkpoint Log</li> <li>\u8bb0\u5f55Commit\u4f46\u662f\u8fd8\u6ca1\u6709\u5199\u56deDisk\u7684\u6570\u636e\u7684\u4fe1\u606f\u5230\u8868M\u4e2d</li> <li>\u7ee7\u7eedSchedule</li> </ol> <p>\u8fd9\u6837\u7701\u4e0b\u4e86\u5199Disk\u7684\u65f6\u95f4\uff0cSchedule\u6682\u505c\u65f6\u957f\u4f1a\u6bd4\u5e38\u89c4\u505a\u6cd5\u77ed\u3002\u4f46\u662f\u8fd9\u6837\u505a\u7684\u8bdd\u6700\u65b0\u7684Checkpoint Log\u5e76\u4e0d\u4fdd\u8bc1\u6570\u636e\u53ef\u6062\u590d\uff0c\u6240\u4ee5\u9700\u8981\u8865\u5145\u64cd\u4f5c\uff1a</p> <ol> <li>\u8bbe\u8ba1\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u4fdd\u8bc1\u53ef\u6062\u590d\u6027\u7684\u6700\u540e\u4e00\u6761Checkpoint Log\uff08\u4e0d\u4e00\u5b9a\u662f\u6700\u65b0\u7684\u4e00\u6761\uff09</li> <li>\u8ffd\u8e2aM\u4e2d\u6570\u636e\u7684\u5199\u5165\u60c5\u51b5\uff0c\u5b9e\u65f6\u66f4\u65b0\u6307\u9488</li> </ol> <p>\u4ece\u6307\u9488\u6307\u5411\u7684Check Point\u4f5c\u4e3a\u6062\u590d\u7684\u8d77\u70b9\u5373\u53ef\u3002</p>"},{"location":"Database/#log-buffer","title":"Log Buffer","text":"<p>\u4e0a\u9762\u63d0\u5230\u6211\u4eec\u603b\u662f\u5e0c\u671b\u65e5\u5fd7\u88ab\u5199\u5230Disk\u4e2d\u4ee5\u4fdd\u8bc1\u6570\u636e\u53ef\u9760\uff0c\u4f46\u662f\u8fd9\u6837\u4f1a\u5bf9Disk\u9020\u6210\u5f88\u5927\u7684\u538b\u529b\uff0c\u6240\u4ee5Log\u4e5f\u9700\u8981Buffer\u3002</p> <p>\u4e00\u822c\u7684\u7b56\u7565\u662f\uff1a</p> <ul> <li>\u4e00\u822c\u7684Log\u53ef\u4ee5\u5b58Buffer\uff0c\u5b9a\u671f\u8f6c\u79fb\u5230Disk\u4e2d</li> <li>Check Point\u65f6\u5c06Log Buffer\u4e2d\u6240\u6709\u5185\u5bb9\u5199\u5165DIsk\uff0c\u540c\u65f6Check Point Log\u76f4\u63a5\u5199Disk</li> <li>\u6570\u636e\u5199\u56deDisk\u91ca\u653e\u5ef6\u540e\uff0c\u53ea\u6709\u5bf9\u5e94\u7684Log\u5199\u8fdbDisk\u624d\u80fd\u5199\u6570\u636e</li> </ul> <p>\u8fd9\u6837\u4ecd\u7136\u4fdd\u8bc1\u4e86Log\u4e00\u5b9a\u5148\u4e8eData\u8fdb\u5165\u78c1\u76d8\uff0c\u6240\u4ee5\u4e0d\u5f71\u54cd\u5b89\u5168\u6027\u3002</p>"},{"location":"Database/#_42","title":"\u78c1\u76d8\u6062\u590d","text":"<p>\u524d\u4e00\u8282\u4e3b\u8981\u89e3\u51b3\u56de\u6eda\u7684\u5b9e\u73b0\u548c\u6613\u5931\u6027\u5b58\u50a8\u5165Mem\u7684\u6062\u590d\u3002\u73b0\u5728\u975e\u6613\u5931\u6027\u50a8\u5b58\u5165Disk\u5931\u6548\u65f6\u7684\u6062\u590d\uff1a</p> <ul> <li>\u5b9a\u671f\u62f7\u8d1d\u78c1\u76d8\u4f5c\u4e3a\u5907\u4efd\uff0c\u79f0Dump</li> <li>\u7c7b\u4f3c\u4e8eCheck Point\u4e4b\u4e8e\u5185\u5b58\uff0c\u6062\u590d\u65f6\u627e\u5230\u6700\u8fd1\u7684Dump\u548c\u6062\u590dLog\uff0c\u53ea\u505aRedo</li> </ul>"},{"location":"Database/#logical-undo","title":"Logical Undo","text":"<p>\u4f8b\u5982\u63d2\u5165\u7d22\u5f15\uff0c\u65b0\u5efa\u8868\u7b49\u64cd\u4f5c\uff0c\u662f\u4e0d\u80fd\u7528\u6b64\u524d\u63d0\u5230\u7684\u8bb0\u5f55\u6570\u636e\u5757\u65b0\u65e7\u503c\u7684\u65b9\u6cd5\u6765\u505aUndo\u7684\u3002\u8981Undo\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u6bcf\u4e00\u4e2a\u64cd\u4f5c\u5b9a\u4e49\u4e00\u4e2a\u53cd\u64cd\u4f5c\uff0c\u4f8b\u5982\u63d2\u5165\u7d22\u5f15\u5bf9\u5220\u9664\u7d22\u5f15\uff0c\u65b0\u5efa\u8868\u5bf9Drop\u8868\u7b49\uff0cUndo\u67d0\u4e2a\u64cd\u4f5c\u5373\u6267\u884c\u5b83\u7684\u53cd\u64cd\u4f5c\u3002\u8fd9\u5c31\u662fLogical Undo\u3002\u56e0\u4e3a\u53cd\u64cd\u4f5c\u662f\u4e00\u4e2a\u76f8\u5bf9\u72ec\u7acb\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u6709Logical Undo\u5bf9\u63d0\u524d\u91ca\u653e\u9501\u6709\u5e2e\u52a9\u3002</p> <p>Logical Undo\u4e00\u5b9a\u4e0d\u662f\u5e42\u7b49\u7684\uff0c\u6240\u4ee5\u56de\u6eda\u65f6\u5982\u679c\u770b\u5230Operation-abort\uff0c\u610f\u5473\u7740\u5df2\u7ecf\u903b\u8f91\u64a4\u56de\u8fc7\uff0c\u4e0d\u80fd\u518d\u6b21Undo\u3002</p> <p>Logical Undo\u548cPhysical Undo\u53c8\u53ef\u4ee5\u76f8\u5d4c\u5957\u3002</p> <p></p>"},{"location":"Database/#aries","title":"ARIES","text":"<p>Log Sequence Number (LSN) \u53ef\u4ee5\u770b\u4f5c\u662fLog\u7684\u8eab\u4efd\u8bc1\u53f7\u3002 </p>"},{"location":"Database/#physiological-redo","title":"Physiological Redo","text":"<p>\u5408\u5e76\u591a\u6b21Redo\u3002\u4f8b\u5982\u4e24\u4e2a\u4e8b\u52a1\u5c06A\u4ece500\u6539\u5230600\uff0c\u53c8\u4ece600\u6539\u5230800\uff0c\u4e24\u8005\u90fdcommit\u540eRedo Log\u53ef\u4ee5\u5408\u4e00\u4e3aA\u4ece500\u5230800\uff0c\u8fd9\u5bf9\u6062\u590d\u6ca1\u6709\u5f71\u54cd\u3002\u8fd9\u79cd\u505a\u6cd5\u88ab\u79f0\u4e3a\u534a\u903b\u8f91Redo\uff0c\u6307\u4e0d\u50cf\u903b\u8f91Undo\u4e00\u6837\u72ec\u7acb\uff0c\u4f46\u4e5f\u4e0d\u662f\u5b8c\u5168\u7269\u7406\u7684Redo\u3002</p>"},{"location":"Database/#aries-data-structure","title":"ARIES Data Structure","text":"<ul> <li>Buff\u548cDisk\u4e2d\u7684\u6bcf\u4e00\u4e2a\u9875\u90fd\u4fdd\u5b58\u5176\u6570\u636e\u5bf9\u5e94\u7684\u6700\u65b0\u7684LSN\u3002</li> <li>Dirty Page Table\u4e2dPageID\u662f\u5f53\u524d\u6240\u6709\u7684\u810f\u9875\uff0cPageLSN\u662f\u66f4\u6539PageID\u6570\u636e\u7684\u6700\u65b0LSN\uff0cRecLSN\u662f\u5199Disk\u4e4b\u540e\u6539Buff\u7684\u6700\u65e9\u7684\u4e00\u6761Log\u7684LSN\u3002</li> </ul> <p>\u5728Log\u4e2d\u6dfb\u52a0\u6307\u9488\u52a0\u901f\u904d\u5386\u3002</p> <p></p>"},{"location":"Database/#aries_1","title":"ARIES\u5177\u4f53\u6b65\u9aa4","text":"<ol> <li> <p>\u4e00\u822c\u7684Check Point</p> </li> <li> <p>redo\u5df2\u7ecf\u63d0\u4ea4\u7684\uff0c\u4ece\u4e0a\u5f80\u4e0b\uff0c\u4ececheck point\u5230commit\u6216abort</p> </li> <li> <p>undo\u6ca1\u6709\u63d0\u4ea4\u7684\uff0c\u4ece\u4e0b\u5f80\u4e0a\uff0c\u4ece\u6700\u540e\u4e00\u6761log\u5230start</p> </li> <li> <p>ARIES\uff1a</p> </li> <li> <p>Analysis Pass\uff1a</p> <ul> <li>\u7b2c\u4e00\u6b65 \u8bfb\u51fa\u6240\u9700\u7684\u6570\u636e</li> <li>\u8bfb\u51fa\u6570\u636e</li> <li>RedoLSN=min(RecLSN)</li> <li>UndoList=all not-commit txn in check point log</li> <li>\u7b2c\u4e8c\u6b65 \u4eceCheck Point\u5411\u540e\u626b\u63cf</li> <li>\u6709\u65b0\u7684txn start \u52a0\u5165UndoList</li> <li>\u6709\u5199\u5165 \u66f4\u65b0Dirty Page Table\u548c\u8be5txn\u5bf9\u5e94\u7684LastLSN</li> <li>\u6709txn end\uff08commit\u6216abort\uff09 \u628a\u8fd9\u4e2atxn\u4eceUndoList\u653e\u5230RedoList</li> </ul> </li> <li>Redo Pass\uff1a<ul> <li>\u4eceRedoLSN\u5f00\u59cb\u987a\u5e8f\u626b\u63cf\u76f4\u5230RedoList\u5185\u6240\u6709txn\u90fdcommit</li> <li>\u5982\u679cRedoList\u5185txn\u67d0update\u5bf9\u5e94\u7684\u9875\u4e0d\u5728Dirty Page Table\u4e2d\u6216\u8005\u5176LSN\u5c0f\u4e8e\u5bf9\u5e94\u9875RecLSN\uff0c\u8bf4\u660e\u5df2\u7ecf\u5199\u5165DIsk\uff0c\u4e0d\u7528\u64cd\u4f5c</li> <li>\u5426\u5219\u91cd\u505a\u5199\u5165</li> </ul> </li> <li>Undo Pass\uff1a<ul> <li>\u4ece\u4e0b\u5f80\u4e0aUndo</li> <li>\u8bb0\u5f97Undo\u8981\u5199log</li> <li>\u5982\u679c\u9700\u8981\u7684\u8bdd\u8865\u5145\u8bb0\u5f55CRS\uff0c\u91cd\u70b9\u662fUndoNextLSN\u6307\u5411\u8be5txn\u4e0b\u4e00\u6761\u9700\u8981Undo\u7684Log</li> </ul> </li> </ol> <p>\u601d\u8def\u548c\u5e38\u89c4\u7684\u6062\u590d\u76f8\u540c\uff0c\u4f46\u662f\u5229\u7528\u4e0a\u9762\u4ecb\u7ecd\u7684\u6307\u9488\u548c\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u4e86\u52a0\u901f\u3002</p> <p></p>"},{"location":"DigitLogic/","title":"Logic and Computer Design Fundamentals","text":"<p>~~this review mainly focus on some special points and terminology~~</p>"},{"location":"DigitLogic/#some-special-codes","title":"Some Special Codes","text":"<ul> <li>BCD</li> </ul> <p>4 Binary bit as a Decimal bit Simply flatten up in converting</p> <ul> <li> <p>Excess 3 code</p> <ul> <li> <p>BCD + 3</p> </li> <li> <p>easy to do adding(automatically add carry)</p> </li> </ul> </li> <li> <p>Gray</p> </li> </ul> <p>Flip only one bit each turn \\(Gray Code = (K)_2 \\ \\ xor \\ \\ ((K)_2 &gt;&gt; 1)\\) Useful in K-map and optimization!</p> <ul> <li> <p>Parity Bit</p> </li> <li> <p>odd parity &amp; even parity</p> <ul> <li>Final result of 1's</li> </ul> </li> <li> <p>MSB &amp; LSB</p> <ul> <li>Most/Least Significant Bit</li> </ul> </li> <li> <p>Unsigned integer</p> </li> <li> <p>Radix Complement(\u8865\u7801)</p> <ul> <li>r\u2019s complement for radix r</li> <li>2\u2019s complement in binary</li> <li>Defined as \\(r^N - x\\)</li> <li>In Binary, as (~x + 1)</li> </ul> </li> <li> <p>Diminished Radix Complement\uff08\u53cd\u7801\uff09</p> <ul> <li>(r - 1)\u2019s complement for radix r</li> <li>1\u2019s complement for radix 2</li> <li>Defined as \\(r^N - 1 - x\\) , \"flipping\" every bit actually</li> </ul> </li> <li> <p>Signed integer</p> <ul> <li> <p>positive</p> <ul> <li>Both 1's and 2's complement are the same as true code</li> </ul> </li> <li> <p>negative</p> <ul> <li>1's complement is flipping every bit follow the sign bit</li> <li>2's complement is 1's complement + 1</li> </ul> </li> </ul> </li> </ul>"},{"location":"DigitLogic/#arithmetic-system","title":"Arithmetic System","text":"<ul> <li>In computer system, it's actually a \"\\(mod \\ r^N\\)\" system for N bit calculation</li> <li>\\(X - Y \\equiv X + r^N - Y \\equiv X + \\overline{Y}(mod \\ r^N)\\)</li> <li> <p>Unsigned Subtraction</p> <ul> <li>Use 2's Complement, then the answer actually is \\(X - Y + r^N\\)</li> <li>Thus check the final carry bit(actually Nth bit)<ul> <li>1 : \\(X \\geq Y\\), result is answer</li> <li>0 : \\(X &lt; Y\\), answer is negative, thus the answer is \\(-(r^N - result)\\)</li> </ul> </li> </ul> </li> <li> <p>Signed Subtraction</p> <ul> <li>Just use 2's Complement to convert subtraction into addition</li> </ul> </li> <li> <p>Overflow</p> <ul> <li> <p>Unsigned</p> <ul> <li>Extra carry bit in addition</li> </ul> </li> <li> <p>Signed</p> <ul> <li>(+A) + (+B) = (-C)</li> <li>(-A) + (-B) = (+C)</li> </ul> </li> </ul> </li> </ul>"},{"location":"DigitLogic/#boolean-algebra","title":"Boolean Algebra","text":"<ul> <li>Dual<ul> <li>Interchange only And/Or</li> </ul> </li> <li>Complement<ul> <li>DeMorgan's Law</li> </ul> </li> <li>Duality Rules</li> </ul> <p>A boolean equation remains valid if we take the dual of the expressions on both sides of the equals sign</p> <ul> <li> <p>Important Formulars</p> <ul> <li>\\(X + XY = X\\)</li> <li>\\(X(X+Y) = X\\)</li> <li>\\(XY + X \\overline{Y} = X\\)</li> <li>\\((X+Y)(X+\\overline{Y})=X\\)</li> <li>\\(X + \\overline{X}Y = X + Y\\)</li> <li>\\(X(\\overline{X}+Y)=XY\\)</li> <li>Consensus Theorem</li> </ul> </li> </ul> <p>\\(XY+\\overline{X}Z+YZ=XY+\\overline{X}Z\\)            (YZ is redundant) \\((X+Y)(\\overline{X}+Z)(Y+Z)=(X+Y)(\\overline{X}+Z)\\)        (dual)</p> <ul> <li>Canonical Form<ul> <li>SOM (sum of miniterm)<ul> <li>Choose 1's</li> </ul> </li> <li>POM (product of maxterm)<ul> <li>Choose 0's</li> </ul> </li> <li>SOP (sum of product)<ul> <li>Choose 1's</li> <li>Every product term contains all variables</li> </ul> </li> </ul> </li> <li>Cost<ul> <li>Literal cost<ul> <li>Number of literals</li> </ul> </li> <li>Gate-input cost<ul> <li>Input wires (literal cost + combinational structure)</li> </ul> </li> <li>Gate-input cost with NOTs<ul> <li>Gate-input cost + NOTs (count every literal only once)</li> </ul> </li> </ul> </li> <li>K-map<ul> <li>Implicant<ul> <li>A product term in SOP</li> </ul> </li> <li>Prime Implicant<ul> <li>A product term obtained by combining the maximum possible number of adjacent squares in the map with \\(2^N\\) number of squares</li> </ul> </li> <li>Essential Prime Implicant<ul> <li>Prime Implicant that essentially covers some squares(must pick)</li> </ul> </li> <li>Don't cares<ul> <li>Self assume the value, mostly choose 1</li> </ul> </li> <li>POS optimization<ul> <li>Optimize the \\(\\overline{F}\\) which is SOP</li> </ul> </li> </ul> </li> </ul>"},{"location":"DigitLogic/#combinational-logic","title":"Combinational Logic","text":"<ul> <li> <p>Delays</p> </li> <li> <p>Transition Time (Focus on output change)</p> <ul> <li>\\(t_{LH}=t_r\\) : 10% Low to 90% High  (rise)</li> <li>\\(t_{HL}=t_f\\) : 90% High to 10% Low  (fall)</li> </ul> </li> <li>Propagation Delay (Focus on output change by input change)<ul> <li>Time from half of input change to half of output change</li> <li>\\(t_{pd} = max(t_{pHL}, t_{pLH})\\)  (sometimes is average)</li> </ul> </li> <li>Model<ul> <li>Transport Delay<ul> <li>\\(t_{pd}=t_{\u56fa\u6709}+k*SL\\) (sum of fan-out standard loads)</li> </ul> </li> <li>Inertial Delay<ul> <li>Rejection Time : rejects narrow \u201cpulses\u201d on the outputs</li> </ul> </li> </ul> </li> <li> <p>Technology Mapping</p> <ul> <li>Use NAND/NOR to implement any logic</li> <li>Optimize<ul> <li>Push down NOTs</li> <li>Remove redundant gates (linked NOTs)</li> <li>Keep doing</li> </ul> </li> </ul> </li> <li> <p>Decoder</p> <ul> <li>\\(N - 2^N\\) One-Hot Decoder</li> <li>Hierarchical Design<ul> <li>\\(N-2^N = (\\frac{N}{2} - 2^{\\frac{N}{2}} )\\times (\\frac{N}{2} - 2^{\\frac{N}{2}})\\)</li> <li>Sometimes we can use ENABLE as a select signal</li> </ul> </li> </ul> </li> <li> <p>Encoder</p> <ul> <li>\\(2^N-N\\) One-Hot Encoder</li> <li>\\(2^K-N\\) Priority Encoder</li> </ul> </li> <li> <p>Multiplexer</p> <ul> <li>\\(2^N-1\\) MUX</li> <li>Input AND Decoder --OR--&gt; Output</li> <li>Expansion<ul> <li>Focus on how to cope with the multi-outputs of several MUXs</li> </ul> </li> <li>Implement Combinational Logic Function<ul> <li>Simple<ul> <li>Input: Output in truth table</li> <li>Select: Input</li> </ul> </li> <li>Efficient<ul> <li>Divide the input into two parts</li> <li>Select : the first part as the select signal of the second part</li> <li>Input : combination logic of the second part</li> </ul> </li> </ul> </li> <li>Use 3-state gate to optimize the cost</li> </ul> </li> <li> <p>Demultiplexer</p> <ul> <li>\\(1-2^N\\) DeMUX</li> </ul> </li> <li> <p>Half Adder  (No last carry)</p> <ul> <li>\\(S = A \\oplus B\\)</li> <li>\\(C = AB\\)</li> </ul> </li> <li> <p>Full Adder</p> <ul> <li>\\(S = (A \\oplus B)\\oplus Z\\)</li> <li>\\(C = AB + Z(A \\oplus B)\\)</li> </ul> </li> <li> <p>Ripple-Carry Binary Adder (*with \\(\\oplus\\) gate)</p> <ul> <li>Linked Full Adders</li> <li>The first carry 1 means doing subtraction(2's complement)</li> </ul> </li> <li> <p>*Carry Lookahead Adder</p> <ul> <li>\\(G_i = A_iB_i\\)</li> <li>\\(P_i = A_i \\oplus B_i\\)</li> <li>\\(C_{i+1} = G_i + P_iC_i\\)</li> <li>\\(S_i = P_i \\oplus C_i\\)</li> </ul> </li> <li> <p>(P)ROM</p> <ul> <li>Read-Only Memory</li> <li>Programmable only once</li> <li>\\(2^K \\times N\\) ROM (\\(2^K\\) addresses by \\(K - 2^K\\) Decoder, N bits per address)</li> <li>For a given address line, the connected data column is 1, others are 0</li> </ul> </li> <li> <p>PAL</p> <ul> <li>Programmable Array Logic</li> <li>Programmable only once</li> <li>K inputs into 2*K columns(\\(X/\\overline{X}\\))</li> <li>Fixed structure of N AO, but programmable AND terms</li> <li>One output can be used as input of another output as compensation</li> </ul> </li> <li> <p>PLA</p> <ul> <li>Programmable Logic Array</li> <li>Programmable only once</li> <li>K inputs into 2*K columns(\\(X/\\overline{X}\\))</li> <li>N programmable AND terms</li> <li>M programmable OR terms (select miniterms above) with M programmable XOR terms (get inverters)</li> <li>Optimize by optimizing both \\(F/\\overline{F}\\)</li> </ul> </li> <li> <p>FPGA</p> <ul> <li>Field Programmable Gate Array</li> <li>LUT</li> <li>Look-Up Table</li> <li>Like \\(2^K - 1\\) RAM</li> <li>Expansion:<ul> <li>Shannon\u2019s expansion theorem : \\(F = F(X_1, X_2, ..., X_n) = X_nF(X_1, X_2, ..., X_{n-1}, 1) + \\overline{X_n}F(X_1, X_2, ..., X_{n-1},0)\\)</li> </ul> </li> <li>*CLB<ul> <li>Configurable Logic Block</li> <li>LUT + Flip-Flop</li> </ul> </li> <li>*SM<ul> <li>Switch Matrix</li> <li>Interconnects between CLBs</li> </ul> </li> <li>*IOB<ul> <li>Input/Output Block</li> <li>Connects to the outside world</li> </ul> </li> </ul> </li> </ul>"},{"location":"DigitLogic/#sequential-logic","title":"Sequential Logic","text":"<ul> <li> <p>Synchonous &amp; Asynconous</p> <ul> <li>Synchonous : Triggered by discrete clock signal</li> <li>Asynconous : Triggered by input signal</li> </ul> </li> <li> <p>Buffer</p> <ul> <li>Store a bit, unable to change</li> <li>Delay = 2 * Inverter Delay</li> </ul> </li> <li> <p>Analysis</p> <ul> <li>Input Equation<ul> <li>\\(D_A = A(t)X(t)\\)</li> </ul> </li> <li>Output Equation<ul> <li>\\(Y(t)= F(A(t),X(t))\\)</li> </ul> </li> <li>Excitation Equation(D Flip-Flop)<ul> <li>\\(D_A = A(t+1)\\)</li> <li>Function of the current state and next state</li> </ul> </li> <li>Next State Equation(Characteristic equation)<ul> <li>\\(A(t+1) = D_A\\)</li> <li>A function of inputs and the current state</li> </ul> </li> </ul> </li> <li> <p>Latch</p> <ul> <li>Property<ul> <li>Store a bit, able to change and keep</li> <li>Too fast fallback and state change for a sequential circuit (transparent)</li> </ul> </li> <li>\\(S-R\\) Latch<ul> <li>NOR gates</li> <li>\\(R---Q\\) \\(S---\\overline{Q}\\)</li> <li>\\(S = 1, R = 0,Q = 1\\) : Set</li> <li>\\(S = 0, R = 1,Q = 0\\) : Reset</li> </ul> </li> <li>\\(\\overline{S}-\\overline{R}\\) Latch<ul> <li>NAND gates</li> <li>\\(\\overline{S}---Q\\) \\(\\overline{R}---\\overline{Q}\\)</li> <li>\\(S = 1(\\overline{S}=0), R = 0,Q=1\\) : Set</li> <li>\\(S = 0, R = 1,Q=0\\) : Reset</li> </ul> </li> <li>Clocked \\(S-R\\) Latch (\\(S-R\\) Latch with Control Input)<ul> <li>Add a control input to control the \\(\\overline{S}-\\overline{R}\\) latch</li> <li>\\(\\overline{S}\\) = S NAND C</li> </ul> </li> <li>Both Latches S=1,Q=1</li> <li>D Latch<ul> <li>Based on \\(\\overline{S}-\\overline{R}\\) Latch with Control Input</li> <li>Let \\(S = D, R = \\overline{D}\\) to avoid the forbidden state</li> <li>Q = D</li> </ul> </li> </ul> </li> <li> <p>Flip-Flop</p> <ul> <li> <p>Master - Slave FF</p> <ul> <li>Pulse - Triggered</li> <li>S-R MS FF<ul> <li>Master : Clocked S-R Latch</li> <li>Slave : Clocked S-R Latch</li> <li>Control Input : \\(C\\) &amp; \\(\\overline{C}\\)</li> <li>Every clock cycle only change once (half for master, half for slave)</li> <li>1's catching problem : glitch</li> </ul> </li> <li>J-K MS FF<ul> <li>Same as S-R MS FF, but with J-K Latch</li> <li>1 - 1 state permitted, flip to the opposite state</li> </ul> </li> <li>Edge - Triggered</li> <li>D MS FF<ul> <li>Master : D Latch</li> <li>Slave : Clocked S-R Latch</li> <li>Control Input : \\(C\\) &amp; \\(\\overline{C}\\)</li> <li>Since D Latch has no keeping state when clocked, no 1's catching problem</li> <li>Positive/Negative - level triggered flip-flop : associated with the output slave</li> <li>*Direct inputs : often for initial set</li> </ul> </li> <li>T Flip-Flop<ul> <li>J-K MS FF with J = K</li> <li>\\(T = 1\\) : Toggle</li> <li>\\(T = 0\\) : Keep</li> <li>*Edge-Triggered D Flip-Flop</li> </ul> </li> </ul> </li> <li> <p>Timing parameters</p> <ul> <li>Setup Time \\(t_s\\)<ul> <li>Time before clock edge that data must be stable</li> <li>*For Edge-trigger it's short, for Pulse-trigger it keep for whole pulse</li> </ul> </li> <li>Hold Time \\(t_h\\)<ul> <li>Time after clock edge that data must be stable</li> </ul> </li> <li>Propagation Delay \\(t_{pd}\\)<ul> <li>Time from input change to output change</li> </ul> </li> <li>\\(t_h\\) in \\(t_{pd}\\) and often \\(t_h &lt; t_{pd}\\), thus often ignore \\(t_h\\) in analysis</li> <li>Clock cycle time &gt; longest propagation delay from one clock edge to another edge</li> </ul> </li> </ul> </li> </ul>"},{"location":"DigitLogic/#hardware-implementation","title":"Hardware Implementation","text":"<ul> <li> <p>*CMOS</p> <ul> <li>NMOS - GND, PMOS - VCC</li> <li>NMOS &amp; PMOS in series(complesmentary &amp; dual)</li> </ul> </li> <li> <p>Register</p> </li> </ul> <p>A set of flip-flops, possibly with added combinational gates, that perform data-processing tasks. The flip-flops hold data, and the gates determine the new or transformed data to be transferred into the flip-flops</p> <ul> <li> <p>Structure</p> <ul> <li>Clock<ul> <li>Sequential control</li> </ul> </li> <li>Flip-Flops<ul> <li>Storage</li> </ul> </li> <li>Data Path (micro-operation)<ul> <li>Processing data</li> <li>Transfer data</li> </ul> </li> <li>Control Unit<ul> <li>Control the data path</li> </ul> </li> </ul> </li> <li> <p>Load</p> <ul> <li>Parallel Load</li> </ul> <p>Load all bits at the same time (clock cycle) </p> <ul> <li>Clock gating<ul> <li>\\(C = \\overline{Load} + Clock\\)</li> <li>Clock skew problem, hard to implement</li> </ul> </li> <li>Load enable<ul> <li>\\(D = Load \\cdot D + \\overline{Load} \\cdot Q\\)</li> <li>Actually a MUX</li> </ul> </li> <li>Serial Load</li> </ul> <p>Load one bit at a time (clock cycle) </p> <ul> <li>Useful in data transmission</li> </ul> </li> <li> <p>Transfer</p> <p>Condition: DR[...] &lt;- SR[Address] </p> <ul> <li>Multiplexer and Bus -Based Transfers</li> <li>For single register (too expensive)<ul> <li>\\(Load = K_1 + K_2 + ... +K_n\\)</li> <li>\\(D = MUX(Input,K)\\)</li> </ul> </li> <li>For multiple registers<ul> <li>Bus : a set of multiplexer outputs shared as a common path (single source problem)</li> <li>Three-state gates : bidirectional input\u2013output lines</li> </ul> </li> </ul> </li> <li> <p>Processing</p> <ul> <li>ALU<ul> <li>Arithmetic micro-operations</li> <li>Logic micro-operations</li> </ul> </li> <li> <p>Shift micro-operations</p> <ul> <li> <p>Serial shift</p> <ul> <li>Serial link the flip-flops</li> <li>With a proper clock difference, SO can get the serial result</li> <li>For N bits:<ul> <li>Starts with N - K clcok cycles, get SI &lt;&lt; K</li> <li>Start with N + K clock cycles, get SI &gt;&gt; K</li> </ul> </li> </ul> </li> <li> <p>Parallel shift</p> <ul> <li>Parallel output</li> <li>Just add an output for each flip-flop</li> <li>Parallel load</li> <li>Use combinational logic to control the load (MUX)</li> <li>\\(Shift:Q \\leftarrow shift (Q)\\) \\(\\overline{Shift} \\cdot Load: Q \\leftarrow D\\) \\(\\overline{Shift} \\cdot \\overline{Load}: Q \\leftarrow Q\\)</li> </ul> </li> <li> <p>Bidirectional shift</p> <ul> <li>Add a control signal to control the direction of shift</li> <li>\\(\\overline{S_1} S_0: D \\leftarrow SL(Q)\\) \\(S_1 \\overline{S_0}: D \\leftarrow SR(Q)\\) \\(S_1 S_0: D \\leftarrow Input\\) \\(\\overline{S_1} \\overline{S_0}: D \\leftarrow Q\\)</li> </ul> </li> </ul> </li> </ul> </li> <li> <p>Counter</p> <ul> <li> <p>Ripple counter</p> <ul> <li>\\(C_{i+1} = \\overline{Q_i}(add)/Q_i(dec)\\) \\(D_i = \\overline{Q_i}\\)</li> <li>Consider every time Q flips, the next flip-flop will be triggered</li> </ul> </li> <li> <p>Serial counter</p> <ul> <li>Same clock</li> <li>Control the D input of each flip-flop, but D relies on the previous flip-flop</li> </ul> </li> <li> <p>Parallel counter</p> <ul> <li>Update all in a single clock cycle</li> <li>More efficient than serial counter</li> </ul> </li> <li> <p>Other counter</p> <ul> <li>Modulo-N counter</li> <li>BCD counter</li> </ul> </li> </ul> </li> <li> <p>Memory</p> </li> <li> <p>Some terminology</p> <ul> <li>Word<ul> <li>A groups of bits that are accessed together</li> </ul> </li> <li>Width (Memory width)<ul> <li>The number of bits in a word</li> </ul> </li> <li>Depth (Address width)<ul> <li>The number of words in a memory</li> </ul> </li> <li>Memory size = Width * Depth</li> <li>Memory data path width<ul> <li>The number of bits that can be transferred in a bus</li> </ul> </li> <li>Latency time<ul> <li>From application of row address until first word available</li> </ul> </li> <li>Burst size<ul> <li>The number of words/bits transferred in a burst</li> </ul> </li> <li>Memory bandwidth<ul> <li>Speed of data transfer</li> <li>Bandwidth = Burst size / (Latency time + Burst Size * Cycle time)   (Busrt size plus 2 if it's DDR)</li> </ul> </li> </ul> </li> <li> <p>Read / Write</p> <ul> <li>CS (Chip Select)<ul> <li>Enable the memory</li> </ul> </li> <li>Address line<ul> <li>Select the word</li> </ul> </li> <li>Data line<ul> <li>Read / Write the data</li> </ul> </li> <li>Access time<ul> <li>Time from address to output data</li> </ul> </li> <li>Write cycle time<ul> <li>Time between successive writes</li> </ul> </li> </ul> </li> <li> <p>Special Technicals</p> <ul> <li>bidirectional pins for data line<ul> <li>Use three-state gates</li> </ul> </li> <li>Coincidence selection<ul> <li>2D array : Access by row address and column address</li> <li>Often the address line is used for both row select and column select, not row line and column line</li> </ul> </li> </ul> </li> <li> <p>Extension</p> <ul> <li>Word extension<ul> <li>Just parallel the data line</li> </ul> </li> <li>Depth extension<ul> <li>Use a decoder with CS to choose the memory</li> </ul> </li> </ul> </li> <li> <p>SRAM</p> <p>Static Random Access Memory </p> <ul> <li>Structure<ul> <li>Storage on S-R Latch</li> <li>Dual input &amp; output</li> </ul> </li> <li>Volatile</li> <li>Expensive</li> </ul> </li> <li> <p>DRAM</p> <p>Dynamic Random Access Memory </p> <ul> <li>Structure<ul> <li>Storage on capacitor</li> <li>Single input &amp; output</li> </ul> </li> <li>Cheap</li> <li>Dense</li> <li>Read / Write<ul> <li>Row address \\(\\rightarrow\\) Column address \\(\\rightarrow\\) \\(\\rightarrow\\) I/O activated \\(\\rightarrow\\) Data valid \\(\\rightarrow\\) Refresh</li> </ul> </li> <li> <p>Refresh</p> <ul> <li>Recharge the capacitor</li> <li>Control by \\(\\overline{RAS}\\) &amp; \\(\\overline{CAS}\\) of outside devices (0 triggered)</li> <li>Methods<ul> <li>RAS-only refresh<ul> <li>Refresh the whole row</li> <li>The row address is controlled by IC</li> <li>\\(RAS =0,CAS =1\\)</li> </ul> </li> <li>CAS-before-RAS refresh<ul> <li>Controlled by inner counter</li> <li>\\(CAS =0 \\rightarrow RAS = 0\\)</li> </ul> </li> <li>Hidden refresh<ul> <li>CAS-before-RAS refresh following a normal read / write</li> </ul> </li> </ul> </li> <li>Mode<ul> <li>Burst mode<ul> <li>stop the work and refresh all memory for a while</li> </ul> </li> <li>Distributed refresh<ul> <li>Refresh the memory in a distributed way</li> <li>space out refresh one row at a time, thus avoid blocking memory for a long time</li> </ul> </li> </ul> </li> </ul> </li> <li> <p>SDRAM</p> </li> </ul> <p>Synchronous DRAM </p> <ul> <li>Burst length<ul> <li>Number of words accessed in a single access (burst read)</li> </ul> </li> </ul> </li> <li> <p>DDR SDRAM</p> <p>Double Data Rate SDRAM </p> <ul> <li>Transfer data on both rising and falling edges of the clock</li> </ul> </li> <li> <p>*RDRAM</p> <p>Rambus DRAM </p> </li> </ul>"},{"location":"DigitLogic/#labs","title":"Labs","text":"<ul> <li> <p>74LS138</p> <ul> <li>3-8 decoder</li> <li>3 inputs, 8 outputs (negative one-hot logic)</li> <li>3 enable inputs \\(G,\\overline{G2A},\\overline{G2B}\\)</li> </ul> </li> <li> <p>MC14495</p> <ul> <li>4 bit Hex - 7 segment decoder</li> <li>negative logic</li> <li>a - f clockwise, g in the middle, p is point</li> </ul> </li> </ul>"},{"location":"DigitLogic/#verilog","title":"Verilog","text":"<ul> <li> <p>\u95e8\u7ea7</p> <ul> <li>or,and,not,nand,nor,xor,xnor(output,input1,input2) </li> </ul> </li> <li> <p>RTL</p> <ul> <li>assign  </li> </ul> </li> <li> <p>\u884c\u4e3a\u7ea7</p> <ul> <li>always @(*) </li> </ul> </li> </ul>"},{"location":"Git/","title":"Git","text":"<p>\u65ad\u65ad\u7eed\u7eed\u5730\u4f7f\u7528\u4e86git\u7684\u90e8\u5206\u529f\u80fd\uff0c\u7a0d\u7a0d\u505a\u4e00\u4e9b\u7cfb\u7edf\u6027\u7684\u6574\u7406</p>"},{"location":"Git/#_1","title":"\u7406\u89e3","text":"<p>git \u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u5373\u6bcf\u4e2a\u4eba\u7684\u672c\u5730\u90fd\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u7248\u672c\u5e93\uff0c\u53ef\u4ee5\u8fdb\u884c\u7248\u672c\u63a7\u5236\u3002</p> <p>\u800c\u4e14git\u7684\u7248\u672c\u5e93\u8bb0\u5f55\u7684\u4e0d\u662f\u6bcf\u4e2a\u6587\u4ef6\u7684\u589e\u91cf\uff0c\u800c\u662f\u6240\u6709\u6587\u4ef6\u7684\u5feb\u7167\uff0c\u8fd9\u6837\u53ef\u4ee5\u65b9\u4fbf\u5730\u8fdb\u884c\u7248\u672c\u56de\u9000\u3002</p> <p>\u5e38\u7528git\u4e00\u822c\u662f\u901a\u8fc7\u4e00\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\u6765\u8fdb\u884c\u534f\u4f5c\uff0c\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u4ece\u8fdc\u7a0b\u4ed3\u5e93\u514b\u9686\u4e00\u4efd\u5230\u672c\u5730\uff0c\u7136\u540e\u5728\u81ea\u5df1\u7684\u5206\u652f\u4e0a\u8fdb\u884c\u4fee\u6539\uff0c\u6700\u540e\u518d\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u901a\u8fc7\u51b2\u7a81\u5904\u7406\u5408\u5e76\u5230\u4e3b\u5206\u652f\u3002\uff08~~\u6216\u8005\u5f53\u6210\u8fdc\u7a0b\u5907\u4efd\u5e93~~\uff09</p>"},{"location":"Git/#git_1","title":"git\u67b6\u6784","text":"<ul> <li>workspace\uff1a\u5de5\u4f5c\u533a\uff0c\u5b9e\u9645\u5de5\u4f5c\u76ee\u5f55</li> <li>index\uff1a\u6682\u5b58\u533a\uff0c\u901a\u8fc7add\u6dfb\u52a0</li> <li>repository\uff1a\u7248\u672c\u5e93</li> <li>remote\uff1a\u8fdc\u7a0b\u4ed3\u5e93</li> <li>branch\uff1a\u5206\u652f</li> <li>HEAD\uff1a\u6307\u5411\u5f53\u524d\u5206\u652f\u7684\u6307\u9488</li> <li>origin\uff1a\u9ed8\u8ba4\u8fdc\u7a0b\u4ed3\u5e93</li> <li>master: \u9ed8\u8ba4\u4e3b\u5206\u652f</li> </ul>"},{"location":"Git/#_2","title":"\u5e38\u7528\u547d\u4ee4","text":"<ul> <li> <p>git pull &lt;remote&gt; &lt;branch&gt;</p> <p>\u7ea6\u7b49\u4e8e git clone + git merge,\u4e00\u822c\u7528\u4e8e\u5c06\u8fdc\u7a0b\u4ed3\u5e93\u514b\u9686\u5230\u672c\u5730</p> </li> <li> <p>git push (-u) &lt;remote&gt; &lt;branch&gt;</p> <p>\u5c06\u672c\u5730\u7684\u4ed3\u5e93\uff08repository\uff09\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\u7684\u5206\u652f\u4e0a\uff0c-u\u53c2\u6570\u8868\u793a\u5c06\u672c\u5730\u5206\u652f\u4e0e\u8fdc\u7a0b\u5206\u652f\u5173\u8054\u8d77\u6765</p> </li> <li> <p>git add &lt;file&gt;</p> <p>\u5c06\u5de5\u4f5c\u533a\u7684\u6587\u4ef6\u6dfb\u52a0\u5230\u6682\u5b58\u533a\uff08index\uff09</p> </li> <li> <p>git commit -m &lt;message&gt;</p> <p>\u5c06\u6682\u5b58\u533a\u7684\u6587\u4ef6\u63d0\u4ea4\u5230\u672c\u5730\u4ed3\u5e93\uff08repository\uff09 message\u662f\u63d0\u4ea4\u7684\u8bf4\u660e\uff0c\u4e00\u822c\u662f\u5bf9\u672c\u6b21\u63d0\u4ea4\u7684\u7cbe\u7b80\u63cf\u8ff0</p> </li> <li> <p>git init</p> <p>\u521d\u59cb\u5316\u4e00\u4e2a\u672c\u5730\u4ed3\u5e93</p> </li> <li> <p>git clone</p> <p>\u5c06\u8fdc\u7a0b\u4ed3\u5e93\u514b\u9686\u5230\u672c\u5730</p> </li> <li> <p>git branch</p> <p>\u67e5\u770b\u5206\u652f -a \u67e5\u770b\u6240\u6709\u5206\u652f -r \u67e5\u770b\u8fdc\u7a0b\u5206\u652f -d \u5220\u9664\u5206\u652f \u540e\u52a0\u5206\u652f\u540d\u53ef\u65b0\u5efa\u5206\u652f</p> </li> <li> <p>git checkout &lt;branch&gt;</p> <p>\uff08\u65b0\u5efa\u4e14\uff09\u5207\u6362\u5206\u652f</p> </li> <li> <p>git merge &lt;branch&gt;</p> <p>\u5c06&lt;branch&gt;\u5206\u652f\u5408\u5e76\u5230\u5f53\u524d\u5206\u652f</p> </li> <li> <p>git rebase</p> <p>\u5c06\u5f53\u524d\u5206\u652f\u7684\u63d0\u4ea4\u8bb0\u5f55\u79fb\u52a8\u5230&lt;branch&gt;\u5206\u652f\u7684\u6700\u540e \u4f7f\u5f97\u63d0\u4ea4\u8bb0\u5f55\u66f4\u52a0\u6e05\u6670</p> </li> <li> <p>git log (--oneline)</p> <p>\u67e5\u770b\u63d0\u4ea4\u8bb0\u5f55</p> </li> </ul>"},{"location":"Git/#_3","title":"\u5e38\u7528\u64cd\u4f5c","text":"<ul> <li>\u65b0\u5efa\u4e00\u4e2a\u672c\u5730\u4ed3\u5e93\u5e76\u4e0e\u8fdc\u7a0b\u4ed3\u5e93\u5173\u8054</li> </ul> <pre><code>git init\ngit remote add origin &lt;url&gt;\ngit pull origin master\n...\ngit add *\ngit commit -m \"...\"\ngit push -u origin master\n</code></pre> <ul> <li>\u4ece\u8fdc\u7a0b\u4ed3\u5e93\u514b\u9686\u5230\u672c\u5730</li> </ul> <pre><code>git clone &lt;url&gt;\n</code></pre> <ul> <li>\u4ece\u8fdc\u7a0b\u4ed3\u5e93\u62c9\u53d6\u5206\u652f\u5e76\u5b8c\u6210\u5408\u5e76</li> </ul> <pre><code>git pull origin &lt;branch\\&gt;\ngit merge &lt;branch\\&gt;\ngit add *\ngit commit -m \"...\"\ngit push -u origin master\ngit push --delete origin &lt;branch\\&gt; # \u5220\u9664\u8fdc\u7a0b\u5206\u652f\n</code></pre> <ul> <li> <p>\u5904\u7406\u51b2\u7a81</p> <ul> <li>\u653e\u5f03\u672c\u5730\u4fee\u6539</li> </ul> <pre><code>git fetch --all\ngit reset --hard origin/master\ngit pull\n</code></pre> <ul> <li>\u672a\u63d0\u4ea4\uff0c\u53ef\u4ee5\u6682\u5b58\u5f53\u524d\u5de5\u4f5c\uff0c\u56de\u9000\u5230\u4e0a\u4e00\u4e2a\u7248\u672c\uff0c\u7136\u540e\u5f00\u59cb\u5408\u5e76</li> </ul> <pre><code>git stash\ngit pull\ngit stash pop\n</code></pre> <ul> <li>\u5df2\u63d0\u4ea4\uff0c\u53ef\u4ee5\u76f4\u63a5merge\u5904\u7406\u51b2\u7a81\uff0c\u518d\u91cd\u65b0\u63d0\u4ea4</li> </ul> <pre><code>git merge\ngit add\n</code></pre> </li> <li> <p>\u8fdc\u7a0b\u4ed3\u5e93\u7ba1\u7406</p> <ul> <li> <p>\u5220\u9664\u5206\u652f</p> <pre><code>git push --delete origin &lt;branch\\&gt;\n</code></pre> </li> <li> <p>\u67e5\u770b\u8fdc\u7a0b\u4ed3\u5e93</p> <pre><code>git remote -v\n</code></pre> </li> <li> <p>\u4fee\u6539\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740</p> <pre><code>git remote set-url origin &lt;url&gt;\n</code></pre> </li> </ul> </li> </ul>"},{"location":"Info/","title":"\u4fe1\u606f\u7406\u8bba","text":"<p>~~\u9ad8\u7ea7\u7684\u6982\u7387\u8bba\u4e0e\u6570\u7406\u7edf\u8ba1~~</p>"},{"location":"Info/#_2","title":"\u4fe1\u606f\u7684\u5b9a\u4e49","text":"<ul> <li> <p>\u4fe1\u606f\u662f\u4e00\u79cd\u7528\u6765\u6d88\u9664\u4e0d\u786e\u5b9a\u6027\u7684\u4e1c\u897f</p> <ul> <li> <p>\u4fe1\u606f\u6765\u6e90\u4e8e\u7269\u8d28\uff0c\u4f46\u4e0d\u7b49\u4e8e\u7269\u8d28</p> </li> <li> <p>\u4fe1\u606f\u5fc5\u987b\u6709\u4e00\u4e2a\u8f7d\u4f53\uff0c\u4fe1\u606f\u662f\u8f7d\u4f53\u7684\u5185\u5bb9</p> </li> </ul> </li> </ul>"},{"location":"Info/#_3","title":"\u4fe1\u606f\u7684\u5ea6\u91cf (\u79bb\u6563)","text":"<p>\\(I(A) = -\\log_2 P(A)\\)</p> <ul> <li> <p>\u4fe1\u606f\u7684\u5ea6\u91cf\u5355\u4f4d\u662f\u6bd4\u7279\uff08bit\uff09\uff0c\u6b63\u5bf9\u5e94\u4e8e\u5f53\u524d\u7684\u8ba1\u7b97\u673a\u7cfb\u7edf (\u4ee5e\u4e3a\u5e95\u5219\u79f0\u4e3a\u5948\u7279nat)</p> </li> <li> <p>\u9999\u519c\u4fe1\u606f\u91cf\u76f8\u5f53\u4e8e\u5c06\u4fe1\u606f\u8bba\u548c\u6982\u7387\u8bba\u8054\u7cfb\u8d77\u6765\u3001</p> <ul> <li> <p>\u6982\u7387\u8d8a\u5c0f\uff0c\u4fe1\u606f\u91cf\u8d8a\u5927</p> </li> <li> <p>\u975e\u8d1f\u6570</p> </li> <li> <p>\u53ef\u52a0\u6027</p> </li> </ul> </li> </ul>"},{"location":"Info/#_4","title":"\u4e8b\u4ef6\u7684\u81ea\u4fe1\u606f","text":"<ul> <li> <p>\u4e8b\u4ef6\u7684\u81ea\u4fe1\u606f\u7684\u672c\u8d28</p> <ul> <li> <p>\u4e8b\u4ef6\u53d1\u751f\u540e\u6240\u63d0\u4f9b\u7684\u4fe1\u606f\u91cf</p> </li> <li> <p>\u4e8b\u4ef6\u53d1\u751f\u524d\u4e3a\u786e\u8bc1\u4e8b\u4ef6\u53d1\u751f\u7684\u4e0d\u786e\u5b9a\u6027\u6240\u9700\u8981\u7684\u4fe1\u606f\u91cf</p> </li> </ul> </li> <li> <p>\u6761\u4ef6\u81ea\u4fe1\u606f\u7684\u672c\u8d28</p> <ul> <li> <p>\u4e8b\u4ef6Y\u53d1\u751f\u540e\uff0cX\u518d\u53d1\u751f\u9700\u8981\u7684\u201c\u65b0\u7684\u4fe1\u606f\u91cf\u201d</p> </li> <li> <p>\u4e8b\u4ef6Y\u53d1\u751f\u540e\uff0cX\u53c8\u53d1\u751f\u4e86\uff0c\u63d0\u4f9b\u7ed9\u89c2\u5bdf\u8005\u7684\u201c\u65b0\u7684\u4fe1\u606f\u91cf\u201d</p> </li> </ul> </li> </ul>"},{"location":"Info/#mutual-infomation","title":"\u4e8b\u4ef6\u7684\u4e92\u4fe1\u606f(Mutual Infomation)","text":"<ul> <li> <p>\\(I(x ; y ) = I(x) - I(x | y)= -log P(x) - ( - log P(x | y) ) = log \\frac{P(x, y)}{P(x)P(y)}\\)</p> </li> <li> <p>\u5355\u4e00\u4e8b\u4ef6y\u53d1\u751f\u540e\u5bf9\u4e8b\u4ef6x\u7684\u4e0d\u786e\u5b9a\u6027\u51cf\u5c11\u7684\u7a0b\u5ea6(\u6709\u70b9\u50cf\u8861\u91cf\u4e24\u4e8b\u4ef6\u7684\u76f8\u5173\u6027\uff0c\u53ef\u80fd\u4e3a\u6b63\u3001\u8d1f\u30010)</p> <p>\u4e5f\u5c31\u662f</p> <p>\u5df2\u77e5 y \u53d1\u751f\u7684\u60c5\u51b5\u4e0b\uff0cx \u53d1\u751f\u5e26\u6765\u7684\u4e0d\u786e\u5b9a\u6027</p> <p>\u4e0d\u77e5\u9053 y \u662f\u5426\u53d1\u751f\u7684\u60c5\u51b5\u4e0b\uff0cx \u53d1\u751f\u5e26\u6765\u7684\u4e0d\u786e\u5b9a\u6027</p> <p>\u4e4b\u5dee</p> </li> <li> <p>\u5bf9\u79f0\u6027\uff1a\\(I(x ; y ) = I(y ; x )\\)</p> </li> <li> <p>\u94fe\u5f0f\u6cd5\u5219\uff1a\\(I(x ; (y, z) ) = I(x) - I(x | (y,z) ) = I(x ; y ) + I((x ; z) | y )\\)</p> <p>(\u4e8b\u4ef6y , z \u7ed9 \u4e8b\u4ef6 x \u5e26\u6765\u7684\u4fe1\u606f\u91cf = \u4e8b\u4ef6 y \u7ed9\u4e8b\u4ef6 x \u5e26\u6765\u7684\u4fe1\u606f\u91cf + y\u5df2\u77e5\u7684\u6761\u4ef6\u4e0b\u4e8b\u4ef6 z \u7ed9\u4e8b\u4ef6 x \u989d\u5916\u5e26\u6765\u7684\u4fe1\u606f\u91cf)</p> </li> </ul>"},{"location":"Info/#_5","title":"\u71b5","text":"<ul> <li> <p>\\(H(X) = \\sum P(x_i) I(x_i) = - \\sum P(x_i) \\log P(x_i)\\)</p> </li> <li> <p>\u71b5\u5b9a\u4e49\u4e3a\u968f\u673a\u53d8\u91cf\u5404\u4e2a\u4e8b\u4ef6\u7684\u5e73\u5747\u81ea\u4fe1\u606f\uff0c\u4e5f\u5c31\u662f\u968f\u673a\u53d8\u91cf\u7684\u4e0d\u786e\u5b9a\u6027</p> </li> <li> <p>\u71b5\u9488\u5bf9\u968f\u673a\u53d8\u91cf\uff0c\u81ea\u4fe1\u606f\u9488\u5bf9\u7684\u662f\u5177\u4f53\u4e8b\u4ef6\uff08\u968f\u673a\u53d8\u91cf\u53d6\u503c\uff09</p> </li> <li> <p>\u6761\u4ef6\u71b5</p> <ul> <li> <p>\u5355\u4e00\u4e8b\u4ef6\u7684\u6761\u4ef6\u71b5 \u5373 \u7b80\u5355\u5730\u66ff\u6362\u5bf9\u5e94\u7684p(x)\u4e3ap(x|y)</p> \\[ H(X|y) = - \\sum_{x_i} P(x_i|y) \\log P(x_i|y) \\] </li> <li> <p>\u968f\u673a\u53d8\u91cf\u7684\u6761\u4ef6\u71b5\uff0c\u5b9a\u4e49\u4e3a\u5bf9\u6761\u4ef6\u968f\u673a\u53d8\u91cf\u7684\u71b5\u7684\u671f\u671b\uff0c\u672c\u8d28\u662f\u968f\u673a\u53d8\u91cfY\u786e\u5b9a\u540e\u968f\u673a\u53d8\u91cfX\u8fd8\u5269\u4e0b\u7684\u4e0d\u786e\u5b9a\u5ea6\uff0c\u7406\u89e3\u4e0a\u53ef\u4ee5\u53c2\u8003\u6761\u4ef6\u6570\u5b66\u671f\u671b\u7684\u5b9a\u4e49</p> \\[ H(X|Y) = \\sum_{y_i} P(y_i) H(X|y_i) = - \\sum_{x_i} \\sum_{yj} P(x_i,y_j) \\log P(x_i|y_j) \\] </li> </ul> </li> <li> <p>\u8054\u5408\u71b5\u7684\u94fe\u5f0f\u6cd5\u5219\uff1a\\(H(X, Y) = H(X) + H(Y | X)\\)</p> <ul> <li> <p>\u7279\u6b8a\u7684\uff0cX,Y\u7edf\u8ba1\u72ec\u7acb\u65f6\uff0c\\(H(X, Y) = H(X) + H(Y)\\)</p> </li> <li> <p>\u591a\u53d8\u91cf\uff0c\\(H(X_1, X_2, \\cdots, X_n) = \\sum H(X_i | X_1, X_2, \\cdots, X_{i-1})\\)</p> </li> </ul> </li> <li> <p>\u71b5\u7684\u6027\u8d28</p> <ul> <li> <p>\u672c\u8d28\u4e0a\u662fK\u7ef4\u6982\u7387\u7a7a\u95f4\u4e0a\u5411\u91cf\u7684\u51fd\u6570</p> </li> <li> <p>\u57fa\u672c\u7b80\u5355\u6027\u8d28</p> <ul> <li> <p>\u975e\u8d1f\u6027\uff1a\\(H(X) \\ge 0\\)</p> </li> <li> <p>\u786e\u5b9a\u6027\uff1a\u5f53\u4e14\u4ec5\u5f53X\u662f\u786e\u5b9a\u6027\u7684\u968f\u673a\u53d8\u91cf\u65f6\uff0c\\(H(X) = 0\\)</p> </li> <li> <p>\u53ef\u6269\u5c55\u6027\uff1a\u7ef4\u5ea6\u6269\u5c55</p> </li> </ul> </li> <li> <p>\u53ef\u52a0\u6027</p> <ul> <li> <p>\u5373\u4e0a\u9762\u7684\u8054\u5408\u71b5\u7684\u94fe\u5f0f\u6cd5\u5219\u63a8\u5e7f</p> </li> <li> <p>\u8bc1\u660e:</p> </li> </ul> <p></p> <p>\\(H(X_1,X_2) = H(X_2) + H(X_1 | X_2) = H(X_2)\\)  (\\(X_2\\)\u786e\u5b9a\u540e\uff0c\\(X_1\\)\u4e5f\u786e\u5b9a\u4e86\uff0c\u6240\u4ee5\\(H(X_1 | X_2) = 0\\))</p> <p>\\(H(X_1,X_2) = H(X_1) + H(X_2 | X_1)\\)</p> <p>\u4e24\u5f0f\u76f8\u7b49\uff0c\u6240\u4ee5 \\(H(X_2) = H(X_1) + H(X_2 | X_1)\\)</p> </li> <li> <p>\u6781\u503c\u6027</p> <ul> <li>\\(H_K(p_1,p_2, \\cdots p_K) \\leq H_K(\\frac{1}{K},\\frac{1}{K}, \\cdots \\frac{1}{K}) = log K\\)</li> </ul> </li> <li> <p>\u6761\u4ef6\u71b5 &lt;= \u71b5</p> <ul> <li> <p>\\(H(X|Y) \\leq H(X)\\)</p> </li> <li> <p>\\(H(X|y) &lt;&gt; H(x)\\)</p> </li> </ul> </li> <li> <p>\u51f8\u51fd\u6570\u6027\u8d28</p> <ul> <li> <p>\u71b5\u662f\u5b9a\u4e49\u5728\u51f8\u96c6\u4e0a\u7684\u4e0a\u51f8\u51fd\u6570</p> <ul> <li> <p>\u51f8\u51fd\u6570\u6027\u8d28\uff1a</p> <ul> <li> <p>Hessian\u77e9\u9635\u6b63\u5b9a/\u8d1f\u5b9a</p> </li> <li> <p>Jensen\u4e0d\u7b49\u5f0f\u6210\u7acb</p> <p>\\(\\Sigma \\theta_i f(x_i) \\leq f(\\Sigma \\theta_i x_i)\\) </p> </li> </ul> </li> </ul> </li> <li> <p>\\(H(\\theta \\alpha + (1-\\theta) \\beta) \\geq \\theta H(\\alpha) + (1-\\theta) H(\\beta), \\theta \\in [0,1]\\)</p> </li> </ul> </li> <li> <p>\u4e92\u4fe1\u606f \u4e0e \u71b5</p> <ul> <li> <p>\\(I(x, y) = I(x) - I(x | y) = -log \\frac{p(x)p(y)}{p(x,y)}\\)</p> </li> <li> <p>\\(I(X;Y) = E(I(x,y)) = H(X) - H(X|Y) = H(Y) - H(Y|X) = H(X) + H(Y) - H(X,Y)\\)</p> </li> <li> <p>\u4e92\u4fe1\u606f\u7b49\u4e8e\u4e8b\u4ef6Y\uff08\u6574\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u6709\u591a\u79cd\u7ed3\u679c\uff09\u53d1\u751f\u540e\u5bf9\u4e8b\u4ef6X\u7684\u4e0d\u786e\u5b9a\u6027\u51cf\u5c11\u7684\u7a0b\u5ea6</p> <p> </p> </li> <li> <p>\u6570\u5b66\u4e0a\u8bf4\uff0cI(X;Y) \u662f\u8f93\u5165\u7684\u5206\u5e03\u77e2\u91cf \u548c \u8f6c\u79fb\u6982\u7387\u77e9\u9635 \u7684\u4fe1\u606f\u51fd\u6570   </p> </li> <li> <p>\u4e92\u4fe1\u606f\u7684\u51f8\u6027</p> </li> </ul> </li> </ul> </li> <li> <p>\u76f8\u5bf9\u71b5\uff08KL\u6563\u5ea6\uff09</p> <ul> <li> <p>\\(D(p||q) = \\sum p(x) \\log \\frac{p(x)}{q(x)} = E_p(\\log \\frac{p(x)}{q(x)})\\)</p> </li> <li> <p>\u6027\u8d28\uff1a</p> <ul> <li> <p>\u975e\u8d1f\u6027</p> </li> <li> <p>\u4e0d\u5bf9\u79f0\u6027</p> </li> <li> <p>\u4e0e\u4e92\u4fe1\u606f\u7684\u5173\u7cfb</p> <p>\\(I(X;Y) = D(p(x,y)||p(x)p(y))\\)</p> </li> <li> <p>\u4e0e\u71b5\u7684\u5173\u7cfb</p> <p>\\(H(x) = H(U) - D(X||U)\\) \uff08U\u4e3a\u5747\u5300\u5206\u5e03\uff09</p> </li> <li> <p>\u201c\u94fe\u5f0f\u201d\u6cd5\u5219\uff08P=P1P2\u76f8\u4e92\u72ec\u7acb, Q=Q1Q2\u76f8\u4e92\u72ec\u7acb\uff09</p> <p>\\(D(P||Q) = D(P1||Q1) + D(P2||Q2)\\)</p> </li> </ul> </li> </ul> </li> <li> <p>\u7591\u4e49  </p> <ul> <li> <p>\\(X \\in \\{x_0, x_1, ... x_{n-1}\\}\\)\u4e3a\u771f\u5b9e\u53d8\u91cf\uff0c\\(\\hat X\\)\u4e3a\u4f30\u8ba1\u53d8\u91cf\uff0c\u4f7f\u7528\\(\\hat X\\)\u6765\u4f30\u8ba1\\(X\\)</p> </li> <li> <p>\u7591\u4e49\u5ea6\u5b9a\u4e49\uff1a</p> \\[ P_E = \\Sigma_{k=0}^{n-1} \\Sigma_{i=0}^{n-1} P(X = k, \\hat X = i) (i \\neq k) \\] </li> <li> <p>Fano \u4e0d\u7b49\u5f0f</p> \\[ H(P_E) + P_E \\log(n-1) \\geq H(X| \\hat X) \\] <p></p> </li> </ul> </li> </ul>"},{"location":"Info/#_6","title":"\u9a6c\u5c14\u53ef\u592b\u94fe","text":"<ul> <li> <p>\u9a6c\u5c14\u53ef\u592b\u94fe\u7684\u5b9a\u4e49</p> <ul> <li> <p>\u4e00\u4e2a\u968f\u673a\u8fc7\u7a0b\uff0c\u5177\u6709\u9a6c\u5c14\u53ef\u592b\u6027\u8d28</p> </li> <li> <p>\u9a6c\u5c14\u53ef\u592b\u6027\u8d28\uff1a\\(P(X_{n+1} | X_1, X_2, \\cdots, X_n) = P(X_{n+1} | X_n)\\)</p> </li> <li> <p>\u6570\u636e\u5904\u7406\u5b9a\u7406\uff1a\u589e\u52a0\u6570\u636e\u5904\u7406\u6b21\u6570\uff0c\u4e0d\u4f1a\u589e\u52a0\u6570\u636e\u91cf</p> \\[ X -&gt; Y -&gt; Z \\] \\[ I(X;Y) \\geq I(X;Z) \\] \\[ I(X;Y) \\geq I(X;Y|Z) \\] </li> <li> <p>\u4e92\u4fe1\u606f\u7684\u51f8\u6027</p> <p></p> <p></p> </li> </ul> </li> </ul>"},{"location":"Info/#_7","title":"\u4fe1\u606f\u7684\u5ea6\u91cf\uff08\u8fde\u7eed\uff09","text":"<p>\u6c42\u548c --&gt; \u79ef\u5206</p> <ul> <li> <p>\u4e92\u4fe1\u606f</p> \\[ I(X;Y) = \\int \\int p(x,y) \\log \\frac{p(x,y)}{p(x)p(y)} dx dy \\] <ul> <li> <p>\u4e8c\u7ef4\u6b63\u6001\u53d8\u91cf\u7684\u4e92\u4fe1\u606f</p> \\[ I(X;Y) = - \\frac{1}{2} \\log (1-\\rho^2) \\] </li> </ul> </li> <li> <p>\u5fae\u5206\u71b5</p> \\[ H_c(X) = - \\int p(x) \\log p(x) dx \\] <ul> <li> <p>\u4e00\u4e9b\u8bf4\u660e\uff1a</p> <ul> <li> <p>\u5fae\u5206\u71b5\u5b9e\u9645\u4e0a\u4e0d\u662f\u8fde\u7eed\u53d8\u91cf\u7684\u4e0d\u786e\u5b9a\u5ea6\uff0c\u56e0\u4e3a\u90a3\u4e2a\u4e00\u822c\u662f\u65e0\u7a77\u5927</p> </li> <li> <p>\u5fae\u5206\u71b5\u662f\u4e00\u79cd\u4fdd\u8bc1\u524d\u9762\u79bb\u6563\u53d8\u91cf\u6027\u8d28\u7684\u201d\u9f9f\u815a\u201c\uff0c\u5b9e\u9645\u53ef\u6b63\u53ef\u8d1f</p> </li> <li> <p>\u5fae\u5206\u71b5\u4e0d\u5177\u6709\u7ebf\u6027\u4e0d\u53d8\u6027  </p> </li> </ul> </li> <li> <p>\u5cf0\u503c\u6027</p> <ul> <li> <p>\u53d6\u503c\u4e00\u5b9a\u65f6\uff0c\u5747\u5300\u5206\u5e03\u7684\u5fae\u5206\u71b5\u6700\u5927\uff0c\u4e3a \\(H_c(X) = \\ln L\\)</p> </li> <li> <p>\u65b9\u5dee\u4e00\u5b9a\u65f6\uff0c\u9ad8\u65af\u5206\u5e03\u7684\u5fae\u5206\u71b5\u6700\u5927\uff0c\u4e3a \\(H_c(X) = \\ln (\\sqrt{2 \\pi e} \\sigma)\\) </p> </li> </ul> </li> <li> <p>\u71b5\u529f\u7387\u7684\u5b9a\u4e49</p> \\[ \\bar \\sigma_x^2 = \\frac{1}{2 \\pi e} e^{2 H_c(X)} \\] <p>\u6b64\u65f6\u9ad8\u65af\u5206\u5e03\u7684\u71b5\u529f\u7387\u6070\u4e3a\\(\\sigma^2\\)</p> </li> </ul> </li> </ul>"},{"location":"Info/#_8","title":"\u5e73\u7a33\u79bb\u6563\u4fe1\u6e90","text":"<ul> <li>\u5e73\u7a33\u968f\u673a\u8fc7\u7a0b</li> </ul> <p>\u8fde\u7eedT\u65f6\u95f4\u6bb5\u5185\u7684\u6982\u7387\u5206\u5e03\u662f\u76f8\u540c\u7684</p> <p>\\(E(X_t) = E(X_{t+k}) = E(X_0) = Const.\\)</p> <ul> <li> <p>\u79bb\u6563\u4fe1\u6e90</p> <ul> <li> <p>\u5e73\u7a33\u4fe1\u6e90</p> \\[ P(x_1, x_2, \\cdots, x_n) = P(x_{1+k}, x_{2+k}, \\cdots, x_{n+k}) \\] </li> <li> <p>\u7b80\u5355\u65e0\u8bb0\u5fc6\u4fe1\u6e90</p> \\[ P(x_1, x_2, \\cdots, x_n) = P(x_1)P(x_2) \\cdots P(x_n) \\] </li> <li> <p>m\u9636\u9a6c\u5c14\u53ef\u592b\u4fe1\u6e90</p> \\[ P(x_1, x_2, \\cdots, x_n) = P(x_1)P(x_2|x_1) \\cdots P(x_n|x_{n-1}, \\cdots, x_{n-m}) \\] </li> </ul> </li> <li> <p>\u5e73\u7a33\u4fe1\u6e90\u7684\u71b5</p> <ul> <li> <p>\\(H = - \\sum P(\\vec{X}) \\log P(\\vec{X})\\) (\u4f1a\u8d8b\u8fd1\u4e8e\u65e0\u7a77\u5927)</p> </li> <li> <p>\u5e73\u5747\u6bcf\u7b26\u53f7\u71b5 \\(H_n(X) = \\frac{H(X)}{n}\\)</p> </li> <li> <p>\u71b5\u901f\u7387\\(H = \\lim_{n \\to \\infty} H_n\\)</p> </li> <li> <p>\u6027\u8d28</p> <ul> <li> <p>$H(X_N | X_{N-1}, \\cdots, X_1) $\u5355\u8c03\u4e0d\u589e</p> </li> <li> <p>\\(H_N(X)\\)\u5355\u8c03\u4e0d\u589e</p> </li> <li> <p>\\(H_N(X) \\geq H(X_N | X_{N-1}, \\cdots, X_1) \\to \\lim_{n \\to \\infty} H(X_N|X_{N-1}X_{N-2}\\cdots X_1)\\)</p> </li> </ul> </li> </ul> </li> <li> <p>\u71b5\u7684\u76f8\u5bf9\u7387</p> <ul> <li>\\(\\eta = \\frac{H}{\\log n}\\)</li> </ul> </li> <li> <p>\u4fe1\u6e90\u7684\u5197\u4f59\u5ea6</p> <ul> <li>\\(R = 1 - \\eta\\)</li> </ul> </li> <li> <p>\u9a6c\u5c14\u53ef\u592b\u6e90\u7684\u71b5\u7387</p> <ul> <li> \\[ H_{\\infty} = \\lim_{n \\to \\infty} H_n = H(X | S) = \\sum_{s_i \\in K^m} P(s_i) H(X | S = s_i) \\] </li> </ul> </li> </ul>"},{"location":"Info/#_9","title":"\u4fe1\u606f\u8bba &amp; \u901a\u4fe1","text":""},{"location":"Info/#_10","title":"\u6838\u5fc3","text":""},{"location":"Info/#_11","title":"\u4fe1\u6e90\u7f16\u7801","text":"<p>\u5728\u4ee3\u4ef7\u6700\u5c0f(\u6700\u5c0f\u7684\u6bd4\u7279\u6570)\u7684\u610f\u4e49\u4e0a\u6765\u6700\u6709\u6548\u5730\u8868\u793a\u4e00\u4e2a\u4fe1\u6e90</p> <ul> <li> <p>\u7b49\u957f\u7f16\u7801</p> <ul> <li>\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u5bf9\u4e8e\u6240\u6709\u53ef\u80fd\u8f93\u5165\u7684\\(K^L\\)\u5b57\u6bb5\u90fd\u5206\u914d\u4e00\u4e2a\u7b49\u957f\u7684\u7f16\u7801\uff0c\u56e0\u6b64\u6709 \\(D^N \\geq K^L\\)\uff0c\u5373 \\(N\\geq \\frac{L log K}{log D}\\)</li> </ul> </li> <li> <p>\u9999\u519c\u7f16\u7801\u5b9a\u7406(\u6e10\u8fdb\u65e0\u635f\u538b\u7f29\u7684\u6781\u9650)</p> <p>\\(N = \\frac{LH(U)}{log D}\\)</p> <ul> <li> <p>\\(L \\to \\infty,\\frac{I(u^L)}{L} \\to H(U)\\)</p> </li> <li> <p>\u5229\u7528\u5178\u578b\u5217\uff08\u5927\u6570\u5b9a\u5f8b\u578b\uff09\u8fdb\u884c\u76f4\u89c2\u8bc1\u660e(\u4e0d\u4e25\u683c)</p> <p></p> </li> <li> <p>\u7531\u5207\u6bd4\u96ea\u592b\u4e0d\u7b49\u5f0f\uff0c\u53ef\u4e25\u683c\u8bc1\u660e</p> <ul> <li>\\(2^{-n(H-\\epsilon)} \\leq P(\\vec{X}) \\leq 2^{-n(H+\\epsilon)}\\)</li> </ul> </li> </ul> </li> <li> <p>\u4e0d\u7b49\u957f\u7f16\u7801</p> <p>\\(\\bar L = \\sum n_k p_k\\)</p> <p>\u4e0d\u7b49\u957f\u7f16\u7801\u5b9a\u7406\uff1a</p> \\[\\exists\\bar{L}_{best}, \\ \\frac{H(U)}{logD} \\leq \\bar{L} \\leq \\frac{H(U)}{logD} + 1\\] <p>\u8bc1\u660e\uff1a</p> <p></p> <p></p> <p>\u5b9a\u7406\u6269\u5c55\uff1a</p> <p></p> <ul> <li> <p>\u552f\u4e00\u53ef\u8bd1\u6027</p> <p></p> <ul> <li> <p>Sardinas &amp; Petterson \u5224\u636e\uff08\u540e\u7f00\u5206\u89e3\uff09</p> <p>\u4e00\u4e2a\u7801\u662f\u552f\u4e00\u53ef\u8bd1\u7801\u7684\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u662f\u9664\\(S_0\\)\u5916\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u540e\u7f00\u5206\u89e3\u96c6\u4e2d\u5305\u542b\u7801\u5b57</p> <p></p> <p></p> </li> <li> <p>Kraft \u4e0d\u7b49\u5f0f(\u5f02\u5b57\u5934\u7801)</p> <p>\\(\\sum D^{-l_i} \\leq 1\\)</p> <ul> <li> <p>\u7b49\u957f\u7801\u65f6\uff0c\u7b49\u53f7\u6210\u7acb</p> </li> <li> <p>\u4e0d\u7b49\u957f\u7801\u65f6\uff0c\u4e0d\u7b49\u53f7\u6210\u7acb</p> </li> <li> <p>\u76f8\u5f53\u4e8e\u6240\u6709\u7801\u5b57\u90fd\u653e\u5728\u4e00\u68f5D\u53c9\u6811\u7684\u53f6\u5b50\u4e0a\uff0c\u6811\u7684\u6df1\u5ea6\u4e3a\u7801\u5b57\u7684\u6700\u957f\u957f\u5ea6\uff0c\u6bcf\u4e00\u5c42\u53ea\u80fd\u9009\u62e9\u4e00\u4e2a\u5206\u652f</p> </li> <li> <p>\u552f\u4e00\u53ef\u8bd1\u7801\u4e0d\u4e00\u5b9a\u662f\u5f02\u5b57\u5934\u7801\uff0c\u4f46\u552f\u4e00\u53ef\u8bd1\u7801\u5fc5\u5b9a\u6ee1\u8db3Kraft\u4e0d\u7b49\u5f0f</p> <p></p> </li> <li> <p>\u91cd\u8981\u5173\u7cfb\uff1a\u552f\u4e00\u53ef\u8bd1\u7801 --&gt; Kraft \u4e0d\u7b49\u5f0f\u6210\u7acb --&gt; \u5b58\u5728\u540c\u6837\u957f\u5ea6\u5206\u5e03\u7684\u5f02\u5b57\u5934\u7801</p> </li> </ul> </li> </ul> </li> <li> <p>\u5373\u65f6\u53ef\u8bd1\u6027 </p> </li> <li> <p>Huffman \u7f16\u7801\uff08\u6700\u4f18\uff0c\u7565\uff09</p> <ul> <li> <p>D \u5143</p> <p> </p> </li> </ul> </li> <li> <p>Shannon \u7f16\u7801</p> <p></p> <ul> <li> <p>\u524d\u7f00\u7801</p> <p> </p> </li> <li> <p>\u4e0e Huffman\u7f16\u7801 \u76f8\u6bd4\uff0cShannon \u7f16\u7801\u903c\u8fd1\u9999\u519c\u6781\u9650\uff0c\u4f46\u662f\u6536\u655b\u6027\u80fd\u4e0d\u5982 Huffman \u7f16\u7801</p> </li> </ul> </li> <li> <p>Fano \u7f16\u7801</p> <p></p> </li> <li> <p>\u79bb\u6563\u6709\u8bb0\u5fc6\u4fe1\u6e90</p> <p></p> </li> <li> <p>\u9a6c\u5c14\u53ef\u592b\u4fe1\u6e90\u7684\u7f16\u7801</p> <p></p> </li> </ul> </li> </ul>"},{"location":"Info/#_12","title":"\u4fe1\u9053\u63a5\u6536","text":"<p>\u5728\u4ee3\u4ef7\u5c3d\u91cf\u5c0f\u3001\u5c3d\u91cf\u6b63\u786e\u53ef\u9760\u5730\u63a5\u6536\u4fe1\u53f7\u7684\u610f\u4e49\u4e0a\u6765\u6700\u6709\u6548\u5730\u4f20\u8f93\u4e00\u4e2a\u4fe1\u6e90\uff08\u4fe1\u9053\u4f20\u8f93\u662f\u6982\u7387\u6027\u7684\uff09</p> <p></p>"},{"location":"Info/#_13","title":"\u4fe1\u9053\u5bb9\u91cf","text":"<ul> <li> <p>\u65e0\u8bb0\u5fc6\u4fe1\u6e90DMS</p> \\[I(X_1,X_2,\\cdots X_N;Y_1,Y_2,\\cdots Y_N) \\leq \\sum_{i=1}^{N} I(X_i, Y_i)\\] <p>\\(C = max I(X,Y)\\)</p> </li> <li> <p>\u5e73\u884c\u4fe1\u9053</p> <p></p> </li> <li> <p>\u5bf9\u79f0\u4fe1\u9053</p> <ul> <li> <p>\u8f93\u5165\u5bf9\u79f0\uff1a\u884c\u7f6e\u6362</p> </li> <li> <p>\u8f93\u51fa\u5bf9\u79f0\uff1a\u5217\u7f6e\u6362</p> </li> <li> <p>\u51c6\u5bf9\u79f0\uff1a\u6309\u5217\u5212\u5206\u5f97\u5230\u7684\u82e5\u5e72\u5b50\u4fe1\u9053\u662f\u5bf9\u79f0\u77e9\u9635 </p> </li> </ul> </li> </ul>"},{"location":"Info/#_14","title":"\u9999\u519c\u4fe1\u9053\u7f16\u7801\u5b9a\u7406","text":"<p>\u5982\u679c\u4fe1\u606f\u4f20\u8f93\u901f\u7387R\u5c0f\u4e8e\u4fe1\u9053\u5bb9\u91cfC\uff0c\u5219\u603b\u5b58\u5728\u4e00\u79cd\u7f16\u7801\u65b9\u6cd5\uff0c\u4f7f\u4fe1 \u606f\u5728\u8be5\u4fe1\u9053\u4e0a\u65e0\u9519\u8bef\u5730\u53ef\u9760\u4f20\u8f93\u3002</p> <p></p>"},{"location":"Info/#_15","title":"\u7406\u8bba\u6781\u9650","text":""},{"location":"Make/","title":"Makefile &amp; CMake","text":"<p>\u4eba\u59cb\u7ec8\u8fd8\u662f\u60f0\u6027\u52a8\u7269\uff0c\u867d\u7136\u5bd2\u5047\u91cc\u5df2\u7ecf\u5f3a\u8feb\u81ea\u5df1\u5b66\u4e86\u4e00\u4e9b\u57fa\u672c\u7684<code>Makefile</code>\uff0c\u4f46\u662f\u5f53\u771f\u7684\u9762\u5bf9\u4e00\u4e2aproject\u8fdb\u884c\u5e94\u7528\u7684\u65f6\u5019\uff0c\u8fd8\u662f\u4e3e\u6b65\u7ef4\u8270\u3002\u56e0\u6b64\u5c31\u501f\u7740OOP Lab1\u7684push, \u91cd\u65b0\u6574\u7406\u4e00\u4e0b\u5bf9\u4e8e<code>Makefile</code>\u7684\u7406\u89e3\u3002</p> <p>\u81f3\u4e8e<code>CMake</code>\uff0c\u7b49\u5c06\u6700\u8fd1\u4e13\u4e1a\u8bfe\u7684\u592a\u591a\u4f5c\u4e1a\u5904\u7406\u4e00\u4e0b\u518d\u6574\u7406\u3002 </p>"},{"location":"Make/#compile-link-c","title":"Compile &amp; Link (C++)","text":"<p>\u9996\u5148\u6574\u7406\u4e00\u4e0b\u4ee3\u7801\u6e90\u6587\u4ef6\u5230\u53ef\u6267\u884c\u6587\u4ef6\u7684\u8fc7\u7a0b\uff1a</p> <ul> <li> <p>Preprocessing\uff1a\u9884\u5904\u7406\uff0c\u5c06<code>#include</code>\u7684\u5934\u6587\u4ef6\u6240\u6307\u5f15\u7684\u6e90\u6587\u4ef6\u63d2\u5165\u5230\u5bf9\u5e94\u6587\u4ef6\u4e2d\uff0c\u8fdb\u884c\u5b8f\u5b9a\u4e49\u7684\u66ff\u6362\uff0c\u5e76\u5220\u9664\u6ce8\u91ca\uff0c\u751f\u6210\u4e34\u65f6\u6587\u4ef6<code>*.i</code>\u3002</p> </li> <li> <p>Compilation\uff1a\u7f16\u8bd1\uff0c\u5c06\u9884\u5904\u7406\u540e\u7684\u6587\u4ef6\u8f6c\u6362\u4e3a\u6c47\u7f16\u4ee3\u7801<code>*.s</code>\u3002</p> <ul> <li><code>g++ -S *.cpp</code> </li> </ul> </li> <li> <p>Assembly\uff1a\u6c47\u7f16\uff0c\u5c06\u6c47\u7f16\u4ee3\u7801\u8f6c\u6362\u4e3a\u76ee\u6807\u6587\u4ef6<code>*.o</code>\u3002</p> <ul> <li> <p><code>g++ -c *.s</code> </p> </li> <li> <p><code>g++ -c *.cpp</code> </p> </li> </ul> </li> <li> <p>Linking\uff1a\u94fe\u63a5\uff0c\u5c06\u76ee\u6807\u6587\u4ef6\u94fe\u63a5\u4e3a\u53ef\u6267\u884c\u6587\u4ef6\u3002</p> <ul> <li><code>g++ -o *(.exe) *.o</code> </li> </ul> </li> <li> <p>AR: \u751f\u6210\u94fe\u63a5\u5e93\u6587\u4ef6</p> <ul> <li><code>ar rcs libxxx.a *.o</code> </li> </ul> </li> <li> <p>PS: -o \u9009\u9879\u53ea\u662f\u6307\u5b9a\u8f93\u51fa\u6587\u4ef6\u540d\uff0c\u5e76\u6ca1\u6709\u5176\u4ed6\u7279\u6b8a\u7684\u610f\u4e49\uff0c\u56e0\u6b64\u524d\u9762\u51e0\u6761\u547d\u4ee4\u4e5f\u53ef\u4ee5\u4f7f\u7528-o\u9009\u9879\u6307\u5b9a\u8f93\u51fa\u6587\u4ef6\u540d\u3002 </p> </li> </ul>"},{"location":"Make/#multiple-files-c","title":"Multiple Files (C++)","text":"<ul> <li> <p>*.h</p> <ul> <li> <p>\u53ea\u662f\u4f5c\u4e3a\u8be5\u529f\u80fd\u6a21\u5757\u7684\u63a5\u53e3\uff0c\u4e00\u822c\u4e0d\u5305\u542b\u5177\u4f53\u7684\u5b9e\u73b0\uff0c\u901a\u8fc7<code>#include</code>\u6307\u5f15\u5230\u5bf9\u5e94\u7684\u6e90\u6587\u4ef6\u4e2d\u3002</p> </li> <li> <p>\u5f88\u591a\u65f6\u5019\u611f\u89c9\u7531\u4e8e\u7ffb\u8bd1\u95ee\u9898\uff0c\u201d\u5b9a\u4e49\u201c\u3001\u201d\u58f0\u660e\u201c\u3001\u201d\u5b9e\u73b0\u201c\u4e4b\u7c7b\u7684\u611f\u89c9\u5b8c\u5168\u5206\u4e0d\u6e05\uff0c\u4f46\u662f\u4e00\u822c\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\u5728\u5934\u6587\u4ef6\u4e2d\u4e0d\u80fd\u5f00\u8f9f\u5185\u5b58\u7a7a\u95f4\u5373\u53ef\u3002</p> </li> <li> <p>\u4e3b\u8981\u5185\u5bb9\uff1a</p> <ul> <li> <p>\u5934\u6587\u4ef6\u4fdd\u62a4 <code>#ifndef</code> <code>#define</code> <code>#endif</code></p> </li> <li> <p>\u7ed3\u6784\u4f53\u3001\u7c7b\u7684\u58f0\u660e\uff08\u91cd\u8f7d\u8fd0\u7b97\u7b26\u4f3c\u4e4e\u9700\u8981\u76f4\u63a5\u5b9e\u73b0\uff0c\u5176\u4ed6\u5185\u90e8\u51fd\u6570\u53ea\u9700\u8981\u58f0\u660e\uff09</p> </li> <li> <p>\u51fd\u6570\u7684\u58f0\u660e</p> </li> <li> <p>\u5b8f\u5b9a\u4e49</p> </li> <li> <p>\u5168\u5c40\u91cf\u7684\u58f0\u660e <code>extern</code> \uff08\u4e0d\u53ef\u8d4b\u503c\uff0c\u5426\u5219\u5c31\u9700\u8981\u5360\u7528\u5185\u5b58\u7a7a\u95f4\u4e86\uff09      </p> </li> <li> <p>\u5176\u4ed6\u9700\u8981\u7684\u5934\u6587\u4ef6\uff0c\u8fd9\u6837\u53ef\u4ee5\u7531\u8be5\u6a21\u5757\u76f4\u63a5\u751f\u6210\u5bf9\u5e94\u7684OBJ\u76ee\u6807\u6587\u4ef6\uff0c\u65b9\u4fbf\u6574\u4e2a\u5de5\u7a0b\u540e\u7eed\u7684\u94fe\u63a5\u3002 </p> </li> </ul> </li> </ul> </li> <li> <p>*.cpp\uff08\u529f\u80fd\u6a21\u5757\u6e90\u6587\u4ef6\uff09</p> <ul> <li> <p>\u5bf9\u5934\u6587\u4ef6\u58f0\u660e\u7684\u90e8\u5206\u8fdb\u884c\u5177\u4f53\u5b9e\u73b0</p> </li> <li> <p>\u4e3b\u8981\u5185\u5bb9\uff1a</p> <ul> <li> <p>\u5934\u6587\u4ef6\u5f15\u7528</p> <ul> <li>\u4e0a\u8ff0\u540c\u540d\u5934\u6587\u4ef6</li> </ul> </li> <li> <p>\u7ed3\u6784\u4f53\u3001\u7c7b\u7684\u5b9e\u73b0\uff0c\u4e0d\u80fd\u91cd\u590d\u51fa\u73b0\u58f0\u660e\u90e8\u5206\uff0c\u9700\u8981\u7528<code>name::</code>\u6307\u5b9a </p> </li> <li> <p>\u51fd\u6570\u7684\u5b9e\u73b0</p> </li> <li> <p>\u5168\u5c40\u91cf\u7684\u5b9a\u4e49\uff08\u8d4b\u503c\uff09</p> </li> </ul> </li> </ul> </li> <li> <p>Main.cpp </p> <ul> <li> <p>\u4e3b\u51fd\u6570\uff0c\u8c03\u7528\u5176\u4ed6\u6a21\u5757\u7684\u51fd\u6570\uff0c\u5b9e\u73b0\u6574\u4e2a\u7a0b\u5e8f\u7684\u529f\u80fd\u3002</p> </li> <li> <p>\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u53ea\u9700\u8981\u5f15\u7528\u5bf9\u5e94\u7684\u5934\u6587\u4ef6\uff0c\u7136\u540e\u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570\u5373\u53ef\u3002  </p> </li> </ul> </li> </ul>"},{"location":"Make/#makefile","title":"Makefile","text":"<p>Make loves c compilation. And every time it expresses its love, things get confusing.</p> <ul> <li> <p>Tutorial \uff08\u901a\u8fc7\u5927\u91cf\u4e3e\u4f8b\uff0c\u975e\u5e38\u901a\u4fd7\u6613\u61c2\u4e14\u5f62\u8c61</p> </li> <li> <p>Docs \uff08\u5b98\u65b9\u6587\u6863\uff0c\u8be6\u7ec6\u5168\u9762\uff0c\u4f46\u662f\u6709\u70b9\u67af\u71e5\uff09</p> </li> <li> <p>Makefile \u6211\u7684\u7406\u89e3\uff0c\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u81ea\u52a8\u5316\u7f16\u8bd1\u7684\u811a\u672c\uff0c\u901a\u8fc7\u6307\u5b9a\u4e00\u7cfb\u5217\u7684\u89c4\u5219\u548c\u547d\u4ee4\uff0c\u6765\u5b9e\u73b0\u5bf9\u4e8e\u6e90\u6587\u4ef6\u7684\u7f16\u8bd1\u3001\u94fe\u63a5\u7b49\u64cd\u4f5c\u3002\u4e0b\u9762\u6211\u5c31\u7b80\u5355\u6574\u7406\u4e86\u4e00\u4e0b\u81ea\u5df1\u8ba4\u4e3a\u6bd4\u8f83\u91cd\u8981\u6bd4\u8f83\u5e38\u7528\u7684\u4e00\u4e9b\u70b9\u3002</p> </li> </ul>"},{"location":"Make/#varible","title":"Varible","text":"<ul> <li> <p>\u5e38\u7528\u5168\u90e8\u5927\u5199\uff0c\u7528<code>(:)=</code>\u8d4b\u503c</p> <ul> <li><code>:=</code> \u4f1a\u7acb\u5373\u5c55\u5f00\uff0c\u800c<code>=</code>\u5219\u662f\u5728\u4f7f\u7528\u65f6\u624d\u5c55\u5f00 (\u56e0\u6b64\u53ef\u4ee5\u7528\u4e8e\u9012\u5f52\u5b9a\u4e49)</li> </ul> </li> <li> <p><code>+=</code> \u8ffd\u52a0\u8d4b\u503c</p> </li> <li> <p>\u7528\u7528<code>$()</code>\u5f15\u7528</p> </li> <li> <p>\u5173\u4e8e\u503c\u7684\u4f20\u5165\uff08\u4eceWK\u8001\u5e08\u7684\u8865\u5145\u8d44\u6599\u91cc\u5b66\u5230\u7684\uff09</p> <ul> <li> <p><code>make</code>\u547d\u4ee4\u540e\u9762\u53ef\u4ee5\u76f4\u63a5\u8ddf\u4e0a\u53d8\u91cf\u7684\u8d4b\u503c<code>NAME=VALUE</code>\uff0c\u8fd9\u6837\u53ef\u4ee5\u5728<code>Makefile</code>\u4e2d\u4f7f\u7528\u8fd9\u4e2a\u53d8\u91cf<code>$(NAME)</code></p> </li> <li> <p><code>make</code>\u547d\u4ee4\u540e\u9762\u76f4\u63a5\u8ddf\u4e0a\u53d8\u91cf\u7684\u8d4b\u503c<code>NAME=VALUE</code>\uff0c\u8fd8\u53ef\u4ee5\u5f53\u4f5cC\u8bed\u8a00\u4ee3\u7801\u7684\u5b8f\u5b9a\u4e49\uff0c\u8fd9\u6837\u7f16\u8bd1\u7ed3\u679c\u4f1a\u4e0d\u540c</p> <p>C \u8bed\u8a00\u53ef\u4ee5\u901a\u8fc7<code>-D</code>\uff0c\u7528\u5b8f\u5b9a\u4e49\u9009\u9879\u4f20\u5165\u5bf9\u5e94\u7684\u53d8\u91cf\u503c </p> <p>\u4f8b\u5982\u4e0b\u9762\u4ee3\u7801\uff0c\u53ef\u4ee5\u4f7f\u7528<code>g++ -D ARGS=\\\"Hello World\\\" main.c -o main</code>\u6765\u7f16\u8bd1\u5f97\u5230<code>main</code>\u53ef\u6267\u884c\u6587\u4ef6(\u53cd\u659c\u6760\u662f\u4e3a\u4e86\u8f6c\u4e49\u53cc\u5f15\u53f7\u4e00\u8d77\u4f20\u5165\u907f\u514d\u5f53\u6210\u5b8f\u5b9a\u4e49\u7684\u8d4b\u503c)\uff0c\u8f93\u51fa<code>Hello World</code></p> main.c<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint main(){\n    cout &lt;&lt; ARGS &lt;&lt; endl;\n    return 0;\n}\n</code></pre> </li> </ul> </li> </ul>"},{"location":"Make/#sign","title":"Sign","text":"<ul> <li> <p>\u7279\u6b8a\u53d8\u91cf</p> <ul> <li> <p><code>$@</code> \u76ee\u6807\u6587\u4ef6</p> </li> <li> <p><code>$^</code> \u6240\u6709\u7684\u4f9d\u8d56\u6587\u4ef6</p> </li> <li> <p><code>$&lt;</code> \u7b2c\u4e00\u4e2a\u4f9d\u8d56\u6587\u4ef6</p> </li> <li> <p><code>$?</code> \u6240\u6709\u6bd4\u76ee\u6807\u6587\u4ef6\u65b0\u7684\u4f9d\u8d56\u6587\u4ef6</p> </li> <li> <p><code>$*</code> \u65e0\u540e\u7f00\u7684\u76ee\u6807\u6587\u4ef6\u540d</p> </li> </ul> </li> <li> <p>\u901a\u914d\u7b26</p> <ul> <li> <p><code>*</code> \u5339\u914d\u4efb\u610f\u957f\u5ea6\u7684\u5b57\u7b26\u4e32</p> </li> <li> <p><code>?</code> \u5339\u914d\u5355\u4e2a\u5b57\u7b26</p> </li> <li> <p><code>%</code> \u5339\u914d\u4efb\u610f\u6709\u957f\u5ea6\u7684\u5b57\u7b26\u4e32,\u5e76\u4e14\u5f80\u5f80\u5e94\u7528\u5728Pattern Rule</p> </li> </ul> </li> </ul>"},{"location":"Make/#rule","title":"Rule","text":"<ul> <li> <p>Basic Rule</p> Makefile<pre><code>target: prerequisites\n    command\n</code></pre> <ul> <li> <p>Target\uff1a</p> <ul> <li> <p>\u76ee\u6807, \u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u6807\u53f7\uff0c\u7528\u4e8e\u6307\u5b9a\u4e00\u4e2a\u89c4\u5219\u7684\u540d\u5b57</p> </li> <li> <p>\u7279\u6b8a\u7684\uff0c'all'\u4e3a\u9ed8\u8ba4\u76ee\u6807\uff0c'clean'\u4e3a\u6e05\u7406\u76ee\u6807</p> </li> </ul> </li> <li> <p>Prerequisites\uff1a\u4f9d\u8d56\u6587\u4ef6\uff0c\u4f9d\u8d56\u6587\u4ef6\u53d8\u5316\u624d\u4f1a\u6267\u884c\u76f8\u5e94\u547d\u4ee4</p> </li> <li> <p>Command\uff1a\u547d\u4ee4 </p> </li> </ul> </li> <li> <p>Pattern Rule</p> Makefile<pre><code>%.o: %.c\n    $(CC) $(CFLAG) -c $&lt; -o $@\n</code></pre> <ul> <li> <p>%.o\uff1a\u901a\u914d\u7b26\uff0c\u8868\u793a\u6240\u6709\u7684.o\u6587\u4ef6</p> </li> <li> <p>%.c\uff1a\u901a\u914d\u7b26\uff0c\u8868\u793a\u6240\u6709\u7684.c\u6587\u4ef6</p> </li> <li> <p>\u8fd9\u91cc\u76f8\u5f53\u4e8e\u5c06\u76ee\u5f55\u4e2d\u6240\u6709\u7684.c\u6587\u4ef6\u7f16\u8bd1\u4e3a\u5bf9\u5e94\u7684.o\u6587\u4ef6\uff0c\u800c\u4e0d\u9700\u8981\u4e00\u4e2a\u4e2a\u6307\u5b9a</p> </li> <li> <p>\u867d\u7136\u770b\u8d77\u6765\u76f8\u5f53\u9ad8\u6548\uff0c\u4f46\u662f\u7531\u4e8e\u8fd9\u6837\u6ca1\u6709\u89c4\u5219\u6807\u53f7\uff0c\u96be\u4ee5\u63a7\u5236\uff0c\u56e0\u6b64\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u5e76\u4e0d\u5e38\u7528</p> </li> </ul> </li> <li> <p>Static Pattern Rule</p> Makefile<pre><code>targets: target-pattern: prereq-patterns\n    command\n</code></pre> <ul> <li> <p>targets: \u8fd9\u91cc\u5f80\u5f80\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u8868\u793a\u4e00\u7cfb\u5217\u7684\u76ee\u6807\u6587\u4ef6</p> </li> <li> <p>target-pattern: \u4e00\u822c\u4f7f\u7528<code>%</code>\u901a\u914d\u7b26\u6765\u83b7\u53d6\u6587\u4ef6\u4fe1\u606f</p> </li> <li> <p>prereq-patterns: \u540c\u4e0a\uff0c\u4e00\u822c\u4f7f\u7528<code>%</code>\u901a\u914d\u7b26\u6765\u83b7\u53d6\u6587\u4ef6\u4fe1\u606f </p> </li> <li> <p>command: \u611f\u89c9\u975e\u5e38\u50cfVerilog\u4e2d\u7684generate\u8bed\u53e5\uff0c\u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u89c4\u5219\u6765\u751f\u6210\u76f8\u4f3c\u7684\u529f\u80fd\u6a21\u5757\uff08\u8be6\u89c1\u4e0b\u65b9\u4f8b\u5b50\uff09</p> </li> </ul> </li> <li> <p>Pattern Filter</p> <ul> <li> <p><code>$(filter pattern, text)</code>: \u4ecetext\u4e2d\u7b5b\u9009\u51fa\u7b26\u5408pattern\u7684\u90e8\u5206 </p> </li> <li> <p>\u53ef\u4ee5\u914d\u5408\u4e0a\u65b9\u7684Pattern Rule\u4f7f\u7528\uff0c\u66ff\u6362targets\u6765\u5b9e\u73b0\u66f4\u52a0\u7075\u6d3b\u7684\u529f\u80fd</p> </li> </ul> Makefile<pre><code># Ex 1: .o files depend on .c files. Though we don't actually make the .o file.\n$(filter %.o,$(obj_files)): %.o: %.c\necho \"target: $@ prereq: $&lt;\"\n\n# Ex 2: .result files depend on .raw files. Though we don't actually make the .result file.\n$(filter %.result,$(obj_files)): %.result: %.raw\necho \"target: $@ prereq: $&lt;\" \n</code></pre> </li> </ul>"},{"location":"Make/#function","title":"Function","text":"<ul> <li> <p><code>$(wildcard pattern)</code></p> <ul> <li>\u901a\u914d\u7b26\uff0c\u83b7\u53d6\u5f53\u524d\u76ee\u5f55\u4e0b\u6240\u6709\u7b26\u5408pattern\u7684\u6587\u4ef6\u540d</li> </ul> </li> <li> <p><code>$(patsubst pattern, replacement, text)</code></p> <ul> <li>\u66ff\u6362\uff0c\u5c06text\u4e2d\u7b26\u5408pattern\u7684\u90e8\u5206\u66ff\u6362\u4e3areplacement</li> </ul> </li> <li> <p><code>$(addprefix prefix, names)</code></p> <ul> <li>\u6dfb\u52a0\u524d\u7f00\uff0c\u5c06names\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u6dfb\u52a0\u4e0aprefix</li> </ul> </li> <li> <p><code>$(addsuffix suffix, names)</code></p> <ul> <li>\u6dfb\u52a0\u540e\u7f00\uff0c\u5c06names\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u6dfb\u52a0\u4e0asuffix </li> </ul> </li> <li> <p><code>$(shell command)</code></p> <ul> <li>\u6267\u884c\u547d\u4ee4\uff0c\u5c06\u547d\u4ee4\u7684\u8f93\u51fa\u4f5c\u4e3a\u51fd\u6570\u7684\u8fd4\u56de\u503c</li> </ul> </li> </ul>"},{"location":"Make/#_1","title":"\u5176\u4ed6\u9ad8\u9636\u7528\u6cd5","text":"<ul> <li> <p>~~\u8fd8\u6ca1\u5b66~~</p> </li> <li> <p>\u5173\u4e8e.h\u6587\u4ef6\u4f9d\u8d56\u7684\u95ee\u9898</p> <ul> <li> <p>\u4fee\u6539\u4e86<code>.h</code>\u6587\u4ef6\uff0c\u4f46\u662f\u4e0d\u4fee\u6539<code>.cpp</code>\u6587\u4ef6\uff0c\u8fd9\u65f6\u5019makefile\u5e76\u4e0d\u4f1a\u91cd\u65b0\u7f16\u8bd1\u5bf9\u5e94\u7684<code>.o</code>\u6587\u4ef6\uff0c\u56e0\u4e3a\u5b83\u5e76\u4e0d\u77e5\u9053<code>.h</code>\u6587\u4ef6\u7684\u4fee\u6539\u3002</p> </li> <li> <p>\u6362\u53e5\u8bdd\u8bf4\uff0cMakefile \u53ea\u77e5\u9053<code>.o</code>\u4f9d\u8d56\u4e8e\u5bf9\u5e94\u7684<code>.cpp</code>\u6587\u4ef6\uff0c\u4f46\u5e76\u4e0d\u77e5\u9053\u8be5<code>.cpp</code>\u6587\u4ef6\u5177\u4f53\u4f9d\u8d56\u4e8e\u54ea\u4e9b<code>.h</code>\u6587\u4ef6\uff0c\u56e0\u6b64\u9700\u8981\u624b\u52a8\u6307\u5b9a\u4f9d\u8d56\u5173\u7cfb\u3002</p> </li> <li> <p>\u89e3\u51b3\u65b9\u6848</p> <ul> <li> <p>\uff5e\uff5e\u624b\u52a8\u8865\u5168\u5173\u7cfb\uff5e\uff5e</p> </li> <li> <p>\u4f7f\u7528 gcc/g++ \u7684<code>-MMD</code>\u9009\u9879\uff0c\u53ef\u4ee5\u81ea\u52a8\u751f\u6210\u4f9d\u8d56\u5173\u7cfb\u6587\u4ef6<code>*.d</code>, \u7136\u540e\u5728Makefile\u4e2d\u4f7f\u7528<code>-include</code>\u5f15\u7528\u8fd9\u4e9b\u6587\u4ef6\uff0c\u5c31\u53ef\u4ee5\u81ea\u52a8\u66f4\u65b0\u4f9d\u8d56\u5173\u7cfb\u4e86\u3002</p> </li> </ul> </li> </ul> </li> </ul>"},{"location":"Make/#exampleoop-lab1","title":"Example(\u4ee5OOP Lab1\u4e3a\u4f8b)","text":"<ul> <li> <p>\u9879\u76ee\u7b80\u4ecb\uff1a</p> <ul> <li> <p>\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u6587\u672c\u7ba1\u7406\u7cfb\u7edf\uff0c\u8981\u6c42\u751f\u6210<code>pdadd</code>\u3001<code>pdlist</code>\u3001<code>pdremove</code>\u3001<code>pdshow</code> 4\u4e2a\u53ef\u6267\u884c\u6587\u4ef6</p> </li> <li> <p>\u7f16\u7a0b\u65f6\u521b\u5efa\u4e86\u4e00\u4e2afile\u7c7b\uff0c\u7528\u4e8e\u4e0e\u6587\u672c\u6587\u4ef6\u8fdb\u884c\u4ea4\u4e92\uff0c\u56e0\u6b64\u56db\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u90fd\u9700\u8981\u5f15\u7528\u8be5\u7c7b\u7684\u5934\u6587\u4ef6 </p> </li> </ul> </li> <li> <p>\u3010\u6700\u7b80\u5355\u7c97\u66b4\u7248\u3011</p> </li> </ul> Makefile<pre><code>  CC = g++\n  CFLAG = -std=c++11\n  SRC = .\n  OD = ..\n  FILE_ASSIST = $(SRC)/file.cpp\n\n  # \u76f4\u63a5\u4e24\u4e24\u6587\u4ef6\u4e00\u7ed1\uff0c\u7136\u540e\u76f4\u63a5\u7f16\u8bd1\n  $(OD)/pdadd: $(SRC)/pdadd.cpp $(FILE_ASSIST)\n      $(CC) $(CFLAG) $^ -o $(OD)/pdadd\n\n  $(OD)/pdlist: $(SRC)/pdlist.cpp $(FILE_ASSIST)\n      $(CC) $(CFLAG) $^ -o $(OD)/pdlist\n\n  $(OD)/pdshow: $(SRC)/pdshow.cpp $(FILE_ASSIST)\n      $(CC) $(CFLAG) $^ -o $(OD)/pdshow\n\n  $(OD)/pdremove: $(SRC)/pdremove.cpp $(FILE_ASSIST)\n      $(CC) $(CFLAG) $^ -o $(OD)/pdremove\n\n  clean:\n      rm -f $(OD)/pdadd $(OD)/pdlist $(OD)/pdremove $(OD)/pdshow\n      rm -f $(SRC)/*.o \n</code></pre> <ul> <li>\u3010\u6b63\u5e38\u7f16\u8bd1\u7a0b\u5e8f\u7248\u3011</li> </ul> Makefile<pre><code>  CC = g++\n  CFLAG = -std=c++11\n  SRC = .\n  OD = ..\n  OBJ = $(SRC)/file.o         #   object files of file assist\n  ADDOBJ = $(SRC)/pdadd.o     #   object file for pdadd\n  LISTOBJ = $(SRC)/pdlist.o       #   object file for pdlist\n  REMOVEOBJ = $(SRC)/pdremove.o   #   object file for pdremove\n  SHOWOBJ = $(SRC)/pdshow.o       #   object file for pdshow\n\n  all: $(OD)/pdadd $(OD)/pdlist $(OD)/pdremove $(OD)/pdshow\n\n  # \u901a\u8fc7.o\u6587\u4ef6\u94fe\u63a5\u5f97\u5230\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u907f\u514d\u4e86\u91cd\u590d\u7f16\u8bd1\n  $(OD)/pdadd: $(ADDOBJ) $(OBJ)\n      $(CC) $(CFLAG) -o $(OD)/pdadd $(ADDOBJ) $(OBJ)\n\n  $(OD)/pdlist: $(LISTOBJ) $(OBJ)\n      $(CC) $(CFLAG) -o $(OD)/pdlist $(LISTOBJ) $(OBJ)\n\n  $(OD)/pdremove: $(REMOVEOBJ) $(OBJ)\n      $(CC) $(CFLAG) -o $(OD)/pdremove $(REMOVEOBJ) $(OBJ)\n\n  $(OD)/pdshow: $(SHOWOBJ) $(OBJ)\n      $(CC) $(CFLAG) -o $(OD)/pdshow $(SHOWOBJ) $(OBJ)    \n\n  # \u901a\u8fc7\u4ece.cpp\u6587\u4ef6\u7f16\u8bd1\u5f97\u5230.o\u6587\u4ef6\n  .cpp.o:\n      $(CC) $(CFLAG) -c $&lt; -o $@\n\n  clean:\n      rm -f $(OBJ) $(ADDOBJ) $(LISTOBJ) $(REMOVEOBJ) $(SHOWOBJ) $(OD)/pdadd $(OD)/pdlist $(OD)/pdremove $(OD)/pdshow\n</code></pre> <ul> <li>\u3010\u9ad8\u6548\u7248\u3011</li> </ul> Makefile<pre><code>  CC = g++\n  CFLAG = -std=c++11\n  SRC = .\n  OD = ..\n  OBJ = $(SRC)/file.o         #   object files of file assist\n  TARGETS = pdadd pdlist pdremove pdshow\n  OBJS = $(addsuffix .o, $(TARGETS)) file.o\n\n  all: $(OBJS) $(TARGETS) \n\n  # \u901a\u8fc7static pattern rule\uff0c\u5927\u5927\u7b80\u5316\u4e86\u751f\u6210*.o \u548c *(.exe)\u7684\u8fc7\u7a0b\n  $(TARGETS): %: $(SRC)/%.o $(OBJ)\n      $(CC) $(CFLAG) -o $(OD)/$@ $^\n\n  $(OBJS): %.o: $(SRC)/%.cpp\n      $(CC) $(CFLAG) -c $&lt; -o $(SRC)/$@\n\n  clean:\n      cd $(SRC) &amp;&amp; rm -f $(OBJS)\n      cd $(OD) &amp;&amp; rm -f $(TARGETS)\n</code></pre>"},{"location":"Make/#cmake","title":"CMake","text":"<p>\u76ee\u524d\u7684\u611f\u89c9\u5c31\u50cf\u662f\u4e00\u4e2a\u5e2e\u52a9\u4f60\u751f\u6210Makefile\u7684\u5de5\u5177\uff0c\u901a\u8fc7CMakeLists.txt\u6587\u4ef6\u6765\u6307\u5b9a\u9879\u76ee\u7684\u7f16\u8bd1\u89c4\u5219\uff0c\u7136\u540e\u901a\u8fc7<code>cmake PROJECT_DIR</code>\u6765\u751f\u6210\u5bf9\u5e94\u7684Makefile\u7b49\u5de5\u7a0b\u6587\u4ef6\u5230\u5f53\u524d\u76ee\u5f55\uff0c\u7136\u540e\u901a\u8fc7<code>make --build .</code>\u6765\u5b8c\u6210\u7f16\u8bd1\u94fe\u63a5\u751f\u6210\u3002</p> <ul> <li>Tutorial \uff08\u5b98\u65b9\u6559\u7a0b\uff0c\u6bd4\u8f83\u5168\u9762\uff0c\u4f46\u662f\u4e0d\u662f\u7279\u522b\u597d\u7406\u89e3\u611f\u89c9\uff0c\u76ee\u524d\u8fdb\u5ea6 STEP3\uff09</li> </ul>"},{"location":"Make/#basic","title":"Basic","text":"<p>\u6700\u57fa\u672c\u7684 CMakeLists.txt \u6587\u4ef6\u67b6\u6784\u5982\u4e0b\uff1a</p> <ul> <li> <p><code>cmake_minimum_required(VERSION 3.10)</code></p> <ul> <li>\u6307\u5b9aCMake\u7684\u6700\u4f4e\u7248\u672c</li> </ul> </li> <li> <p><code>project(PROJECT_NAME VERSION 1.0)</code></p> <ul> <li> <p>\u6307\u5b9a\u9879\u76ee\u7684\u540d\u79f0\u4ee5\u53ca\u7248\u672c</p> </li> <li> <p>\u751f\u6210\u7a0b\u5e8f\u5bf9\u7248\u672c\u7684\u5d4c\u5165\uff0c\u53ef\u4ee5\u901a\u8fc7<code>configure_file</code>\u547d\u4ee4\u6765\u5b9e\u73b0 </p> <ul> <li> <p><code>configure_file(config.h.in config.h)</code></p> config.h.in<pre><code>#define PROJECT_NAME \"@PROJECT_NAME@\"\n#define PROJECT_VERSION \"@PROJECT_VERSION@\"\n#define Tutorial_VERSION_MAJOR @Tutorial_VERSION_MAJOR@\n#define Tutorial_VERSION_MINOR @Tutorial_VERSION_MINOR@\n</code></pre> </li> <li> <p>\u8fd9\u6837\u5728\u7f16\u8bd1\u65f6\u4fbf\u4f1a\u5728\u5f53\u524dbuild\u76ee\u5f55\u4e0b<code>config.h</code>\u4e2d\u751f\u6210\u5bf9\u5e94\u7684\u7248\u672c\u4fe1\u606f\u7684\u5982\u4e0a\u5b8f\u5b9a\u4e49</p> </li> <li> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7<code>target_include_directories(PROJECT PUBLIC \"${PROJECT_BINARY_DIR}\")</code>\u5f15\u5165\u8be5\u6587\u4ef6\uff0c\u5e76\u5728\u6e90\u6587\u4ef6\u4e2d\u901a\u8fc7<code>#include \"config.h\"</code>\u6765\u5f15\u7528\u8fd9\u4e9b\u5b8f\u5b9a\u4e49\uff0c\u5b8c\u6210\u7248\u672c\u7684\u5d4c\u5165  </p> </li> </ul> </li> </ul> </li> <li> <p><code>add_executable(EXECUTABLE_NAME SOURCE_FILES)</code> </p> <ul> <li>\u6307\u5b9a\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u7684\u540d\u79f0\u4ee5\u53ca\u5bf9\u5e94\u7684\u6e90\u6587\u4ef6</li> </ul> </li> </ul>"},{"location":"Make/#_2","title":"\u7f16\u8bd1\u9009\u9879","text":"<ul> <li> <p><code>set(CMAKE_CXX_STANDARD 11)</code></p> <ul> <li> <p>\u6307\u5b9aC++\u7684\u6807\u51c6\u7248\u672c</p> </li> <li> <p><code>set(CMAKE_CXX_STANDARD_REQUIRED ON)</code></p> <ul> <li>\u6307\u5b9a\u662f\u5426\u5f3a\u5236\u4f7f\u7528\u8be5\u6807\u51c6\u7248\u672c </li> </ul> </li> </ul> </li> <li> <p><code>set(CMAKE_CXX_FLAGS \"-Wall -Wextra\")</code></p> <ul> <li>\u6307\u5b9a\u7f16\u8bd1\u9009\u9879 </li> </ul> </li> <li> <p><code>add_library(tutorial_compiler_flags INTERFACE)</code></p> <p><code>target_compile_features(tutorial_compiler_flags INTERFACE cxx_std_11)</code> \u6765\u6307\u5b9a\u7f16\u8bd1\u7279\u6027</p> </li> </ul>"},{"location":"Make/#_3","title":"\u591a\u6587\u4ef6\u7ec4\u7ec7","text":"<ul> <li> <p>\u6dfb\u52a0\u4e00\u4e2alibrary\uff08\u5b50\u76ee\u5f55\uff09</p> <ul> <li> <p><code>add_library(LIBRARY_NAME STATIC/SHARED SOURCE_FILES)</code></p> <ul> <li>\u6307\u5b9a\u751f\u6210\u9759\u6001/\u52a8\u6001\u5e93\u7684\u540d\u79f0\u4ee5\u53ca\u5bf9\u5e94\u7684\u6e90\u6587\u4ef6 (\u8fd9\u4e00\u6b65\u5728\u5b50\u76ee\u5f55\u7684CMakeLists.txt\u4e2d\u5b8c\u6210)</li> </ul> </li> <li> <p><code>target_link_libraries(EXECUTABLE_NAME/LIBRARY_NAME [PUBLIC] LIBRARY_NAME)</code></p> <ul> <li>\u6307\u5b9a\u53ef\u6267\u884c\u6587\u4ef6\u94fe\u63a5\u7684\u5e93\u6587\u4ef6</li> </ul> </li> <li> <p><code>target_include_subdirectory(EXECUTABLE_NAME DIRS)</code></p> <ul> <li>\u5c06\u5bf9\u5e94\u76ee\u5f55\u52a0\u5165\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5934\u6587\u4ef6\u76ee\u5f55 </li> </ul> </li> </ul> </li> <li> <p>\u4f7f\u7528INTERFACE\u63a7\u5236LIBRARY</p> <ul> <li> <p><code>add_library(LIBRARY_NAME INTERFACE)</code></p> <ul> <li>\u6307\u5b9a\u751f\u6210\u4e00\u4e2aINTERFACE\u5e93\uff0c\u4e0d\u5305\u542b\u6e90\u6587\u4ef6\uff0c\u53ea\u5305\u542b\u5934\u6587\u4ef6\u548c\u7f16\u8bd1\u9009\u9879</li> </ul> </li> <li> <p><code>target_include_directories(LIBRARY_NAME INTERFACE DIRS)</code></p> <ul> <li>\u6307\u5b9a\u5e93\u6587\u4ef6\u7684\u5934\u6587\u4ef6\u76ee\u5f55</li> </ul> </li> <li> <p><code>target_link_libraries(EXECUTABLE_NAME LIBRARY_NAME)</code></p> <ul> <li>\u8fd9\u6837\u76f4\u63a5\u6307\u5b9a\u53ef\u6267\u884c\u6587\u4ef6\u94fe\u63a5\u7684\u5e93\u6587\u4ef6\u5373\u53ef\uff0c\u4e0d\u7528\u624b\u52a8\u5904\u7406\u5934\u6587\u4ef6\u76ee\u5f55</li> </ul> </li> </ul> </li> <li> <p>\u5229\u7528\u53d8\u91cf\u8fdb\u884c\u7075\u6d3b\u63a7\u5236</p> <ul> <li> <p><code>option(VARIABLE [\"COMMENT\"] ON/OFF)</code>\u53ef\u4ee5\u4ea7\u751f\u5bf9\u5e94\u7684\u7f13\u5b58\u53d8\u91cf\uff0c\u53ef\u4ee5\u7ed3\u5408<code>if() endif()</code>\u63a7\u5236\u7f16\u8bd1\u8fc7\u7a0b</p> </li> <li> <p>\u6709\u4e2a\u5c0f\u95ee\u9898\u5c31\u662f\u66f4\u65b0\u4e0d\u53ca\u65f6\uff0c\u6709\u65f6\u8981\u5220\u9664\u539f\u6765\u7684 build \u6587\u4ef6\u624d\u80fd\u8d77\u4f5c\u7528 </p> </li> </ul> </li> <li> <p>\u5176\u4ed6\u7f16\u8bd1\u9009\u9879</p> <ul> <li> <p><code>Target_compile_features(TARGET PUBLIC cxx_std_11)</code></p> <ul> <li>\u6307\u5b9a\u7f16\u8bd1\u7279\u6027</li> </ul> </li> <li> <p><code>target_compile_options(TARGET PUBLIC -Wall -Wextra)</code></p> <ul> <li>\u6307\u5b9a\u7f16\u8bd1\u9009\u9879  </li> </ul> </li> <li> <p><code>target_compile_definitions(TARGET PUBLIC \u201cMACRO_NAME\u201d)</code></p> <ul> <li>\u6307\u5b9a\u5b8f\u5b9a\u4e49 </li> </ul> </li> </ul> </li> </ul>"},{"location":"OOP/","title":"OOP","text":""},{"location":"OOP/#_1","title":"\u6574\u7406","text":""},{"location":"OOP/#_2","title":"\u58f0\u660e &amp; \u5b9a\u4e49","text":"<p>\u58f0\u660e\u4e0d\u5206\u914d\u5185\u5b58\uff0c\u5b9a\u4e49\u5206\u914d\u5185\u5b58</p> <p>\u5982 extern, struct, class \u5185\u90fd\u662f\u58f0\u660e</p>"},{"location":"OOP/#varibles-scope-lifetime","title":"varibles scope &amp; lifetime","text":"scope lifetime storage local {} {} stack global global program global static local {} program (init when called) global member(private) class object object static member class program global malloc passed in-out malloc-free heap"},{"location":"OOP/#tricks","title":"Tricks","text":"<ul> <li> <p>\u7f16\u7a0b\u590d\u6742\u5ea6 \u4e0e \u73b0\u5b9e\u8981\u6c42 \u51b2\u7a81\u65f6\uff0c\u4e00\u822c\u9009\u62e9\u670d\u4ece\u73b0\u5b9e\u8981\u6c42\u6bd4\u8f83\u201c\u987a\u201d</p> </li> <li> <p>\u6ca1\u6709\u6210\u5458\u53d8\u91cf\u7684\u7c7b \u7684 size \u4e3a1\uff0c\u7528\u6765\u533a\u5206\uff0c\u4f46\u662f\u5728\u5176\u5b50\u7c7b\u4e2d\u4e0d\u4f1a\u6709\u8fd9\u4e2a\u533a\u5206\uff0c\u5373\u4e3a0</p> </li> <li> <p>\u51fd\u6570\u4f20\u5165 &amp; \u4f20\u51fa</p> <p></p> </li> </ul>"},{"location":"OOP/#buzzwords","title":"Buzzwords","text":"<ul> <li> <p>Encapsulation: \u5c01\u88c5</p> </li> <li> <p>Inheritance: \u7ee7\u627f</p> </li> <li> <p>Polymorphism: \u591a\u6001</p> </li> <li> <p>Overriding: \u8986\u76d6</p> </li> <li> <p>Interface: \u63a5\u53e3</p> </li> <li> <p>Cohesion: \u5167\u805a, \u4e00\u4e2a\u7c7b\u5185\u7684\u529f\u80fd\u9ad8\u5ea6\u76f8\u5173</p> </li> <li> <p>Coupling: \u8026\u5408\uff0c \u4e0d\u540c\u7c7b\u4e4b\u95f4\u7684\u5173\u8054\u7a0b\u5ea6</p> </li> <li> <p>Collection classes: \u5bb9\u5668</p> </li> <li> <p>Template: \u6a21\u677f</p> </li> <li> <p>Responsibility-driven design: \u8d23\u4efb\u9a71\u52a8\u8bbe\u8ba1</p> </li> <li> <p>Generic: \u6cdb\u578b</p> </li> <li> <p>Field: \u5b57\u6bb5</p> </li> <li> <p>Parameter: \u51fd\u6570\u53c2\u6570</p> </li> </ul>"},{"location":"OOP/#stl","title":"STL","text":"<p>Standard Template Library</p> <ul> <li> <p>\u5de5\u7a0b\u4e2d\u614e\u7528\\&lt;bits/stdc++.h&gt;\u5934\u6587\u4ef6\uff0c\u964d\u4f4e\u7f16\u8bd1\u538b\u529b</p> </li> <li> <p>Containers</p> <ul> <li> <p>vector</p> <ul> <li> <p>\u5185\u90e8\u5b9e\u73b0\uff1a</p> <ul> <li> <p>\u52a8\u6001\u5185\u5b58\u5206\u914d\uff0c\u5f53\u5bb9\u91cf\u4e0d\u8db3\u65f6\uff0c\u4f1a\u5c06\u5bb9\u91cf\u6269\u5927\u4e3a\u539f\u6765\u7684\u4e24\u500d\uff0c\u7136\u540e\u5c06\u539f\u6765\u7684\u5143\u7d20\u590d\u5236\u5230\u65b0\u7684\u5185\u5b58\u7a7a\u95f4\u4e2d\uff0c\u91ca\u653e\u539f\u6765\u7684\u5185\u5b58\u7a7a\u95f4\u3002</p> </li> <li> <p>\u63d2\u5165\u5747\u644a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(1)</p> </li> <li> <p>\u5220\u9664\u5143\u7d20\u65f6\uff0c\u4f1a\u5c06\u540e\u9762\u7684\u5143\u7d20\u5411\u524d\u79fb\u52a8\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n) </p> </li> </ul> </li> <li> <p>vector\\&lt;int&gt;p(capacity,(k)) (capacity \u4e2a k) </p> </li> <li> <p>vector [] \u201c\u53ef\u4ee5\u201d\u8d8a\u754c\u8bbf\u95ee\uff0c\uff08\u56e0\u4e3a\u5b9e\u9645\u4e0a\u7684\u5bb9\u91cf\u53ef\u80fd\u5927\u4e8e\u5b83\u663e\u793a\u7684capacity\uff09\uff0c.at() \u4f1a\u629b\u51fa\u5f02\u5e38</p> <p>\uff08\u4e71\u7a7f\u9a6c\u8def\u8fdd\u6cd5\uff0c\u4f46\u662f\u4e00\u822c\u6ca1\u4eba\u4f1a\u6765\u7ba1\u4f60\u3002\u6ca1\u649e\u6b7b\u7b97\u5e78\u8fd0\uff0c\u649e\u6b7b\u6d3b\u8be5\u3002\uff09 </p> </li> </ul> </li> <li> <p>deque (double ended queue) </p> <ul> <li> <p>\u5185\u90e8\u5b9e\u73b0\uff1a </p> <ul> <li> <p>\u4f7f\u7528\u7f13\u5b58\u533a\u5757\u5b58\u53d6\u5143\u7d20\uff0c\u4f7f\u7528 map \u5efa\u7acb\u7f13\u5b58\u533a\u5757\u7684\u7d22\u5f15\uff0c\u5f53\u7f13\u5b58\u533a\u5757\u4e0d\u8db3\u65f6\uff0c\u4f1a\u91cd\u65b0\u5206\u914d\u5185\u5b58\u7a7a\u95f4\u3002</p> </li> <li> <p>\u4e24\u7aef\u63d2\u5165\u548c\u5220\u9664\u5747\u644a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(1)\uff0c\u4f46\u5b9e\u73b0\u4e0a\u6bd4 vector \u590d\u6742</p> </li> <li> <p>\u7f13\u5b58\u533a\u5185\u90e8\u5b9e\u73b0\u4e0e vector \u7c7b\u4f3c </p> </li> </ul> </li> </ul> </li> <li> <p>list  (doubly linked list)</p> <ul> <li> <p><code>list.begin() != list.end()</code> (\u4e0d\u63a8\u8350\u4f7f\u7528 &lt; \uff0c\u53ef\u80fd\u4f1a\u51fa\u9519)</p> </li> <li> <p><code>copy(L, R, vector&lt;&gt;it)</code> \u94fe\u8868\u5c55\u5e73\u4e3a vector </p> </li> </ul> </li> <li> <p>forward_list</p> </li> <li> <p>*string  </p> </li> <li> <p>set</p> </li> <li> <p>map    </p> </li> </ul> </li> <li> <p>Algorithms</p> </li> <li> <p>Iterators</p> <ul> <li> <p>\u8f93\u5165\u8fed\u4ee3\u5668\uff1a\u53ea\u80fd\u8bfb\u53d6\u6570\u636e\uff0c\u4e0d\u80fd\u4fee\u6539\u6570\u636e</p> </li> <li> <p>\u8f93\u51fa\u8fed\u4ee3\u5668 </p> </li> <li> <p>\u524d\u5411\u8fed\u4ee3\u5668</p> </li> <li> <p>\u53cc\u5411\u8fed\u4ee3\u5668</p> </li> <li> <p>\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668   </p> </li> </ul> </li> </ul>"},{"location":"OOP/#container","title":"Container","text":"<p>\u5bb9\u5668\uff0ccollection of objects that can store an arbitrary number of other objects.</p> <ul> <li>\u901a\u5e38\u7528 size \u6765\u8868\u793a\u5176\u4e2d object \u7684\u6570\u91cf </li> </ul>"},{"location":"OOP/#class","title":"Class","text":"<p>\u7c7b\uff0c\u4e00\u79cd\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u7c7b\u578b\uff0c\u7528\u4e8e\u5c01\u88c5\u6570\u636e\u548c\u65b9\u6cd5</p> <p>\u5173\u4e8e\u5185\u90e8\u6570\u636e\u5b58\u50a8\uff0c\u5177\u6709\u5730\u5740\u5bf9\u9f50\u6027\uff0c\u5373\u4e00\u4e2a\u77ed\u53d8\u91cf\u53ea\u4f1a\u5728\u4e00\u884c\u5185\u8bfb\u51fa\uff0c\u4e0d\u4f1a\u8de8\u884c\u8bfb\u53d6</p>"},{"location":"OOP/#_3","title":"\u6784\u9020","text":"<ul> <li> <p>\u5168\u5c40\u53d8\u91cf\u6784\u9020\u5728main\u51fd\u6570\u4e4b\u5916\uff0cmain\u51fd\u6570\u4e4b\u524d\u6784\u9020\uff0cmain\u51fd\u6570\u4e4b\u540e\u6790\u6784\uff0c\u6309\u4e66\u5199\u987a\u5e8f\u6784\u9020\uff0c\u53cd\u5e8f\u6790\u6784</p> </li> <li> <p>\u7c7b\u5185\u6784\u9020</p> <ol> <li> <p>\u8c03\u7528\u7236\u7c7b\u6784\u9020\u51fd\u6570</p> </li> <li> <p>\u6309\u987a\u5e8f\u8c03\u7528\u6210\u5458\u6784\u9020\u51fd\u6570\uff08\u68c0\u67e5\u8c03\u7528\u7684\u6784\u9020\u51fd\u6570\u7684\u521d\u59cb\u5316\u5217\u8868\u5185\u662f\u5426\u6709\u76f8\u5e94\u4ee3\u7406\u6784\u9020\uff0c\u82e5\u6ca1\u6709\u5219\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\uff09</p> </li> <li> <p>\u8c03\u7528\u81ea\u8eab\u6784\u9020\u51fd\u6570   </p> </li> </ol> </li> <li> <p>\u521d\u59cb\u5316\u53d8\u91cf\u65f6 <code>= x, (x)</code> \u90fd\u4f1a\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c\u6ca1\u6709\u533a\u522b</p> </li> <li> <p>\u4f46\u662f\u5168\u5c40\u53d8\u91cf\u5904\u5728\u591a\u6587\u4ef6\u65f6\uff0c\u6784\u9020\u987a\u5e8f\u662f\u4e0d\u786e\u5b9a\u7684 </p> </li> <li> <p>\u8fdb\u5165\u51fd\u6570\u65f6\uff0c\u6240\u6709\u672c\u5730\u53d8\u91cf\u6240\u5360\u636e\u7a7a\u95f4\u5df2\u7ecf\u5206\u914d\u5b8c\u6bd5\uff0c\u5e76\u4e14\u5b9e\u53c2\u91cf\u4f1a\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff08const Tp &amp;x\uff09\u6765\u4f20\u503c</p> </li> <li> <p>\u6784\u9020\u5217\u8868\u53ea\u80fd\u521d\u59cb\u5316 non-static \u7684\u6210\u5458\uff0c\u5305\u62ec\u53ef\u4ee5\u521d\u59cb\u5316const\u5e38\u91cf </p> </li> <li> <p>Delegating Constructor</p> <ul> <li> <p>\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u8c03\u7528\u53e6\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u51cf\u5c11\u4ee3\u7801\u91cd\u590d</p> </li> <li> <p><code>A(int x, int y): A(x) {}</code></p> </li> </ul> </li> </ul>"},{"location":"OOP/#_4","title":"\u6790\u6784","text":"<ul> <li> <p>\u7f16\u8bd1\u5668\u63a7\u5236\uff0c\u5f53\u53d8\u91cf\u7ed3\u675f\u751f\u547d\u5468\u671f\u65f6\u81ea\u52a8\u8c03\u7528</p> </li> <li> <p>\u540c\u7b49\u6761\u4ef6\u4e0b\uff0c\u6790\u6784\u51fd\u6570\u7684\u8c03\u7528\u987a\u5e8f\u4e0e\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528\u987a\u5e8f\u76f8\u53cd\uff08\u6808\u4e00\u6837\uff0c\u907f\u514d\u4f9d\u8d56\u5173\u7cfb\u5f71\u54cd\uff09 </p> </li> </ul>"},{"location":"OOP/#_5","title":"\u6743\u9650","text":"<ul> <li> <p>private</p> <ul> <li> <p>\u4ec5\u5728\u7c7b\u5185\u90e8\u53ef\u89c1</p> </li> <li> <p>\u8fb9\u754c\u662f\u7c7b, \u4e0d\u662f\u5bf9\u8c61\uff08\u7c7b\u5185\u53ef\u4ee5\u8bbf\u95ee\u5176\u4ed6\u540c\u7c7b\u5bf9\u8c61\u7684\u79c1\u6709\u6210\u5458\uff09\uff0c\u5e76\u4e14\u7531\u7f16\u8bd1\u5668\u63a7\u5236\uff08\u53ef\u4ee5\u7ed5\u8fc7\uff0c\u5982\u5229\u7528\u6307\u9488\u4e3a\u6240\u6b32\u4e3a\uff09 </p> </li> </ul> </li> <li> <p>public</p> <ul> <li>\u90fd\u53ef\u4ee5\u8bbf\u95ee\uff0c\u4e0e structure \u7c7b\u4f3c </li> </ul> </li> <li> <p>protected</p> <ul> <li>\u4e0eprivate\u7684\u533a\u522b\u662f\u5b50\u7c7b\u53ef\u89c1\uff08\u7559\u7ed9\u5b50\u7c7b\u7684\u9057\u4ea7\uff09 </li> </ul> </li> <li> <p>default</p> <ul> <li>class \u9ed8\u8ba4\u662f private \u7684\uff0cstruct \u9ed8\u8ba4\u662f public \u7684 </li> </ul> </li> <li> <p>friend</p> <ul> <li> <p>\u6743\u9650\u6388\u6743\uff0c\u53ef\u4ee5\u8bbf\u95ee\u8be5\u7c7b\u7684\u79c1\u6709\u6210\u5458 \u548c \u4fdd\u62a4\u6210\u5458</p> </li> <li> <p>\u53cb\u5143\u4e0d\u662f\u6210\u5458\u51fd\u6570</p> </li> <li> <p>\u53cb\u5143\u7684\u53cb\u5143\u4e0d\u4e00\u5b9a\u662f\u53cb\u5143\uff0c\u5373\u53cb\u5143\u5173\u7cfb\u4e0d\u53ef\u7ee7\u627f</p> </li> </ul> </li> </ul>"},{"location":"OOP/#overload","title":"overload \u91cd\u8f7d","text":"<ul> <li> <p>\u51fd\u6570\u540d\u76f8\u540c\uff0c\u53c2\u6570\u4e0d\u540c</p> </li> <li> <p>\u4e0d\u80fd\u4f7f\u7528 auto-cast, \u4f1a\u9020\u6210\u4e8c\u4e49\u6027</p> </li> </ul>"},{"location":"OOP/#static","title":"static","text":"<ul> <li> <p>deprecated\uff1a\uff08\u8fc7\u65f6\uff09</p> <p>\u9650\u5236\u5916\u90e8\u8bbf\u95ee</p> <ul> <li> <p>static free function</p> </li> <li> <p>static global variables</p> </li> </ul> </li> <li> <p>static local variables</p> <ul> <li> <p>\u6301\u4e45\u5b58\u50a8\uff0c\u591a\u6b21\u8c03\u7528\u4fdd\u5b58\u4e0a\u6b21\u7684\u503c    </p> </li> <li> <p>\u672c\u8d28\u4e0a\u662f \u8bbf\u95ee\u53d7\u9650\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u5728\u51fd\u6570\u88ab\u7b2c\u4e00\u6b21\u8c03\u7528\u65f6\u6784\u9020\uff0c\u5728\u7a0b\u5e8f\u7ed3\u675f\u65f6\u6790\u6784(\u5982\u679c\u88ab\u6784\u9020\u4e86) </p> </li> </ul> </li> <li> <p>static member variables</p> <ul> <li> <p>\u6240\u6709\u5bf9\u8c61\u5171\u4eab\uff0c\u4e0d\u5c5e\u4e8e\u5bf9\u8c61\uff0c\u5c5e\u4e8e\u7c7b</p> </li> <li> <p>\u4e0d\u80fd\u5728\u7c7b\u5185\u521d\u59cb\u5316\uff0c\u9700\u8981\u5728\u7c7b\u5916\u521d\u59cb\u5316</p> <p>static variable \u9700\u8981\u5168\u5c40\u5b9a\u4e49\u7533\u8bf7\u5185\u5b58\u7a7a\u95f4\uff08\u5305\u62ecprivate / public\uff09 </p> <p><code>Tp ClassName::StaticVariable = x;</code></p> </li> <li> <p>\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u8bbf\u95ee\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u8bbf\u95ee</p> </li> <li> <p>static member function \u53ea\u80fd\u8bbf\u95ee static member variables  </p> </li> </ul> </li> </ul>"},{"location":"OOP/#reference","title":"Reference","text":"<p><code>Tp &amp;x = v</code></p> <p>\u672c\u8d28\u4e0a\u76f8\u5f53\u4e8e\u7ed9\u53d8\u91cf\u8d77\u4e86\u4e00\u4e2a\u522b\u540d\uff0c\u65b9\u4fbf\u53d8\u91cf\u7684\u5f15\u7528\uff0c\u4e0d\u4f1a\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff08\u5426\u5219\u5bf9\u4e8e\u4e00\u4e2a\u5bf9\u8c61\u7684\u62f7\u8d1d\u53ef\u80fd\u5f00\u9500\u8fc7\u5927\uff09</p> <p>\u5b9e\u8d28\u4e0a\u5c31\u662f\u4f7f\u7528\u6307\u9488\u5b9e\u73b0\u7684</p> <ul> <li> <p>\u5728\u5b9a\u4e49\u65f6\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u5de6\u503c\uff0c\u4e14\u4e0d\u80fd\u6539\u53d8\u6307\u5411 (\u5de6\u503c\u5f15\u7528<code>&amp;</code>)</p> </li> <li> <p>\u5728\u5b9a\u4e49\u65f6\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u53f3\u503c\uff0c\u4e14\u53ef\u4ee5\u6539\u53d8\u6307\u5411\uff0c\u76f8\u5f53\u4e8e\u8bb0\u4e0b\u4e86\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf (\u53f3\u503c\u5f15\u7528<code>&amp;&amp;</code>)</p> </li> </ul> <p>No pointers to references <code>(Tp&amp;) *p</code></p> <p>References to pointers OK <code>(Tp*) &amp;p</code></p> <ul> <li> <p>Left value &amp; Right value</p> <ul> <li> <p>Left value: <code>.</code> <code>[]</code> <code>-&gt;</code> <code>*</code></p> </li> <li> <p>Right value: others  </p> </li> </ul> </li> </ul>"},{"location":"OOP/#const","title":"Const","text":"<p>\u4e0d\u53ef\u8d4b\u503c\uff08\u53ef\u4ee5\u5728\u521b\u5efa\u65f6\u521d\u59cb\u5316\u4e00\u6b21\uff09</p> <ul> <li> <p>const &amp; pointer</p> <p>\u89c2\u5bdf<code>*</code>\u4f4d\u7f6e</p> <ul> <li> <p>const \u5728 <code>*</code> \u524d\uff0c\u8bf4\u660e\u6307\u5411\u7684\u5185\u5bb9\u4e0d\u53ef\u4fee\u6539</p> </li> <li> <p>const \u5728 <code>*</code> \u540e\uff0c\u8bf4\u660e\u8be5\u6307\u9488\u4e0d\u53ef\u4fee\u6539 </p> </li> </ul> </li> <li> <p>\u58f0\u660e const function</p> <ul> <li> <p><code>const</code> \u4fee\u9970\u51fd\u6570\uff0c\u8868\u793a\u8be5\u51fd\u6570\u4e0d\u4f1a\u4fee\u6539\u6210\u5458\u53d8\u91cf  (const *this)</p> </li> <li> <p>\u56e0\u6b64\uff0cconst object \u53ea\u80fd\u8c03\u7528 const function, \u4f7f\u7f16\u8bd1\u5668\u80fd\u591f\u68c0\u67e5\u9519\u8bef</p> </li> <li> <p>\u5efa\u8bae\u80fd\u52a0 const \u7684\u51fd\u6570\u90fd\u52a0\u4e0a\uff0c\u6bd4\u5982const\u5bf9\u8c61\u9ed8\u8ba4\u53ea\u80fd\u8c03\u7528const/static\u51fd\u6570</p> </li> </ul> </li> <li> <p>\u5173\u4e8e\u5b9a\u4e49\u6570\u7ec4 [const size]\uff1a</p> <ul> <li> <p>\u672c\u5730\u53d8\u91cf\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u56e0\u4e3a\u5728\u51fd\u6570\u5185\u53ef\u4ee5\u81ea\u7531\u5206\u914d\u6808\u7a7a\u95f4</p> <pre><code>void f(int n) {\n    int a[n];//OK\n}\n</code></pre> </li> <li> <p>\u5bf9\u8c61\u6210\u5458\u7684\u6570\u7ec4\u5b9a\u4e49\u4e0d\u80fd\u7528size\uff0c\u54ea\u6015\u5df2\u7ecf\u76f4\u63a5\u521d\u59cb\u5316\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u4e0d\u80fd\u786e\u5b9a\uff08const \u5e38\u91cf\u53ef\u80fd\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u88ab\u91cd\u65b0\u521d\u59cb\u5316\uff09</p> <pre><code>class A {\n    const int n = 10;\n    int a[10];  //Error\n    A():n(6){}  // Legal and powerful\n    // Thus \"change\" the n to 6 when the object is constructed\n};\n</code></pre> </li> <li> <p>enum &amp; static \u53ef\u4ee5\u7528\u6765\u5b9a\u4e49\u6570\u7ec4\u5927\u5c0f</p> <pre><code>class A {\n    static const int m = 10;\n    enum {n = 10};\n    int a[n];  //OK\n    int b[m];  //OK\n};\n</code></pre> </li> </ul> </li> </ul>"},{"location":"OOP/#new-delete","title":"new &amp; delete","text":"<p>new \u52a8\u6001\u7533\u8bf7\u7a7a\u95f4\uff0c\u8fd4\u56de\u6307\u9488</p> <p>delete ([]) p \u91ca\u653e\u7a7a\u95f4\uff0c[] \u53d6\u51b3\u4e8e\u5355\u4e00\u5bf9\u8c61\u8fd8\u662f\u6570\u7ec4</p> <p>\u672c\u8d28\u4e0a\u662f\u8fd0\u7b97\u7b26</p> <ul> <li> <p>new\u7684\u5b9e\u8d28 </p> <ul> <li> <p>\u7533\u8bf7\u7684\u7a7a\u95f4\u6ca1\u6709\u9ed8\u8ba4\u521d\u59cb\u503c\uff08\u76f4\u63a5\u7ed9\u5185\u5b58\u4e2d\u7684\u5783\u573e\u503c\uff09\uff0c\u53ef\u4ee5\u7528 <code>{}</code> \u521d\u59cb\u5316</p> </li> <li> <p>\u5bf9\u4e8e\u5bf9\u8c61\uff0c\u9700\u8981\u6709\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u624d\u80fd\u6ee1\u8db3\u9ed8\u8ba4\u6784\u9020 </p> </li> <li> <p>\u524d\u9762\u6709\u4e00\u4e2a\u6807\u8bb0\u5934\uff0c\u8bb0\u5f55\u4e86\u53e3\u4ee4\u548c\u5927\u5c0f\uff0c\u7528\u4e8e delete \u65f6\u68c0\u67e5; \u4e4b\u540e\u662f\u5b9e\u9645\u7533\u8bf7\u7684\u7a7a\u95f4</p> </li> </ul> </li> <li> <p>delete\u7684\u5b9e\u8d28</p> <ul> <li> <p>\u68c0\u67e5\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570\uff0c\u5e76\u8c03\u7528\u6790\u6784\uff08\u5728\u91ca\u653e\u5185\u5b58\u524d\uff09</p> </li> <li> <p>\u5f80\u524d\u8d70\u4e00\u4e2a\u5355\u4f4d\uff0c\u68c0\u67e5\u53e3\u4ee4\u548c\u7a7a\u95f4\u5927\u5c0f\uff0c\u4e0d\u5bf9\u4f1a\u629b\u51fa\u5f02\u5e38</p> </li> <li> <p>\u4e0d\u52a0 [] \u53ea\u4f1a\u91ca\u653e\u7b2c\u4e00\u4e2a\u5bf9\u8c61\u7684\u7a7a\u95f4\uff0c\u800c\u4e0d\u4f1a\u91ca\u653e\u8bb0\u5f55\u7684\u7a7a\u95f4\u5927\u5c0f\uff0c\u540c\u65f6\u7cfb\u7edf\u4e5f\u4f1a\u5931\u53bb\u8fd9\u90e8\u5206\u5185\u5b58\u7684\u4fe1\u606f\uff08\u6700\u540e\u4e0d\u518d\u8c03\u7528\u5269\u4f59\u7684\u6790\u6784\uff09</p> </li> </ul> </li> </ul>"},{"location":"OOP/#default-argument","title":"default argument\uff08\u9ed8\u8ba4\u53c2\u6570\uff09","text":"<ul> <li> <p>\u9ed8\u8ba4\u53c2\u6570\u201c\u4ece\u53f3\u5f80\u5de6\u8fde\u7eed\u5199\u201d</p> </li> <li> <p>\u9ed8\u8ba4\u53c2\u6570\u503c\u662f\u9759\u6001\u7684\uff08\u7f16\u8bd1\u5668\u5904\u7406\uff09\uff0c\u5728\u58f0\u660e\u4e2d\u5199\u9ed8\u8ba4\u503c\uff0c\u4e0d\u80fd\u5728\u5b9a\u4e49\u4e2d\u5199 </p> <ul> <li> <p>\u56e0\u6b64\u672c\u8d28\u4e0a\u662f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5e26\u53c2\u51fd\u6570\uff0c\u5c0f\u5fc3\u91cd\u8f7d\u65f6\u7684\u91cd\u590d\u9519\u8bef</p> </li> <li> <p>\u5934\u6587\u4ef6\u5185\u5b9a\u4e49\u7684\u9ed8\u8ba4\u503c\u53ef\u80fd\u4f1a\u88ab\u7be1\u6539</p> </li> </ul> </li> </ul>"},{"location":"OOP/#inline","title":"inline\uff08\u5185\u8054\uff09","text":"<p>\u672c\u8d28\u4e0a\u76f8\u5f53\u4e8e\u5c06\u51fd\u6570\u4ee3\u7801\u76f4\u63a5\u62f7\u8d1d\u5230\u5f53\u524d\u4ee3\u7801\u5757\u4e2d\uff08\u76f4\u63a5\u6dfb\u52a0\u5230\u5f53\u524d\u6587\u4ef6\u7684.obj\u4e2d\uff0c\u800c\u4e0d\u662f\u540e\u7eed\u901a\u8fc7link\u8fde\u63a5\uff09\uff0c\u907f\u514d\u51fd\u6570\u8c03\u7528\u7684\u5f00\u9500</p> <p>inline \u51fd\u6570\uff08\u5305\u62ecbody\uff09\u76f8\u5f53\u4e8e\u58f0\u660e\uff0c\u4e0d\u662f\u5b9a\u4e49\uff0c\u56e0\u6b64\u8981\u6574\u4e2a\u653e\u5728\u5934\u6587\u4ef6\u4e2d\uff0c\u8ba9\u7f16\u8bd1\u5668\u5904\u7406\u3002\u7f16\u8bd1\u5668\u4e0d\u4f1a\u5206\u914d\u51fd\u6570\u7a7a\u95f4\uff0c\u800c\u662f\u76f4\u63a5\u5c06\u5bf9\u5e94\u6307\u4ee4\u201c\u6284\u4e0b\u6765\u201d\uff0c\u5728\u9700\u8981\u7684\u5730\u65b9\u76f4\u63a5\u586b\u4e0a\u53bb\u3002</p> <ul> <li> <p>\u4f1a\u589e\u957f\u4ee3\u7801\uff0c\u672c\u8d28\u4e0a\u662f\u7528\u201c\u7a7a\u95f4\u6362\u65f6\u95f4\u201d</p> </li> <li> <p>inline \u51fd\u6570\u590d\u6742\u65f6\u53ef\u80fd\u4f1a\u88ab\u7f16\u8bd1\u5668\u653e\u5f03 inline</p> <p>\u4e00\u822c\u662f\u6bd4\u8f83\u77ed\u5c0f\u4e14\u9891\u7e41\u8c03\u7528\u7684\u51fd\u6570</p> <p>~~\u9012\u5f52\u4e0d\u9002\u5408~~</p> </li> <li> <p>class \u6210\u5458\u51fd\u6570\u52a0\u4e0a body \u76f4\u63a5\u9ed8\u8ba4 inline\uff0c\u65e0\u9700\u7279\u6b8a\u6807\u8bb0</p> <p>\u5f53\u957f\u5ea6\u8fc7\u957f\u65f6\uff0c\u53ef\u4ee5\u5728\u5934\u6587\u4ef6\u5185\u7528 inline \u58f0\u660e\uff0c \u7136\u540e\u76f4\u63a5\u5c06\u5b9a\u4e49\u5199\u5728\u4e0b\u65b9\uff08\u90fd\u5728\u5934\u6587\u4ef6\u5185\uff0c\u90fd\u52a0inline\uff09</p> </li> </ul>"},{"location":"OOP/#namespace","title":"namespace","text":"<p>Expresses a logical grouping of classes, functions, variables, etc.</p> <p>{}\u672b\u5c3e\u6ca1\u6709 \u5206\u53f7 \u4f5c\u4e3a\u7ed3\u675f</p> <ul> <li> <p>using \u7b80\u5316</p> <ul> <li> <p><code>using namespace Name;</code></p> <p><code>using Name::Func;</code></p> <p><code>using Name::Class;</code></p> </li> <li> <p>using \u53ef\u80fd\u4f1a\u5bfc\u81f4\u540c\u540d\u6210\u5458\u51b2\u7a81\uff0c\u4f46\u662f\u53ea\u6709\u8c03\u7528\u51b2\u7a81\u6210\u5458\u65f6\u624d\u4f1a\u62a5\u9519\uff0cusing\u5e76\u4e0d\u4f1a\u9a6c\u4e0a\u62a5\u9519\u3002\u4e3a\u4e86\u89e3\u51b3\u51b2\u7a81\u95ee\u9898\uff0c\u53ef\u4ee5\u901a\u8fc7\u663e\u5f0f\u6307\u660e\u547d\u540d\u7a7a\u95f4\u3002</p> </li> </ul> </li> <li> <p>alias \u91cd\u547d\u540d</p> <ul> <li><code>namespace NewName = OldName;</code></li> </ul> </li> <li> <p>openness</p> <ul> <li>\u540c\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u53ef\u4ee5\u5206\u5e03\u5728\u591a\u4e2a\u6587\u4ef6\u4e2d</li> </ul> </li> </ul>"},{"location":"OOP/#composition","title":"Composition","text":""},{"location":"OOP/#embedded-objects","title":"Embedded Objects","text":"<p>A class has other classes</p> <ul> <li> <p>Storage\uff1a\u6309\u7167\u4e66\u5199\u987a\u5e8f\u5728\u5185\u5b58\u4e2d\u5b58\u50a8 </p> </li> <li> <p>Constructor &amp; Deconstructor\uff1a\u540c\u6837\u662f\u987a\u5e8f\u6784\u9020\uff0c\u9006\u5e8f\u6790\u6784</p> </li> <li> <p>Fully v/s By Reference</p> <ul> <li> <p>logical relationship</p> </li> <li> <p>size of is not known</p> </li> <li> <p>resource is to be allocated / connected at run-time</p> </li> <li> <p>Only C++ can use fully </p> </li> </ul> </li> </ul>"},{"location":"OOP/#inheritance","title":"Inheritance","text":"<p>\u7ee7\u627f\u6027\uff0c\u9762\u5411\u5bf9\u8c61\u7684\u91cd\u8981\u601d\u60f3</p> <ul> <li> <p>Advantage</p> <ul> <li> <p>Avoid code duplication</p> </li> <li> <p>Code reuse</p> </li> <li> <p>Easier maintenance: \u4fee\u6539\u6a21\u5757\u5bf9\u5176\u4ed6\u6a21\u5757\u5f71\u54cd\u5c0f</p> </li> <li> <p>Extendibility\uff1a \u6613\u4e8e\u6dfb\u52a0\u65b0\u529f\u80fd</p> </li> </ul> </li> <li> <p>\u53ef\u7ee7\u627f\u7684\u6210\u5458</p> <p>\u672c\u8d28\u4e0a\u5185\u5b58\u91cc\u7236\u7c7b\u5bf9\u8c61\u4f1a\u653e\u5728\u5b50\u7c7b\u5bf9\u8c61\u7684\u524d\u9762\uff08\u53ef\u4ee5\u5c06\u5b50\u7c7b\u6307\u9488\u8d4b\u7ed9\u7236\u7c7b\u6307\u9488\uff09</p> <ul> <li> <p>public / protected member data</p> </li> <li> <p>public / protected member functions</p> </li> <li> <p>static \u4ecd\u7136\u4e3aclass-wide\uff0c\u4f9d\u8d56\u5b83\u7684\u5c5e\u6027 </p> </li> </ul> </li> <li> <p>Constructor &amp; Deconstructor</p> <ul> <li> <p>\u6784\u9020\u5148\u7236\u7c7b\u540e\u5b50\u7c7b</p> </li> <li> <p>\u6790\u6784\u540c\u6837\u53cd\u5411 </p> </li> </ul> </li> <li> <p>Name Hiding</p> <ul> <li> <p>\u4e00\u65e6\u51fa\u73b0overload\uff0c\u5219\u6240\u6709\u540c\u540d\u7684\u51fd\u6570\u90fd\u5f97\u8986\u5199\uff0c\u5426\u5219\u7236\u7c7b\u7684\u4f1a\u88ab\u9690\u85cf</p> </li> <li> <p>\u53ef\u4ee5\u4f7f\u7528 <code>using base::f;</code> \u628a\u5b83\u627e\u51fa\u6765</p> </li> </ul> </li> <li> <p>Inheritance Access Protection</p> <ul> <li> <p>public / protected / private: \u5b9a\u4e49\u7ee7\u627f\u7684\u7236\u7c7b\u6210\u5458\u7684\u8bbf\u95ee\u6743\u9650</p> </li> <li> <p>private: default(\u5e76\u4e0d\u662fOOP\u8bed\u610f)</p> </li> </ul> </li> </ul>"},{"location":"OOP/#polymorphism","title":"Polymorphism","text":"<p>\u591a\u6001\u6027\uff0c\u9759\u6001\u58f0\u660e &amp; \u52a8\u6001\u7c7b\u578b</p> <ul> <li> <p>Subtyping</p> <p>\u5b50\u7c7b\u5bf9\u8c61\u53ef\u4ee5\u8d4b\u7ed9\u7236\u7c7b\u5bf9\u8c61, \u6240\u6709\u7236\u7c7b\u5177\u6709\u7684\u6d3e\u751f\u7c7b\u90fd\u6709</p> <p> </p> </li> <li> <p>Up-casting</p> <p>\u5411\u4e0a\u9020\u578b\uff0c\u5b50\u7c7b\u5bf9\u8c61\u8d4b\u7ed9\u7236\u7c7b\u5bf9\u8c61\uff08\u6307\u9488 / \u5f15\u7528\uff09\uff0c\u4e0d\u4f1a\u4e22\u5931\u5b50\u7c7b\u7684\u4fe1\u606f</p> <p>\u4f46\u662f\u53ea\u80fd\u8c03\u7528\u7236\u7c7b\u7684\u6210\u5458\uff0c\u4e0d\u80fd\u8c03\u7528\u5b50\u7c7b\u7684\u6210\u5458</p> <p>virtual</p> <ul> <li> <p>\u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3\uff0c\u8ba9\u7f16\u8bd1\u5668\u77e5\u9053\u8be5\u51fd\u6570\u5c06\u4f1a\u88ab\u5b50\u7c7b\u8986\u5199\uff0c\u4ece\u800c\u53ef\u4ee5\u5728Up-casting\u65f6\u7528\u7236\u7c7b\u6307\u9488/\u5f15\u7528\u8c03\u7528\u5b50\u7c7b\u51fd\u6570</p> </li> <li> <p>\u672c\u8d28\u4e0a\u662f\u52a8\u6001\u53d8\u91cf\u7684\u7ed1\u5b9a\uff08dynamic binding\uff09\uff0c\u5373\u5728\u8fd0\u884c\u65f6\u6839\u636edynamic type\u624d\u786e\u5b9a\u8c03\u7528\u7684\u51fd\u6570\uff0c\u800c\u975e\u7f16\u8bd1\u65f6\u7684\u9759\u6001\u7ed1\u5b9a\u3002\u56e0\u6b64\u901f\u5ea6\u4f1a\u76f8\u5bf9\u6162\u4e00\u70b9\uff0c\u9664\u975e\u7f16\u8bd1\u5668\u53d1\u73b0\u662f\u9759\u6001\u7ed1\u5b9a\uff0c\u4f1a\u81ea\u52a8\u8f6c\u4e3a\u9759\u6001\u7ed1\u5b9a\u3002</p> </li> <li> <p>\u7f16\u8bd1\u5668\u6267\u884c\u9759\u6001\u68c0\u67e5\uff0c\u56e0\u6b64\u7236\u7c7b\u5185\u7684\u63a5\u53e3\u4e0d\u53ef\u7701\u7565\uff08\u53ea\u8981\u7236\u7c7b\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570\uff0c\u5b50\u7c7b\u4e2d\u8be5\u51fd\u6570\u5c31\u81ea\u52a8\u6210\u4e3a\u865a\u51fd\u6570\uff09</p> </li> <li> <p>\u5185\u5b58\u5b58\u50a8\uff1a</p> <p>\u5934\u90e8\u6709\u4e00\u4e2avptr\u6307\u9488\uff0c\u4e14\u4e3a\u6784\u9020\u65f6\u5b58\u5165</p> <ul> <li> <p>vptr\uff1a\u865a\u51fd\u6570\u8868\u6307\u9488\uff0c\u6307\u5411\u865a\u51fd\u6570\u8868\uff0c\u5b58\u50a8\u865a\u51fd\u6570\u7684\u5730\u5740</p> </li> <li> <p>vtable\uff1a\u865a\u51fd\u6570\u8868\uff0c\u5b58\u50a8\u865a\u51fd\u6570\u7684\u5730\u5740</p> </li> <li> <p>vfunc\uff1a\u865a\u51fd\u6570\uff0c\u5b58\u50a8\u51fd\u6570\u7684\u5730\u5740  </p> </li> </ul> </li> <li> <p>\u7eaf\u865a\u51fd\u6570\uff1a</p> <ul> <li> <p><code>virtual Type F() = 0</code></p> </li> <li> <p>\u6574\u4e2a\u7c7b\u6210\u4e3a\u62bd\u8c61\u7c7b\uff0c\u4e0d\u80fd\u5b9a\u4e49\u5bf9\u8c61</p> </li> </ul> </li> </ul> </li> <li> <p>\u591a\u7ee7\u627f</p> <ul> <li>virtual inheritance \u5904\u7406\u83f1\u5f62\u7ee7\u627f\u5173\u7cfb\uff0c\u4e0d\u5c06\u7236\u7c7b\u653e\u5230\u5b50\u7c7b\u4e2d\uff0c\u800c\u5229\u7528\u6307\u9488\u7d22\u5f15</li> </ul> </li> </ul>"},{"location":"OOP/#copy-move","title":"Copy &amp; Move","text":"<ul> <li> <p>copy constructor</p> <p><code>T::T (const T&amp;)</code></p> <p>\u590d\u5236\u4e00\u4efd</p> <ul> <li> <p>\u51fd\u6570\u8c03\u7528\u7684\u8d4b\u503c</p> <ul> <li> <p>\u7528\u51fd\u6570\u672c\u5730\u53d8\u91cf\u8fd4\u56de\u8d4b\u503c\u53ea\u4f1a\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u4e00\u6b21</p> </li> <li> <p>\u76f4\u63a5\u8fd4\u56de\u6784\u9020\u4e0d\u9700\u8981\u8c03\u7528\u62f7\u8d1d\u6784\u9020\uff08\u5c06\u76f8\u5e94\u5185\u5b58\u76f4\u63a5\u653e\u5728\u51fd\u6570\u4f53\u4e0a\u65b9\uff09</p> </li> </ul> <p></p> </li> <li> <p>member-wise copy: \u62f7\u8d1d\u6307\u9488\u5c0f\u5fc3\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u5f71\u54cd\u6e90\u5bf9\u8c61</p> </li> </ul> </li> <li> <p>move constructor</p> <p><code>T::T (const T&amp;&amp;)</code></p> <p>\u4f20\u9012\u6307\u9488\uff0c\u9500\u6bc1\u539f\u5bf9\u8c61</p> <ul> <li>\u4f7f\u7528 <code>std::move()</code> \u8f6c\u4e3a\u53f3\u503c</li> </ul> </li> </ul>"},{"location":"OOP/#overloading-operator","title":"Overloading Operator","text":"<ul> <li> <p>Can</p> <p></p> </li> <li> <p>Can't</p> <p></p> </li> <li> <p>Don't</p> <p><code>&amp;&amp;</code> <code>||</code> <code>,</code></p> </li> </ul>"},{"location":"OOP/#prototypes","title":"ProtoTypes","text":"<ul> <li> <p>Tips</p> <p></p> </li> <li> <p>Member operator</p> <p>\u6ce8\u610f\uff0c\u8c03\u7528\u65f6\u5de6\u8fb9\u5e94\u8be5\u4e3a\u5bf9\u8c61\uff08\u5de6\u7ed3\u5408\uff09</p> <ul> <li> <p>binary</p> <ul> <li><code>T operator+(const T &amp;x)</code></li> </ul> </li> <li> <p>unary</p> <ul> <li><code>T operator-()</code></li> </ul> </li> </ul> </li> <li> <p>Global operator</p> <p>\u4e3a\u4e86\u8bbf\u95ee\u79c1\u6709\u53d8\u91cf\uff0c\u53ef\u4ee5\u4f7f\u7528 public / friend</p> <ul> <li> <p>binary</p> <ul> <li><code>T operator+(const T &amp;x, const T &amp;y)</code></li> </ul> </li> <li> <p>unary</p> <ul> <li><code>T operator-(const T &amp;x)</code></li> </ul> </li> </ul> </li> <li> <p>Some</p> <p></p> <p></p> <p>(Relational, just need define <code>==</code> &amp; <code>&lt;</code>)</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> </li> </ul>"},{"location":"OOP/#argument-passing","title":"Argument passing","text":"<ul> <li> <p>read-only argument: <code>const T &amp;x</code></p> </li> <li> <p>const member function(not change <code>this</code>): <code>const T</code></p> </li> <li> <p>const result(can't be L-value): <code>const T</code></p> </li> <li> <p>always use reference</p> </li> </ul>"},{"location":"OOP/#type-conversion","title":"Type conversion","text":"<p><code>explicit</code> to avoid <code>implicit conversion</code></p> <p></p> <p></p>"},{"location":"OOP/#template","title":"Template","text":"<p>generic programming\uff08\u6cdb\u578b\u7f16\u7a0b\uff09</p> <ul> <li> <p>Function Template</p> <p>\u672c\u8d28\u4e0a\u4e5f\u662f\u58f0\u660e\uff0c\u7531\u7f16\u8bd1\u5668\u53d1\u73b0\u76f8\u5173\u8c03\u7528\u540e\u521b\u5efa\uff0c\u56e0\u6b64\u9700\u8981\u5728\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49</p> <pre><code>template &lt;class / typename T&gt;\nT func(T x, T y) {\n    return x + y;\n}\n//\u5f3a\u5236\u7c7b\u578b\u8c03\u7528\nfunc&lt;T&gt;();\n</code></pre> <p>Danger</p> <p>\u6a21\u677f\u51fd\u6570\u5fc5\u987b\u4fdd\u8bc1\u8c03\u7528\u7684\u53c2\u6570\u7c7b\u578b\u5b8c\u5168\u4e00\u81f4\uff0c\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u65e0\u6548\uff01</p> \u51fd\u6570\u8c03\u7528\u987a\u5e8f <ol> <li> <p>\u7cbe\u786e\u7c7b\u578b</p> </li> <li> <p>\u7cbe\u786e\u6a21\u677f</p> </li> <li> <p>overloading  </p> </li> </ol> </li> <li> <p>Class Template</p> <pre><code>template &lt;class T&gt;\nclass A {\n    T x;\n    T f(T x);\n};\ntemplate &lt;class T&gt;\nT A&lt;T&gt;::f(T x) {\n    return x;\n}\n\n// \u8c03\u7528\nA&lt;type&gt; a;\n</code></pre> </li> <li> <p>\u62d3\u5c55\u7528\u6cd5</p> <ul> <li> <p>\u591a\u4e2a\u6a21\u677f\u53c2\u6570</p> <pre><code>template &lt;class T, class U ...&gt;\n</code></pre> </li> <li> <p>\u5d4c\u5957\u6a21\u677f</p> <pre><code>template &lt;Class&lt;T&gt; &gt;    //\u73b0\u4ee3\u7f16\u8bd1\u5668\u65e0\u6240\u8c13\u90a3\u4e2a\u7a7a\u683c\u4e86\n\ntemplate &lt;int (*)(Class&lt;T&gt; ) &gt; //\u51fd\u6570\u6307\u9488\n</code></pre> </li> <li> <p>\u9ed8\u8ba4\u53c2\u6570</p> <pre><code>template &lt;class T, int para = default&gt;  // \u5185\u90e8\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5b57\u9762\u91cf\n</code></pre> </li> <li> <p>\u7ee7\u627f\u6a21\u677f</p> <pre><code>template &lt;class T&gt;\nclass B : public A&lt;T&gt; {\n    ...\n}\n</code></pre> </li> <li> <p>friend</p> <pre><code>template &lt;class T&gt;\nclass A {\n    friend T;\n}\n</code></pre> </li> <li> <p>static member</p> <p>\u76f8\u5f53\u4e8e\u6bcf\u79cd\u7c7b\u578b\u90fd\u6709\u4e00\u4e2a\u72ec\u7acb\u7684 static member</p> <pre><code>template &lt;class T&gt;\nclass A {\n    static int x;\n}\ntemplate &lt;class T&gt;\nint A&lt;T&gt;::x = 0;\n</code></pre> </li> </ul> </li> </ul>"},{"location":"RiscV/","title":"\u8ba1\u7b97\u673a\u7ec4\u6210","text":"<p>\u8d85\u8be6\u7ec6\u524d\u8f88\u7b14\u8bb0</p> <p>\u56e0\u6b64\u6211\u53ea\u8bb0\u5f55\u4e86\u4e00\u4e0b\u81ea\u5df1\u9047\u5230\u7684\u91cd\u96be\u70b9\uff0c\u4ee5\u53ca\u81ea\u5df1\u7684\u4e00\u4e9b\u5176\u4ed6\u601d\u8003</p>"},{"location":"RiscV/#chapter-1","title":"Chapter 1","text":""},{"location":"RiscV/#eight-great-ideas-in-computer-architecture","title":"Eight Great Ideas in Computer Architecture","text":"<ul> <li> <p>Design for Moore's Law</p> <p>Moore's Law: The number of transistors on a chip will double about every 18 - 24 months. </p> <ul> <li>\u4e3a\u4e86\u8ffd\u6c42\u66f4\u9ad8\u7684\u6027\u80fd\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u6676\u4f53\u7ba1\u7684\u6570\u91cf\u6765\u63d0\u9ad8\u8ba1\u7b97\u673a\u7684\u6027\u80fd\u3002\u4f46\u662f\uff0c\u968f\u7740\u6676\u4f53\u7ba1\u6570\u91cf\u7684\u589e\u52a0\uff0c\u8ba1\u7b97\u673a\u7684\u529f\u8017\u548c\u6563\u70ed\u95ee\u9898\u4e5f\u4f1a\u53d8\u5f97\u8d8a\u6765\u8d8a\u4e25\u91cd\uff0c\u9047\u5230\u529f\u8017\u5899\u7b49\u95ee\u9898\u3002</li> </ul> </li> <li> <p>Use Abstraction to Simplify Design</p> <ul> <li>\u8ba1\u7b97\u673a\u7684\u591a\u5c42\u6b21\u62bd\u8c61\u7ed3\u6784\uff1a\u6570\u5b57\u903b\u8f91\u3001\u6307\u4ee4\u96c6\u67b6\u6784\u3001\u64cd\u4f5c\u7cfb\u7edf\u3001\u7f16\u7a0b\u8bed\u8a00\u3001\u5e94\u7528\u7a0b\u5e8f\u7b49\u3002</li> </ul> </li> <li> <p>Make the Common Case Fast</p> <ul> <li>\u901a\u8fc7\u4f18\u5316\u8fd0\u884c\u6700\u591a\u7684\u64cd\u4f5c\u6765\u63d0\u9ad8\u8ba1\u7b97\u673a\u7684\u6027\u80fd\u3002</li> </ul> </li> <li> <p>Performance via Parallelism</p> <ul> <li>\u5e76\u884c\u52a0\u901f</li> </ul> </li> <li> <p>Performance via Pipelining</p> <ul> <li>\u6d41\u6c34\u7ebf\u52a0\u901f</li> </ul> </li> <li> <p>Performance via Prediction</p> <ul> <li>\u901a\u8fc7\u9884\u6d4b\u64cd\u4f5c\u63d0\u9ad8\u6027\u80fd\uff0c\u5982\u5206\u652f\u9884\u6d4b\uff0c\u7f13\u5b58\u9884\u8bfb\u7b49</li> </ul> </li> <li> <p>Hierarchy of Memories</p> <ul> <li> <p>\u8ba1\u7b97\u673a\u7684\u5b58\u50a8\u5668\u5c42\u6b21\u7ed3\u6784\uff0c\u5982\u4e0b\uff1a</p> <p> </p> </li> </ul> </li> <li> <p>Dependability via Redundancy</p> <ul> <li>\u5229\u7528\u5197\u4f59\u63d0\u9ad8\u7cfb\u7edf\u53ef\u9760\u6027\uff0c\u5373\u591a\u4fdd\u9669\uff0c\u5982\u5907\u4efd\u7b49</li> </ul> </li> </ul>"},{"location":"RiscV/#performance","title":"Performance","text":"<p>\u4e3b\u8981\u8981\u77e5\u9053\u4e13\u6709\u540d\u8bcd\u7684\u5b9a\u4e49\uff0c\u8ba1\u7b97\u65b9\u6cd5\u76f8\u5bf9\u8fd8\u662f\u7b80\u5355\u7684</p> <ul> <li> <p>Performance = 1 / Execution Time</p> </li> <li> <p>Execution Time = Clock Cycles * Clock Cycle Time</p> </li> <li> <p>CPI (Cycles Per Instruction) = Clock Cycles / Instructions</p> </li> <li> <p>MIPS (Million Instructions Per Second) = Frequency / CPI / \\(10^6\\)</p> </li> </ul>"},{"location":"RiscV/#chapter-2","title":"Chapter 2","text":""},{"location":"RiscV/#risc-v","title":"Risc-V \u7684\u6307\u4ee4\u96c6\u67b6\u6784","text":"<ul> <li> <p>\u4ee5\u5b57\u8282\uff081 byte = 8 bit\uff09\u4e3a\u6700\u5c0f\u5bfb\u5740\u5355\u4f4d</p> </li> <li> <p>Little-Endian \u5c0f\u7aef\u5b58\u50a8</p> </li> <li> <p>words align \u5bf9\u9f50\u4e0d\u9700\u8981\uff08\u867d\u7136\u4f1a\u5f71\u54cd\u6548\u7387\uff09</p> </li> <li> <p>\u6307\u4ee4\uff08\u7a0b\u5e8f\uff09\u88ab\u5f53\u4f5c\u6570\u636e\u5b58\u50a8\u5728\u5185\u5b58\u4e2d</p> </li> <li> <p>\u5bfb\u5740\u65b9\u5f0f</p> <p></p> </li> </ul>"},{"location":"RiscV/#_2","title":"\u6307\u4ee4\u6c47\u603b","text":"<ul> <li> <p>\u6307\u4ee4\u683c\u5f0f</p> <p></p> </li> <li> <p>\u6307\u4ee4\u96c6</p> <p></p> </li> <li> <p>\u5bc4\u5b58\u5668\u4f7f\u7528</p> <p>Fast locations for Data</p> <p></p> </li> </ul>"},{"location":"RiscV/#_3","title":"\u4e00\u4e9b\u5e94\u7528","text":"<ul> <li> <p>RISC-V \u7684\u8df3\u8f6c\u6307\u4ee4</p> <ul> <li> <p>offset \u662f\u57fa\u4e8e\u5f53\u524d\u6307\u4ee4\u7684\u5730\u5740\u7684\u504f\u79fb\uff0c\u8fd9\u4e0d\u540c\u4e8e\u5176\u4ed6\u4e00\u4e9b\u6c47\u7f16\u662f\u57fa\u4e8e\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u504f\u79fb\u7684\u3002\u5373\u5982\u679c\u662f\u8df3\u8f6c\u8bed\u53e5 PC \u5c31\u4e0d +4 \u4e86\uff0c\u800c\u662f\u76f4\u63a5 +offset</p> </li> <li> <p>branch/jal\u6307\u4ee4\u7684\u8df3\u8f6c\u4e3a\u81ea\u52a8\u52a0\u4e0a imm * 2\uff0c\u56e0\u6b64\u624b\u5199\u53c2\u6570\u65f6\u53ef\u4ee5\u89c6\u4e3a\u4ee54\u4e3a\u57fa\u6570 </p> </li> </ul> </li> <li> <p>switch case</p> <ul> <li>\u901a\u8fc7\u8bb0\u5f55\u4e00\u4e2a\u8df3\u8f6c\u8868\u5b9e\u73b0\u591a\u4e2a\u5206\u652f\u7684\u8df3\u8f6c</li> </ul> </li> <li> <p>basic block</p> <ul> <li>\u6ca1\u6709\u5206\u652f\u7ed3\u6784\u7684\u4ee3\u7801\u5757\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u4f18\u5316\u624b\u6bb5\u63d0\u9ad8\u6027\u80fd</li> </ul> </li> <li> <p>procedure call</p> <ul> <li> <p>caller: jal ra, procedure (PC + 4 -&gt; ra, PC -&gt; procedure)</p> </li> <li> <p>callee: jalr x0, 0(ra) (ra -&gt; PC)</p> </li> <li> <p>\u4f7f\u7528 sp \u6808\u6307\u9488\u5f00\u8f9f\u6808\u7a7a\u95f4\uff0c\u5c06\u53c2\u6570\u4fdd\u5b58\u5728\u6808\u4e2d\u5e76\u5728\u8c03\u7528\u7ed3\u675f\u540e\u91ca\u653e\u6808\u7a7a\u95f4\uff0c\u6062\u590d\u76f8\u5e94\u7684\u5bc4\u5b58\u5668\u3002</p> <ul> <li> <p>ra \u4fdd\u5b58\u8fd4\u56de\u5730\u5740</p> </li> <li> <p>\u901a\u8fc7 sp + offset / fp\uff08\u8fdb\u5165\u7a0b\u5e8f\u65f6\u7684\u6808\u9876\uff09 + offset \u7684\u65b9\u5f0f\u8bbf\u95ee\u6808\u4e2d\u7684\u6570\u636e</p> </li> <li> <p>a0 - a7 \u7528\u4e8e\u4f20\u9012\u53c2\u6570\uff0c\u8fd4\u56de\u503c\u901a\u8fc7 a0 \u4f20\u9012</p> </li> <li> <p>t0 - t6 \u4e3a\u4e34\u65f6\u53d8\u91cf\uff0c\u53ef\u4ee5\u4e0d\u7528\u7ba1</p> </li> <li> <p>s0 - s11 \u5fc5\u987b\u4fdd\u5b58</p> </li> </ul> </li> <li> <p>leaf procedure(\u6ca1\u6709\u9012\u5f52\u8c03\u7528): exhaustively use temporary registers then must-saved registers</p> </li> <li> <p>atomic operation</p> <ul> <li> <p>\u9501\u5b58\u6307\u4ee4\u5bf9\uff0c\u5982</p> <pre><code>lr.d rd1, (rs) (load reserve)\n\nsc.d rd2, (rs1), rs2 (store conditional)\n</code></pre> <p>\u5728\u8bfb\u53d6\u6570\u636e\u7684\u540c\u65f6\uff0c\u5c06\u6570\u636e\u9501\u5b9a</p> <p>\u5728\u5199\u5165\u6570\u636e\u7684\u65f6\u5019\uff0c\u68c0\u67e5\u6570\u636e\u662f\u5426\u88ab\u4fee\u6539(rd1 = 0)\uff0c\u5982\u679c\u6ca1\u6709\u5219\u5199\u5165</p> <p>\u6700\u7ec8\u7ed3\u679c\u4e3a\uff08rd2 = 0\uff09\u5219\u5199\u5165\u6210\u529f(rd1 = rs, rs1 = rs2)\uff0c\u5426\u5219\u5199\u5165\u5931\u8d25</p> atomic swap<pre><code>again:\n    lr.d x10, (x20)     // load-reserve Mem[x20] to x10(x10 = 0 now)\n    sc.d x11, (x20), x23// store-conditional x23 to Mem[x20]\n    bne x11, x0, again  // if x11 != 0, failed\n    add x23, x0, x10    // swap x23 and Mem[x20]\n</code></pre> </li> </ul> </li> </ul> </li> </ul> <p></p> <ul> <li> <p>Compiler -&gt; Assembly Language</p> </li> <li> <p>Assembler -&gt; Object Module</p> <p></p> <p></p> </li> <li> <p>Linker -&gt; Executable Program</p> <ul> <li> <p>Static Linking</p> <ul> <li>\u5c06\u6240\u6709\u7684\u5e93\u6587\u4ef6\u90fd\u94fe\u63a5\u5230\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u4e2d</li> </ul> </li> <li> <p>Dynamic Linking</p> <ul> <li>\u5728\u8fd0\u884c\u65f6\u518d\u94fe\u63a5\u4f7f\u7528\u5230\u7684\u5e93\u6587\u4ef6\u51fd\u6570</li> </ul> </li> </ul> <p></p> </li> <li> <p>Loader</p> <p></p> </li> </ul>"},{"location":"RiscV/#_4","title":"\u7a0b\u5e8f\u7f16\u8bd1","text":""},{"location":"RiscV/#chapter-3","title":"Chapter 3","text":""},{"location":"RiscV/#_5","title":"\u6570\u7684\u8868\u793a","text":"<ul> <li>\u5728\u5404\u79cd\u8bfe\u7a0b\u5185\u5df2\u7ecf\u51fa\u73b0\u8fc7\u597d\u591a\u6b21\u4e86\uff0c\u6ca1\u4ec0\u4e48\u7279\u522b\u597d\u8bf4\u7684</li> </ul>"},{"location":"RiscV/#_6","title":"\u8fd0\u7b97","text":"<ul> <li> <p>\u5173\u4e8e overflow \uff08\u540c\u53f7\u76f8\u52a0\u51fa\u5f02\u53f7\uff09\u7684\u5904\u7406 \uff08\u6700\u540e\u4e00\u4f4d Cin xor Cout = 1\uff09</p> <ul> <li> <p>ALU detection</p> <ul> <li>Exception</li> </ul> </li> <li> <p>Overflow log</p> <ul> <li>Store instruction address in a special register EPC</li> </ul> </li> <li> <p>Jump to exception handler</p> <ul> <li> <p>Correct &amp; Return</p> </li> <li> <p>Return with error code</p> </li> <li> <p>Abort program</p> </li> </ul> </li> </ul> </li> <li> <p>Addition</p> <ul> <li> <p>Carry Ripple Adder (\u6570\u903b\u8bb2\u8fc7\uff0c\u7565)</p> </li> <li> <p>Carry Lookahead Adder (CLA)</p> <ul> <li> <p>Generate: Gi = Ai &amp; Bi</p> </li> <li> <p>Propagate: Pi = Ai | Bi</p> </li> <li> <p>Carry: Ci = Gi | (Pi &amp; Ci-1) </p> <p>\u5c06\u9012\u63a8\u5f0f\u4e0d\u65ad\u5c55\u5f00\uff0c\u53ef\u4ee5\u5f97\u5230\u6bcf\u4e00\u4e2aCi\u7684\u8868\u8fbe\u5f0f\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5e76\u884c\u8fdb\u884c\u6bcf\u4e00\u4f4d\u7684\u8ba1\u7b97\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u901f\u5ea6</p> <p>\u4e0d\u8fc7\u968f\u7740\u4f4d\u6570\u7684\u4e0d\u65ad\u589e\u52a0\uff0c\u786c\u4ef6\u590d\u6742\u5ea6\u4e5f\u4f1a\u4e0d\u65ad\u589e\u52a0\uff0c\u56e0\u6b64\u5b9e\u9645\u4e0a\u5c06\u4f1a\u6bcf4\u4f4d\u6216\u80058\u4f4d\u4f5c\u4e3a\u4e00\u4e2a\u5355\u5143\uff0c\u7136\u540e\u518d\u8fdb\u884c\u5e76\u884c\u8ba1\u7b97</p> <p></p> <p>\u5982\u4e0a\u56fe\uff0c\u6839\u636e\u8f93\u5165\uff0c\u901a\u8fc7\u6bcf\u4e2a\u5c0f\u5355\u5143\u91cc\u7684CLA \u53ef\u4ee5\u7b97\u51fa\u6bcf\u4e2a\u5c0f pi, gi</p> <p>\u7136\u540e\u8fdb\u4e00\u6b65\uff0c\u53ef\u4ee5\u5f97\u51fa\u6bcf\u4e2a\u5927\u7684 Pi, Gi, \u7136\u540e\u901a\u8fc7\u5927\u7684 CLA \u53ef\u4ee5\u5f97\u51fa\u6bcf\u4e2a\u5927\u7684 Ci</p> <p>\u8fd9\u4e2aCi\u518d\u4f20\u5165\u6bcf\u4e2a\u5c0f\u7684 CLA\uff0c \u5c31\u53ef\u4ee5\u7b97\u51fa\u6700\u7ec8\u7684\u7ed3\u679c\u4e86</p> </li> </ul> </li> <li> <p>Carry Select Adder (CSA)</p> <ul> <li> <p>\u5229\u7528 \u9884\u6d4b &amp; \u5197\u4f59\u7684\u65b9\u6cd5</p> </li> <li> <p>\u76f8\u5f53\u4e8e\u5bf9\u4e0a\u8ff0CLA\u7684\u4e00\u4e2a\u6539\u8fdb\uff0c\u9884\u5148\u5c06 Cin = 0 / 1 \u7684\u53ef\u80fd\u503c\u90fd\u7b97\u51fa\u6765\uff0c\u7136\u540e\u6839\u636e\u8f93\u5165\u7684 Cin \u9009\u62e9\u5176\u4e2d\u4e00\u4e2a  </p> </li> </ul> </li> <li> <p>slt (set less than)</p> <ul> <li>a &lt; b --&gt; a - b &lt; 0 </li> </ul> </li> </ul> </li> <li> <p>Multiplier &amp;&amp; Division</p> </li> </ul> <p>\u4f6c\u7684\u7b14\u8bb0\u5f88\u8be6\u7ec6\u4e86</p> <p>\u6838\u5fc3\u5c31\u662f\u5145\u5206\u5229\u7528\u7ed3\u679c\u5bc4\u5b58\u5668\uff0c\u5c06 \u4e58\u6570 / \u88ab\u9664\u6570 \u653e\u5230\u5bc4\u5b58\u5668\u7684\u53f3\u534a\u5197\u4f59\u90e8\u5206\u8fdb\u884c\u8fd0\u7b97\uff0c\u5e76\u4e14\u53d8\u4e58\u9664\u6cd5\u4e3a\u52a0\u51cf\u6cd5</p> <p>Booth \u7b97\u6cd5\uff0c\u51cf\u5c11\u201c1\u201d \u7684\u4e2a\u6570\uff0c\u63d0\u9ad8\u6548\u7387\uff0c\u6bcf\u4e00\u4e32\u201d1\u201c\u53ea\u9700\u8981\u8fd0\u7b97\u4e24\u6b21</p> <ul> <li> <p>Float</p> <p>\u5404\u79cd\u8bfe\u8bb2\u8fc7\u5f88\u591a\u6b21\u4e86\uff0c\u7565</p> <p>\u7279\u6b8a\u6807\u8bb0\uff1a</p> <p></p> <ul> <li> <p>Accurate Arithmetic</p> <ul> <li> <p>guard bit</p> <ul> <li>\u7cbe\u786e\u4f4d\u6570\u53f3\u8fb9\u7684\u4e00\u4f4d</li> </ul> </li> <li> <p>round bit</p> <ul> <li>\u7cbe\u786e\u4f4d\u6570\u53f3\u8fb9\u7684\u7b2c\u4e8c\u4f4d </li> </ul> </li> <li> <p>sticky bit </p> <ul> <li>\u7cbe\u786e\u4f4d\u6570\u53f3\u8fb9\u7684\u7b2c\u4e09\u4f4d\u53ca\u4ee5\u540e\u7684\u4f4d\u6570\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u4e3a1\uff0c\u5c31\u7f6e\u4e3a1</li> </ul> </li> <li> <p>method</p> <p> </p> </li> </ul> </li> </ul> </li> </ul>"}]}